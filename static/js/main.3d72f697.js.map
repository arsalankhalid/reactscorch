{"version":3,"sources":["../static/js/main.3d72f697.js","../webpack/bootstrap ef00486a98d05a0691af","../node_modules/react/index.js","../node_modules/webpack/buildin/global.js","../node_modules/object-assign/index.js","../node_modules/react-scripts/node_modules/promise/lib/core.js","../node_modules/fbjs/lib/invariant.js","../node_modules/fbjs/lib/emptyObject.js","../node_modules/fbjs/lib/emptyFunction.js","../node_modules/react-scripts/config/polyfills.js","../node_modules/react-scripts/node_modules/promise/lib/rejection-tracking.js","../node_modules/asap/browser-raw.js","../node_modules/react-scripts/node_modules/promise/lib/es6-extensions.js","../node_modules/react-scripts/node_modules/whatwg-fetch/fetch.js","index.js","../node_modules/react/cjs/react.production.min.js","../node_modules/react-dom/index.js","../node_modules/react-dom/cjs/react-dom.production.min.js","../node_modules/fbjs/lib/ExecutionEnvironment.js","../node_modules/fbjs/lib/getActiveElement.js","../node_modules/fbjs/lib/shallowEqual.js","../node_modules/fbjs/lib/containsNode.js","../node_modules/fbjs/lib/isTextNode.js","../node_modules/fbjs/lib/isNode.js","App.js","svg-rocket.svg","Board.js","../node_modules/matter-js/build/matter.js","../node_modules/poly-decomp/src/index.js","registerServiceWorker.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","g","this","Function","eval","e","window","toObject","val","undefined","TypeError","getOwnPropertySymbols","propIsEnumerable","propertyIsEnumerable","assign","test1","String","getOwnPropertyNames","test2","fromCharCode","map","join","test3","split","forEach","letter","keys","err","target","source","from","symbols","to","arguments","length","key","noop","getThen","obj","then","ex","LAST_ERROR","IS_ERROR","tryCallOne","fn","a","tryCallTwo","b","Promise","_75","_83","_18","_38","doResolve","safeThen","self","onFulfilled","onRejected","constructor","resolve","reject","res","handle","Handler","deferred","_47","push","handleResolved","asap","cb","promise","ret","newValue","finale","bind","_71","done","value","reason","_44","invariant","condition","format","f","validateFormat","error","Error","args","argIndex","replace","framesToPop","emptyObject","makeEmptyFunction","arg","emptyFunction","thatReturns","thatReturnsFalse","thatReturnsTrue","thatReturnsNull","thatReturnsThis","thatReturnsArgument","enable","disable","enabled","options","onUnhandled","id","allRejections","matchWhitelist","rejections","whitelist","DEFAULT_WHITELIST","displayId","logged","logError","onHandled","console","warn","_56","clearTimeout","timeout","setTimeout","stack","line","list","some","cls","ReferenceError","RangeError","global","rawAsap","task","queue","requestFlush","flushing","flush","index","currentIndex","capacity","scan","newLength","makeRequestCallFromTimer","callback","handleTimer","timeoutHandle","clearInterval","intervalHandle","setInterval","scope","BrowserMutationObserver","MutationObserver","WebKitMutationObserver","toggle","observer","node","document","createTextNode","observe","characterData","data","valuePromise","TRUE","FALSE","NULL","UNDEFINED","ZERO","EMPTYSTRING","all","arr","Array","slice","remaining","race","values","normalizeName","test","toLowerCase","normalizeValue","iteratorFor","items","iterator","next","shift","support","iterable","Symbol","Headers","headers","append","isArray","header","consumed","body","bodyUsed","fileReaderReady","reader","onload","result","onerror","readBlobAsArrayBuffer","blob","FileReader","readAsArrayBuffer","readBlobAsText","readAsText","readArrayBufferAsText","buf","view","Uint8Array","chars","bufferClone","byteLength","set","buffer","Body","_initBody","_bodyInit","_bodyText","Blob","isPrototypeOf","_bodyBlob","formData","FormData","_bodyFormData","searchParams","URLSearchParams","toString","arrayBuffer","isDataView","_bodyArrayBuffer","ArrayBuffer","isArrayBufferView","type","rejected","text","decode","json","JSON","parse","normalizeMethod","method","upcased","toUpperCase","methods","indexOf","Request","input","url","credentials","mode","referrer","form","trim","bytes","decodeURIComponent","parseHeaders","rawHeaders","parts","Response","bodyInit","status","ok","statusText","fetch","viewClasses","DataView","isView","oldValue","has","thisArg","entries","clone","response","redirectStatuses","redirect","location","init","request","xhr","XMLHttpRequest","getAllResponseHeaders","responseURL","responseText","ontimeout","open","withCredentials","responseType","setRequestHeader","send","polyfill","__webpack_exports__","__WEBPACK_IMPORTED_MODULE_0_react__","__WEBPACK_IMPORTED_MODULE_0_react___default","__WEBPACK_IMPORTED_MODULE_1_react_dom__","__WEBPACK_IMPORTED_MODULE_1_react_dom___default","__WEBPACK_IMPORTED_MODULE_2__index_css__","__WEBPACK_IMPORTED_MODULE_3__App__","__WEBPACK_IMPORTED_MODULE_4__registerServiceWorker__","render","createElement","getElementById","D","encodeURIComponent","F","props","context","refs","updater","E","G","H","M","h","ref","K","L","children","defaultProps","$$typeof","t","_owner","J","current","N","escape","=",":","Q","P","pop","keyPrefix","func","count","R","S","u","T","C","U","V","W","q","O","k","r","for","v","w","x","y","z","A","B","isMounted","enqueueForceUpdate","enqueueReplaceState","enqueueSetState","isReactComponent","setState","forceUpdate","I","isPureReactComponent","__self","__source","X","Children","toArray","only","createRef","Component","PureComponent","createContext","_calculateChangedBits","_defaultValue","_currentValue","_currentValue2","_changedBits","_changedBits2","Provider","Consumer","_context","forwardRef","Fragment","StrictMode","unstable_AsyncMode","unstable_Profiler","cloneElement","createFactory","isValidElement","version","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","Y","default","Z","checkDCE","__REACT_DEVTOOLS_GLOBAL_HOOK__","aa","ia","_hasCaughtError","_caughtError","apply","ka","_hasRethrowError","_rethrowError","na","la","ma","oa","extractEvents","eventTypes","pa","phasedRegistrationNames","qa","registrationName","ra","sa","dependencies","ta","ua","za","currentTarget","ya","invokeGuardedCallbackAndCatchFirstError","Aa","concat","Ba","Da","_dispatchListeners","_dispatchInstances","isPropagationStopped","isPersistent","release","Ea","Fa","Ha","stateNode","wa","disabled","Ia","Ca","rethrowCaughtError","Ja","Na","parentNode","tag","Oa","Pa","Ma","return","Ra","Sa","dispatchConfig","Ta","_targetInst","Ua","Va","Xa","Ya","Za","alternate","ab","eb","bb","db","lb","kb","canUseDOM","documentElement","mb","_fallbackText","_startText","nb","_root","nativeEvent","Interface","isDefaultPrevented","defaultPrevented","returnValue","rb","eventPool","sb","destructor","qb","getPooled","Db","vb","keyCode","Eb","detail","Gb","which","Cb","Ab","Hb","Fb","wb","ctrlKey","altKey","metaKey","char","zb","Nb","xa","Jb","restoreControlledState","Ob","Lb","Mb","Pb","Qb","Sb","Tb","Ub","Wb","Vb","Yb","nodeName","Xb","Zb","srcElement","correspondingUseElement","nodeType","$b","setAttribute","ac","bc","getOwnPropertyDescriptor","getValue","setValue","stopTracking","_valueTracker","cc","dc","checked","tc","sc","uc","displayName","pc","mc","ic","hc","kc","pendingProps","lc","jc","rc","qc","vc","_debugOwner","_debugSource","fileName","lineNumber","Ac","zc","xc","wc","Bc","acceptsBooleans","Cc","isNaN","attributeName","attributeNamespace","mustUseProperty","propertyName","Ec","Fc","removeAttribute","setAttributeNS","Gc","defaultChecked","defaultValue","_wrapperState","initialChecked","Hc","Ic","initialValue","controlled","Jc","Kc","Lc","Mc","ownerDocument","activeElement","Oc","Nc","change","Rc","Sc","Tc","Vc","Pc","detachEvent","Wc","Qc","Xc","attachEvent","Yc","Zc","$c","dd","getModifierState","cd","ed","jd","effectTag","kd","ld","child","sibling","md","nd","rd","charCode","Cd","bubbled","captured","isInteractive","Ad","Bd","Gd","targetInst","ancestors","containerInfo","topLevelType","Id","Hd","Ed","Kd","Ld","addEventListener","Md","Fd","Rd","Qd","Pd","Od","Sd","firstChild","Td","textContent","offset","nextSibling","Ud","contentEditable","ae","$d","Xd","da","start","selectionStart","end","selectionEnd","getSelection","anchorNode","anchorOffset","focusNode","focusOffset","Zd","ea","Wd","select","Yd","xe","ba","ye","ze","selected","defaultSelected","Ae","wasMultiple","multiple","Be","dangerouslySetInnerHTML","Ce","De","Ee","Ge","He","Ke","lastChild","nodeValue","Ne","style","Le","setProperty","Pe","Oe","Qe","is","Se","blur","focus","jb","Te","Fe","html","innerHTML","removeChild","createElementNS","Ue","Ve","Re","__html","Je","onClick","onclick","We","Xe","Ye","Ze","cf","autoFocus","df","hf","jf","mf","lf","kf","pf","qf","of","nf","rf","contextTypes","ha","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","childContextTypes","sf","tf","uf","vf","getChildContext","wf","__reactInternalMemoizedMergedChildContext","xf","yf","memoizedState","updateQueue","memoizedProps","lastEffect","firstEffect","nextEffect","expirationTime","zf","Af","Bf","Cf","Df","pendingChildren","implementation","Ef","earliestPendingTime","latestPendingTime","earliestSuspendedTime","latestSuspendedTime","latestPingedTime","pendingCommitExpirationTime","finishedWork","pendingContext","hydrate","remainingExpirationTime","firstBatch","nextScheduledRoot","Hf","If","isDisabled","supportsFiber","inject","Ff","onCommitFiberRoot","Gf","onCommitFiberUnmount","Jf","Kf","Mf","baseState","firstUpdate","lastUpdate","firstCapturedUpdate","lastCapturedUpdate","firstCapturedEffect","lastCapturedEffect","Nf","Of","payload","Pf","Qf","Rf","Sf","Tf","Lf","Uf","Vf","Wf","Xf","ag","$f","Zf","Yf","bg","gg","cg","ig","fg","eg","dg","namespaceURI","tagName","jg","kg","lg","qg","shouldComponentUpdate","rg","state","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","pg","sg","getDerivedStateFromProps","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","componentDidMount","ug","_stringRef","vg","wg","Map","gc","tg","nc","Jd","delete","Cg","Dg","Eg","Bg","Ag","zg","Fg","Gg","Hg","Ig","yg","xg","Jg","Kg","ec","Lg","Mg","Qg","Rg","_reactInternalFiber","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","element","hidden","unstable_observedBits","Sg","Wg","Tg","Ug","appendChild","Vg","Xg","suppressReactErrorLogging","Yg","Zg","$g","componentWillUnmount","ah","bh","ch","insertBefore","dh","eh","fh","gh","componentDidCatch","hh","Set","add","componentStack","ih","jh","vh","qh","rh","sh","uh","wh","xh","yh","ph","lh","zh","mh","Ah","Bh","th","getDerivedStateFromCatch","og","Ch","mg","nh","ng","oh","Dh","Eh","Fh","Gh","ef","kh","Hh","Ih","Th","Kh","Lh","gf","ff","Uh","Jh","Qh","Vh","Wh","Xh","Yh","Ph","Mh","Zh","$h","Rh","_onComplete","Nh","Oh","ai","_expirationTime","_defer","af","rangeCount","Wa","bf","focusedElem","selectionRange","ja","mi","__reactInternalSnapshotBeforeUpdate","fa","Math","min","extend","createRange","setStart","removeAllRanges","addRange","setEnd","left","scrollLeft","top","scrollTop","hg","oc","ca","wi","xi","Ng","Og","yi","yc","Pg","zi","timeRemaining","Sh","bi","ci","di","ei","fi","gi","hi","ii","ji","ki","findFiberByHostInstance","findHostInstanceByFiber","ni","oi","_callbacks","_next","_hasChildren","_didComplete","_children","pi","_didCommit","_onCommit","qi","_internalRoot","ri","si","hasAttribute","ti","_reactRootContainer","legacy_renderSubtreeIntoContainer","ui","invokeGuardedCallback","hasCaughtError","clearCaughtError","va","plugins","eventNameDispatchConfigs","registrationNameModules","registrationNameDependencies","possibleRegistrationNames","injectEventPluginOrder","injectEventPluginsByName","Ga","Ka","injection","getListener","runEventsInBatch","runExtractedEventsInBatch","La","random","Qa","precacheFiberNode","getClosestInstanceFromNode","getInstanceFromNode","getNodeFromInstance","getFiberCurrentPropsFromNode","updateFiberProps","$a","accumulateTwoPhaseDispatches","accumulateTwoPhaseDispatchesSkipTarget","accumulateEnterLeaveDispatches","accumulateDirectDispatches","animationend","animationiteration","animationstart","transitionend","animation","transition","fb","gb","hb","ib","ob","pb","eventPhase","bubbles","cancelable","timeStamp","Date","now","isTrusted","preventDefault","stopPropagation","cancelBubble","persist","tb","ub","xb","documentMode","yb","Bb","beforeInput","compositionEnd","compositionStart","compositionUpdate","Ib","Kb","injectFiberControlledHostComponent","Rb","enqueueStateRestore","needsStateRestore","restoreStateIfNeeded","color","date","datetime","datetime-local","email","month","number","password","range","search","tel","time","week","fc","Dc","tabIndex","Uc","ad","_isInputEventSupported","bd","Alt","Control","Meta","Shift","fd","screenX","screenY","clientX","clientY","pageX","pageY","shiftKey","button","buttons","relatedTarget","fromElement","toElement","gd","pointerId","width","height","pressure","tiltX","tiltY","pointerType","isPrimary","hd","mouseEnter","mouseLeave","pointerEnter","pointerLeave","defaultView","parentWindow","od","animationName","elapsedTime","pseudoElement","pd","clipboardData","qd","sd","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","td","8","9","12","13","16","17","18","19","20","27","32","33","34","35","36","37","38","39","40","45","46","112","113","114","115","116","117","118","119","120","121","122","123","144","145","224","ud","repeat","locale","vd","dataTransfer","wd","touches","targetTouches","changedTouches","xd","yd","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","zd","Dd","isInteractiveTopLevelEventType","Nd","_enabled","setEnabled","isEnabled","trapBubbledEvent","trapCapturedEvent","dispatchEvent","Vd","be","onSelect","SimpleEventPlugin","EnterLeaveEventPlugin","ChangeEventPlugin","SelectEventPlugin","BeforeInputEventPlugin","ce","requestAnimationFrame","de","ee","fe","ge","performance","he","ie","je","ke","le","me","ne","oe","pe","qe","re","se","didTimeout","ue","scheduledCallback","postMessage","te","timeoutTime","ve","prev","we","Infinity","mathml","svg","Ie","MSApp","execUnsafeLocalFunction","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","Me","charAt","substring","menuitem","area","base","br","col","embed","hr","img","keygen","link","meta","param","track","wbr","$e","setInitialProperties","diffProperties","updateProperties","diffHydratedProperties","diffHydratedText","warnForUnmatchedText","warnForDeletedHydratableElement","warnForDeletedHydratableText","warnForInsertedHydratedElement","warnForInsertedHydratedText","querySelectorAll","stringify","li","updateContainerAtExpirationTime","createContainer","updateContainer","flushRoot","requestWork","computeUniqueAsyncExpiration","batchedUpdates","unbatchedUpdates","deferredUpdates","syncUpdates","interactiveUpdates","flushInteractiveUpdates","flushControlled","flushSync","getPublicRootInstance","findHostInstance","findHostInstanceWithNoPortals","injectIntoDevTools","commit","unmount","createBatch","vi","createPortal","findDOMNode","unstable_renderSubtreeIntoContainer","unmountComponentAtNode","unstable_createPortal","unstable_batchedUpdates","unstable_deferredUpdates","unstable_interactiveUpdates","unstable_flushControlled","EventPluginHub","EventPluginRegistry","EventPropagators","ReactControlledComponent","ReactDOMComponentTree","ReactDOMEventListener","unstable_createRoot","bundleType","rendererPackageName","Ai","Bi","ExecutionEnvironment","canUseWorkers","Worker","canUseEventListeners","canUseViewport","screen","isInWorker","getActiveElement","doc","shallowEqual","objA","objB","keysA","keysB","containsNode","outerNode","innerNode","isTextNode","contains","compareDocumentPosition","isNode","Node","_classCallCheck","instance","Constructor","_possibleConstructorReturn","_inherits","subClass","superClass","create","writable","setPrototypeOf","__proto__","__WEBPACK_IMPORTED_MODULE_1__svg_rocket_svg__","__WEBPACK_IMPORTED_MODULE_1__svg_rocket_svg___default","__WEBPACK_IMPORTED_MODULE_2__App_css__","__WEBPACK_IMPORTED_MODULE_3__Board_js__","_createClass","defineProperties","descriptor","protoProps","staticProps","App","_Component","getPrototypeOf","className","src","alt","__WEBPACK_IMPORTED_MODULE_1__App_css__","__WEBPACK_IMPORTED_MODULE_2_matter_js__","__WEBPACK_IMPORTED_MODULE_2_matter_js___default","decomp","Board","_ref","_temp","_this","_ret","_len","_key","initialAngle","turn","angleA","angleB","forceA","forceB","gameOver","canvasRef","size","scale","bullet","collisionCount","inFlight","initMJS","Engine","Render","World","Events","Bodies","engine","wireframes","background","getRandomColor","bodies","baseGround","rectangle","isStatic","label","fillStyle","leftWall","rightWall","modifier","maxElements","floor","maxHeight","j","rect","playerA","circle","sprite","texture","xScale","yScale","playerB","world","run","on","onCollision","pair","pairs","bodyA","startsWith","bodyB","setStatic","setAngle","nextTurn","remove","onAngleChange","PI","onForceChange","onAttack","readyToAttack","player","getPlayer","position","setVelocity","getVelocity","prevState","getAngle","getForce","cos","sin","angle","force","controls","max","step","onChange","won","require","code","1","_dereq_","Vertices","Vector","Sleeping","Common","Bounds","Axes","_inertiaScale","_nextCollidingGroupId","_nextNonCollidingGroupId","_nextCategory","defaults","nextId","plugin","vertices","fromPath","torque","positionImpulse","constraintImpulse","totalContacts","speed","angularSpeed","velocity","angularVelocity","isSensor","isSleeping","motion","sleepThreshold","density","restitution","friction","frictionStatic","frictionAir","collisionFilter","category","mask","group","slop","timeScale","visible","xOffset","yOffset","lineWidth","_initProperties","nextGroup","isNonColliding","nextCategory","bounds","positionPrev","anglePrev","parent","rotate","axes","update","mass","inertia","defaultFillStyle","choose","strokeStyle","settings","setMass","setDensity","setInertia","setVertices","setPosition","setAngularVelocity","setParts","part","_original","inverseMass","inverseInertia","moment","fromVertices","centre","translate","autoHull","clockwiseSort","hull","hullCentre","total","_totalProperties","delta","sub","rotateAbout","magnitude","abs","translation","rotation","point","dx","dy","scaleX","scaleY","totalArea","totalInertia","circleRadius","deltaTime","correction","deltaTimeSquared","pow","velocityPrevX","velocityPrevY","applyForce","properties","mult","div","../core/Common","../core/Sleeping","../geometry/Axes","../geometry/Bounds","../geometry/Vector","../geometry/Vertices","../render/Render","2","Composite","isModified","constraints","composites","setModified","composite","updateParents","updateChildren","childComposite","objects","trigger","addBody","addConstraint","addComposite","constraint","deep","removeBody","removeConstraint","removeComposite","compositeA","compositeB","removeCompositeAt","splice","removeBodyAt","removeConstraintAt","clear","keepStatic","filter","allBodies","allConstraints","allComposites","move","rebase","recursive","../core/Events","./Body","3","gravity","../constraint/Constraint","./Composite","4","Contact","vertex","normalImpulse","tangentImpulse","5","Detector","SAT","Pair","collisions","broadphasePairs","pairsTable","table","canCollide","overlaps","partA","partB","previousCollision","pairId","isActive","collision","collides","collided","filterA","filterB","./Pair","./SAT","6","Grid","controller","detector","buckets","pairsList","bucketWidth","bucketHeight","grid","row","bucket","bucketId","gridChanged","newRegion","_getRegion","region","union","_regionUnion","startCol","endCol","startRow","endRow","_getBucketId","isInsideNewRegion","isInsideOldRegion","_bucketRemoveBody","_createBucket","_bucketAddBody","_createActivePairsList","regionA","regionB","_createRegion","column","pairKeys","./Detector","7","timestamp","parentA","parentB","contacts","activeContacts","separation","timeCreated","timeUpdated","supports","contactId","contact","depth","setActive","./Contact","Pairs","_pairMaxIdleLife","collisionStart","collisionActive","collisionEnd","activePairIds","removeOld","pairIndex","indexesToRemove","Query","ray","startPoint","endPoint","rayWidth","rayAngle","rayLength","rayX","rayY","outside","../factory/Bodies","10","Resolver","_restingThresh","_restingThreshTangent","_positionDampen","_positionWarming","_frictionNormalMultiplier","preSolvePosition","activeCount","solvePosition","normal","bodyBtoA","contactShare","tempA","tempB","tempC","tempD","penetration","dot","postSolvePosition","preSolveVelocity","tangent","contactVertex","impulse","cross","solveVelocity","timeScaleSquared","tempE","offsetA","offsetB","velocityPointA","perp","velocityPointB","relativeVelocity","normalVelocity","tangentVelocity","tangentSpeed","tangentVelocityDirection","sign","normalForce","clamp","maxFriction","oAcN","oBcN","share","contactNormalImpulse","contactTangentImpulse","11","overlapAB","overlapBA","minOverlap","canReusePrevCol","axisBodyA","axisBody","axisBodyB","axisNumber","_overlapAxes","reused","overlap","axis","verticesB","_findSupports","verticesA","neg","projectionA","projectionB","Number","MAX_VALUE","_projectToAxis","projection","distance","vertexA","vertexB","nearestDistance","vertexToBody","bodyAPosition","Constraint","_warming","_torqueDampen","_minLength","pointA","pointB","initialPointA","initialPointB","stiffness","damping","angularStiffness","anchors","preSolveAll","solveAll","fixedA","fixedB","solve","pointAWorld","pointBWorld","currentLength","difference","massTotal","inertiaTotal","resistanceTotal","zero","postSolveAll","MouseConstraint","Mouse","mouse","canvas","mouseConstraint","_triggerEvents","mouseEvents","sourceEvents","mousemove","mousedown","mouseup","clearSourceEvents","../body/Composite","../collision/Detector","../core/Mouse","./Constraint","14","_nextId","_seed","_nowStartTime","argsStart","deepClone","prop","path","begin","shuffle","array","temp","choices","isElement","HTMLElement","isFunction","isPlainObject","isString","webkitNow","_seededRandom","colorToNumber","colorString","parseInt","logLevel","log","info","haystack","needle","mapped","topologicalSort","graph","visited","_topologicalSort","neighbors","neighbor","chain","funcs","_chained","lastResult","chainPathBefore","chainPathAfter","_requireGlobal","globalName","moduleName","15","positionIterations","velocityIterations","constraintIterations","enableSleeping","events","timing","broadphase","renderDefaults","metrics","extended","event","_bodiesApplyGravity","_bodiesUpdate","afterCollisions","_bodiesClearForces","merge","engineA","engineB","gravityScale","worldBounds","../body/Body","../body/World","../collision/Grid","../collision/Pairs","../collision/Resolver","./Common","./Events","./Metrics","./Sleeping","eventNames","names","off","callbacks","newCallbacks","eventClone","Matter","Plugin","uses","used","use","before","after","./Plugin","absolute","mousedownPosition","mouseupPosition","pixelRatio","getAttribute","mousewheel","_getRelativeMousePosition","setElement","setOffset","setScale","elementBounds","getBoundingClientRect","rootNode","scrollX","pageXOffset","scrollY","pageYOffset","clientWidth","clientHeight","_registry","register","isPlugin","registered","pluginVersion","versionParse","registeredVersion","dependency","dependencyParse","install","isUsed","isFor","parsed","versionSatisfies","sortedDependencies","_warned","tracked","parsedBase","resolved","identifiers","isRange","substr","operator","prerelease","rangeParsed","rangeParts","versionParsed","versionParts","21","Runner","_requestAnimationFrame","_cancelAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","msRequestAnimationFrame","cancelAnimationFrame","mozCancelAnimationFrame","webkitCancelAnimationFrame","msCancelAnimationFrame","_frameTimeout","fps","deltaSampleSize","counterTimestamp","frameCounter","deltaHistory","timePrev","timeScalePrev","frameRequestId","isFixed","runner","deltaMin","deltaMax","tick","stop","./Engine","22","_motionWakeThreshold","_motionSleepThreshold","_minBias","timeFactor","minMotion","maxMotion","sleepCounter","sleepingBody","movingBody","wasSleeping","23","chamfer","radius","quality","qualityMin","qualityMax","trapezoid","slope","verticesPath","roof","x1","x2","x3","maxSides","sides","ceil","polygon","theta","xx","yy","toFixed","vertexSets","flagInternal","removeCollinear","minimumArea","isConvex","concave","makeCCW","removeCollinearPoints","decomposed","quickDecomp","chunk","chunkVertices","pav","pbv","magnitudeSquared","isInternal","24","Composites","rows","columnGap","rowGap","lastBody","bodyHeight","bodyWidth","xOffsetA","yOffsetA","xOffsetB","yOffsetB","bodyAHeight","bodyAWidth","bodyBHeight","bodyBWidth","mesh","crossBrace","bodyC","pyramid","actualRows","lastBodyWidth","newtonsCradle","car","wheelSize","wheelAOffset","wheelBOffset","wheelA","wheelB","axelA","axelB","softBody","particleRadius","particleOptions","constraintOptions","./Bodies","25","normalise","gradient","26","boundsA","boundsB","vector","Svg","pathToVertices","sampleLength","il","segment","segments","segmentsQueue","lastSegment","lastPoint","segmentIndex","lx","ly","points","addPoint","px","py","pathSegType","isRelative","addSegmentPoint","segType","pathSegTypeAsLetter","_svgPathToAbsolute","getTotalLength","pathSegList","numberOfItems","getItem","getPathSegAtLength","getPointAtLength","x0","y0","y1","y2","segs","len","seg","replaceItem","createSVGPathSegMovetoAbs","createSVGPathSegLinetoAbs","createSVGPathSegLinetoHorizontalAbs","createSVGPathSegLinetoVerticalAbs","createSVGPathSegCurvetoCubicAbs","createSVGPathSegCurvetoCubicSmoothAbs","createSVGPathSegCurvetoQuadraticAbs","createSVGPathSegCurvetoQuadraticSmoothAbs","createSVGPathSegArcAbs","r1","r2","largeArcFlag","sweepFlag","28","sqrt","output","vectorA","vectorB","cross3","vectorC","scalar","negate","atan2","29","pathPattern","match","parseFloat","mean","average","signed","numerator","denominator","vertice","nextVertice","newVertices","prevVertex","nextVertex","currentRadius","prevNormal","nextNormal","diagonalRadius","radiusVector","midNormal","scaledVertex","precision","alpha","acos","sort","flag","upper","lower","30","RenderPixi","../collision/Contact","../collision/Pair","../collision/Query","../collision/SAT","../constraint/MouseConstraint","../core/Engine","../core/Matter","../core/Metrics","../core/Plugin","../core/Runner","../factory/Composites","../geometry/Svg","../render/RenderPixi","31","wireframeBackground","hasBounds","showSleeping","showDebug","showBroadphase","showBounds","showVelocity","showCollisions","showSeparations","showAxes","showPositions","showAngleIndicator","showIds","showShadows","showVertexNumbers","showConvexHulls","showInternalEdges","showMousePosition","_createCanvas","getContext","textures","setPixelRatio","loop","_getPixelRatio","lookAt","padding","center","viewHeight","viewWidth","outerRatio","innerRatio","startViewTransform","boundsWidth","boundsHeight","boundsScaleX","boundsScaleY","endViewTransform","setTransform","currentBackground","_applyBackground","globalCompositeOperation","fillRect","bodyConvexHulls","bodyWireframes","bodyBounds","bodyAxes","bodyPositions","bodyVelocity","bodyIds","separations","vertexNumbers","mousePosition","debug","debugTimestamp","round","debugString","font","fillText","beginPath","arc","closePath","moveTo","coils","lineTo","stroke","fill","bodyShadows","distanceX","distanceY","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","globalAlpha","_getTexture","drawImage","normalPosX","normalPosY","bucketKeys","inspector","item","setLineDash","selectStart","selectBounds","oncontextmenu","onselectstart","devicePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","imagePath","image","Image","cssBackground","backgroundSize","renderer","container","spriteContainer","pixiOptions","transparent","antialias","backgroundColor","PIXI","WebGLRenderer","Container","sprites","primitives","addChild","bgSprite","addChildAt","setBackground","isColor","Sprite","constraintRender","primitiveId","primitive","Graphics","beginFill","lineStyle","endFill","bodyRender","spriteId","_createBodySprite","_createBodyPrimitive","texturePath","anchor","strokeStyleIndicator","strokeStyleWireframe","strokeStyleWireframeIndicator","Texture","fromImage","lineInt","l1","l2","a1","b1","c1","a2","b2","c2","det","scalar_eq","lineSegmentsIntersect","p1","p2","q1","q2","triangleArea","isLeft","isLeftOn","isRight","isRightOn","collinear","thresholdAngle","tmpPoint1","tmpPoint2","magA","magB","sqdist","polygonAt","polygonClear","polygonAppend","poly","polygonMakeCCW","polygonReverse","tmp","polygonIsReflex","polygonCanSee","dist","tmpLine1","tmpLine2","polygonCopy","targetPoly","polygonGetCutEdges","tmp1","tmp2","tmpPoly","nDiags","polygonDecomp","edges","polygonSlice","cutEdges","polys","cutEdge","polygonIsSimple","getIntersectionPoint","polygonQuickDecomp","reflexVertices","steinerPoints","maxlevel","level","upperInt","lowerInt","upperDist","lowerDist","closestDist","upperIndex","lowerIndex","closestIndex","lowerPoly","upperPoly","polygonRemoveCollinearPoints","num","isSimple","navigator","URL","origin","swUrl","isLocalhost","checkValidServiceWorker","serviceWorker","ready","registerValidSW","registration","onupdatefound","installingWorker","installing","onstatechange","catch","unregister","reload","Boolean","hostname"],"mappings":"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","file":"static/js/main.3d72f697.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/reactscorch/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 8);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nif (true) {\n  module.exports = __webpack_require__(15);\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\nvar g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\n} catch(e) {\n\t// This works if the window reference is available\n\tif(typeof window === \"object\")\n\t\tg = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar asap = __webpack_require__(11);\n\nfunction noop() {}\n\n// States:\n//\n// 0 - pending\n// 1 - fulfilled with _value\n// 2 - rejected with _value\n// 3 - adopted the state of another promise, _value\n//\n// once the state is no longer pending (0) it is immutable\n\n// All `_` prefixed properties will be reduced to `_{random number}`\n// at build time to obfuscate them and discourage their use.\n// We don't use symbols or Object.defineProperty to fully hide them\n// because the performance isn't good enough.\n\n\n// to avoid using try/catch inside critical functions, we\n// extract them to here.\nvar LAST_ERROR = null;\nvar IS_ERROR = {};\nfunction getThen(obj) {\n  try {\n    return obj.then;\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nfunction tryCallOne(fn, a) {\n  try {\n    return fn(a);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\nfunction tryCallTwo(fn, a, b) {\n  try {\n    fn(a, b);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nmodule.exports = Promise;\n\nfunction Promise(fn) {\n  if (typeof this !== 'object') {\n    throw new TypeError('Promises must be constructed via new');\n  }\n  if (typeof fn !== 'function') {\n    throw new TypeError('Promise constructor\\'s argument is not a function');\n  }\n  this._75 = 0;\n  this._83 = 0;\n  this._18 = null;\n  this._38 = null;\n  if (fn === noop) return;\n  doResolve(fn, this);\n}\nPromise._47 = null;\nPromise._71 = null;\nPromise._44 = noop;\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  if (this.constructor !== Promise) {\n    return safeThen(this, onFulfilled, onRejected);\n  }\n  var res = new Promise(noop);\n  handle(this, new Handler(onFulfilled, onRejected, res));\n  return res;\n};\n\nfunction safeThen(self, onFulfilled, onRejected) {\n  return new self.constructor(function (resolve, reject) {\n    var res = new Promise(noop);\n    res.then(resolve, reject);\n    handle(self, new Handler(onFulfilled, onRejected, res));\n  });\n}\nfunction handle(self, deferred) {\n  while (self._83 === 3) {\n    self = self._18;\n  }\n  if (Promise._47) {\n    Promise._47(self);\n  }\n  if (self._83 === 0) {\n    if (self._75 === 0) {\n      self._75 = 1;\n      self._38 = deferred;\n      return;\n    }\n    if (self._75 === 1) {\n      self._75 = 2;\n      self._38 = [self._38, deferred];\n      return;\n    }\n    self._38.push(deferred);\n    return;\n  }\n  handleResolved(self, deferred);\n}\n\nfunction handleResolved(self, deferred) {\n  asap(function() {\n    var cb = self._83 === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      if (self._83 === 1) {\n        resolve(deferred.promise, self._18);\n      } else {\n        reject(deferred.promise, self._18);\n      }\n      return;\n    }\n    var ret = tryCallOne(cb, self._18);\n    if (ret === IS_ERROR) {\n      reject(deferred.promise, LAST_ERROR);\n    } else {\n      resolve(deferred.promise, ret);\n    }\n  });\n}\nfunction resolve(self, newValue) {\n  // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n  if (newValue === self) {\n    return reject(\n      self,\n      new TypeError('A promise cannot be resolved with itself.')\n    );\n  }\n  if (\n    newValue &&\n    (typeof newValue === 'object' || typeof newValue === 'function')\n  ) {\n    var then = getThen(newValue);\n    if (then === IS_ERROR) {\n      return reject(self, LAST_ERROR);\n    }\n    if (\n      then === self.then &&\n      newValue instanceof Promise\n    ) {\n      self._83 = 3;\n      self._18 = newValue;\n      finale(self);\n      return;\n    } else if (typeof then === 'function') {\n      doResolve(then.bind(newValue), self);\n      return;\n    }\n  }\n  self._83 = 1;\n  self._18 = newValue;\n  finale(self);\n}\n\nfunction reject(self, newValue) {\n  self._83 = 2;\n  self._18 = newValue;\n  if (Promise._71) {\n    Promise._71(self, newValue);\n  }\n  finale(self);\n}\nfunction finale(self) {\n  if (self._75 === 1) {\n    handle(self, self._38);\n    self._38 = null;\n  }\n  if (self._75 === 2) {\n    for (var i = 0; i < self._38.length; i++) {\n      handle(self, self._38[i]);\n    }\n    self._38 = null;\n  }\n}\n\nfunction Handler(onFulfilled, onRejected, promise){\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, promise) {\n  var done = false;\n  var res = tryCallTwo(fn, function (value) {\n    if (done) return;\n    done = true;\n    resolve(promise, value);\n  }, function (reason) {\n    if (done) return;\n    done = true;\n    reject(promise, reason);\n  });\n  if (!done && res === IS_ERROR) {\n    done = true;\n    reject(promise, LAST_ERROR);\n  }\n}\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar validateFormat = function validateFormat(format) {};\n\nif (false) {\n  validateFormat = function validateFormat(format) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  };\n}\n\nfunction invariant(condition, format, a, b, c, d, e, f) {\n  validateFormat(format);\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n}\n\nmodule.exports = invariant;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n\n\nvar emptyObject = {};\n\nif (false) {\n  Object.freeze(emptyObject);\n}\n\nmodule.exports = emptyObject;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nfunction makeEmptyFunction(arg) {\n  return function () {\n    return arg;\n  };\n}\n\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\nvar emptyFunction = function emptyFunction() {};\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\nemptyFunction.thatReturnsThis = function () {\n  return this;\n};\nemptyFunction.thatReturnsArgument = function (arg) {\n  return arg;\n};\n\nmodule.exports = emptyFunction;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(9);\nmodule.exports = __webpack_require__(14);\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n// @remove-on-eject-begin\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// @remove-on-eject-end\n\n\nif (typeof Promise === 'undefined') {\n  // Rejection tracking prevents a common issue where React gets into an\n  // inconsistent state due to an error, but it gets swallowed by a Promise,\n  // and the user has no idea what causes React's erratic future behavior.\n  __webpack_require__(10).enable();\n  window.Promise = __webpack_require__(12);\n}\n\n// fetch() polyfill for making API calls.\n__webpack_require__(13);\n\n// Object.assign() is commonly used with React.\n// It will use the native implementation if it's present and isn't buggy.\nObject.assign = __webpack_require__(2);\n\n// In tests, polyfill requestAnimationFrame since jsdom doesn't provide it yet.\n// We don't polyfill it in the browser--this is user's responsibility.\nif (false) {\n  require('raf').polyfill(global);\n}\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar Promise = __webpack_require__(3);\n\nvar DEFAULT_WHITELIST = [\n  ReferenceError,\n  TypeError,\n  RangeError\n];\n\nvar enabled = false;\nexports.disable = disable;\nfunction disable() {\n  enabled = false;\n  Promise._47 = null;\n  Promise._71 = null;\n}\n\nexports.enable = enable;\nfunction enable(options) {\n  options = options || {};\n  if (enabled) disable();\n  enabled = true;\n  var id = 0;\n  var displayId = 0;\n  var rejections = {};\n  Promise._47 = function (promise) {\n    if (\n      promise._83 === 2 && // IS REJECTED\n      rejections[promise._56]\n    ) {\n      if (rejections[promise._56].logged) {\n        onHandled(promise._56);\n      } else {\n        clearTimeout(rejections[promise._56].timeout);\n      }\n      delete rejections[promise._56];\n    }\n  };\n  Promise._71 = function (promise, err) {\n    if (promise._75 === 0) { // not yet handled\n      promise._56 = id++;\n      rejections[promise._56] = {\n        displayId: null,\n        error: err,\n        timeout: setTimeout(\n          onUnhandled.bind(null, promise._56),\n          // For reference errors and type errors, this almost always\n          // means the programmer made a mistake, so log them after just\n          // 100ms\n          // otherwise, wait 2 seconds to see if they get handled\n          matchWhitelist(err, DEFAULT_WHITELIST)\n            ? 100\n            : 2000\n        ),\n        logged: false\n      };\n    }\n  };\n  function onUnhandled(id) {\n    if (\n      options.allRejections ||\n      matchWhitelist(\n        rejections[id].error,\n        options.whitelist || DEFAULT_WHITELIST\n      )\n    ) {\n      rejections[id].displayId = displayId++;\n      if (options.onUnhandled) {\n        rejections[id].logged = true;\n        options.onUnhandled(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      } else {\n        rejections[id].logged = true;\n        logError(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      }\n    }\n  }\n  function onHandled(id) {\n    if (rejections[id].logged) {\n      if (options.onHandled) {\n        options.onHandled(rejections[id].displayId, rejections[id].error);\n      } else if (!rejections[id].onUnhandled) {\n        console.warn(\n          'Promise Rejection Handled (id: ' + rejections[id].displayId + '):'\n        );\n        console.warn(\n          '  This means you can ignore any previous messages of the form \"Possible Unhandled Promise Rejection\" with id ' +\n          rejections[id].displayId + '.'\n        );\n      }\n    }\n  }\n}\n\nfunction logError(id, error) {\n  console.warn('Possible Unhandled Promise Rejection (id: ' + id + '):');\n  var errStr = (error && (error.stack || error)) + '';\n  errStr.split('\\n').forEach(function (line) {\n    console.warn('  ' + line);\n  });\n}\n\nfunction matchWhitelist(error, list) {\n  return list.some(function (cls) {\n    return error instanceof cls;\n  });\n}\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {\n\n// Use the fastest means possible to execute a task in its own turn, with\n// priority over other events including IO, animation, reflow, and redraw\n// events in browsers.\n//\n// An exception thrown by a task will permanently interrupt the processing of\n// subsequent tasks. The higher level `asap` function ensures that if an\n// exception is thrown by a task, that the task queue will continue flushing as\n// soon as possible, but if you use `rawAsap` directly, you are responsible to\n// either ensure that no exceptions are thrown from your task, or to manually\n// call `rawAsap.requestFlush` if an exception is thrown.\nmodule.exports = rawAsap;\nfunction rawAsap(task) {\n    if (!queue.length) {\n        requestFlush();\n        flushing = true;\n    }\n    // Equivalent to push, but avoids a function call.\n    queue[queue.length] = task;\n}\n\nvar queue = [];\n// Once a flush has been requested, no further calls to `requestFlush` are\n// necessary until the next `flush` completes.\nvar flushing = false;\n// `requestFlush` is an implementation-specific method that attempts to kick\n// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n// the event queue before yielding to the browser's own event loop.\nvar requestFlush;\n// The position of the next task to execute in the task queue. This is\n// preserved between calls to `flush` so that it can be resumed if\n// a task throws an exception.\nvar index = 0;\n// If a task schedules additional tasks recursively, the task queue can grow\n// unbounded. To prevent memory exhaustion, the task queue will periodically\n// truncate already-completed tasks.\nvar capacity = 1024;\n\n// The flush function processes all tasks that have been scheduled with\n// `rawAsap` unless and until one of those tasks throws an exception.\n// If a task throws an exception, `flush` ensures that its state will remain\n// consistent and will resume where it left off when called again.\n// However, `flush` does not make any arrangements to be called again if an\n// exception is thrown.\nfunction flush() {\n    while (index < queue.length) {\n        var currentIndex = index;\n        // Advance the index before calling the task. This ensures that we will\n        // begin flushing on the next task the task throws an error.\n        index = index + 1;\n        queue[currentIndex].call();\n        // Prevent leaking memory for long chains of recursive calls to `asap`.\n        // If we call `asap` within tasks scheduled by `asap`, the queue will\n        // grow, but to avoid an O(n) walk for every task we execute, we don't\n        // shift tasks off the queue after they have been executed.\n        // Instead, we periodically shift 1024 tasks off the queue.\n        if (index > capacity) {\n            // Manually shift all values starting at the index back to the\n            // beginning of the queue.\n            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n                queue[scan] = queue[scan + index];\n            }\n            queue.length -= index;\n            index = 0;\n        }\n    }\n    queue.length = 0;\n    index = 0;\n    flushing = false;\n}\n\n// `requestFlush` is implemented using a strategy based on data collected from\n// every available SauceLabs Selenium web driver worker at time of writing.\n// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\n// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n// have WebKitMutationObserver but not un-prefixed MutationObserver.\n// Must use `global` or `self` instead of `window` to work in both frames and web\n// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\n/* globals self */\nvar scope = typeof global !== \"undefined\" ? global : self;\nvar BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver;\n\n// MutationObservers are desirable because they have high priority and work\n// reliably everywhere they are implemented.\n// They are implemented in all modern browsers.\n//\n// - Android 4-4.3\n// - Chrome 26-34\n// - Firefox 14-29\n// - Internet Explorer 11\n// - iPad Safari 6-7.1\n// - iPhone Safari 7-7.1\n// - Safari 6-7\nif (typeof BrowserMutationObserver === \"function\") {\n    requestFlush = makeRequestCallFromMutationObserver(flush);\n\n// MessageChannels are desirable because they give direct access to the HTML\n// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n// 11-12, and in web workers in many engines.\n// Although message channels yield to any queued rendering and IO tasks, they\n// would be better than imposing the 4ms delay of timers.\n// However, they do not work reliably in Internet Explorer or Safari.\n\n// Internet Explorer 10 is the only browser that has setImmediate but does\n// not have MutationObservers.\n// Although setImmediate yields to the browser's renderer, it would be\n// preferrable to falling back to setTimeout since it does not have\n// the minimum 4ms penalty.\n// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n// Desktop to a lesser extent) that renders both setImmediate and\n// MessageChannel useless for the purposes of ASAP.\n// https://github.com/kriskowal/q/issues/396\n\n// Timers are implemented universally.\n// We fall back to timers in workers in most engines, and in foreground\n// contexts in the following browsers.\n// However, note that even this simple case requires nuances to operate in a\n// broad spectrum of browsers.\n//\n// - Firefox 3-13\n// - Internet Explorer 6-9\n// - iPad Safari 4.3\n// - Lynx 2.8.7\n} else {\n    requestFlush = makeRequestCallFromTimer(flush);\n}\n\n// `requestFlush` requests that the high priority event queue be flushed as\n// soon as possible.\n// This is useful to prevent an error thrown in a task from stalling the event\n// queue if the exception handled by Node.js’s\n// `process.on(\"uncaughtException\")` or by a domain.\nrawAsap.requestFlush = requestFlush;\n\n// To request a high priority event, we induce a mutation observer by toggling\n// the text of a text node between \"1\" and \"-1\".\nfunction makeRequestCallFromMutationObserver(callback) {\n    var toggle = 1;\n    var observer = new BrowserMutationObserver(callback);\n    var node = document.createTextNode(\"\");\n    observer.observe(node, {characterData: true});\n    return function requestCall() {\n        toggle = -toggle;\n        node.data = toggle;\n    };\n}\n\n// The message channel technique was discovered by Malte Ubl and was the\n// original foundation for this library.\n// http://www.nonblocking.io/2011/06/windownexttick.html\n\n// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n// page's first load. Thankfully, this version of Safari supports\n// MutationObservers, so we don't need to fall back in that case.\n\n// function makeRequestCallFromMessageChannel(callback) {\n//     var channel = new MessageChannel();\n//     channel.port1.onmessage = callback;\n//     return function requestCall() {\n//         channel.port2.postMessage(0);\n//     };\n// }\n\n// For reasons explained above, we are also unable to use `setImmediate`\n// under any circumstances.\n// Even if we were, there is another bug in Internet Explorer 10.\n// It is not sufficient to assign `setImmediate` to `requestFlush` because\n// `setImmediate` must be called *by name* and therefore must be wrapped in a\n// closure.\n// Never forget.\n\n// function makeRequestCallFromSetImmediate(callback) {\n//     return function requestCall() {\n//         setImmediate(callback);\n//     };\n// }\n\n// Safari 6.0 has a problem where timers will get lost while the user is\n// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n// mutation observers, so that implementation is used instead.\n// However, if we ever elect to use timers in Safari, the prevalent work-around\n// is to add a scroll event listener that calls for a flush.\n\n// `setTimeout` does not call the passed callback if the delay is less than\n// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n// even then.\n\nfunction makeRequestCallFromTimer(callback) {\n    return function requestCall() {\n        // We dispatch a timeout with a specified delay of 0 for engines that\n        // can reliably accommodate that request. This will usually be snapped\n        // to a 4 milisecond delay, but once we're flushing, there's no delay\n        // between events.\n        var timeoutHandle = setTimeout(handleTimer, 0);\n        // However, since this timer gets frequently dropped in Firefox\n        // workers, we enlist an interval handle that will try to fire\n        // an event 20 times per second until it succeeds.\n        var intervalHandle = setInterval(handleTimer, 50);\n\n        function handleTimer() {\n            // Whichever timer succeeds will cancel both timers and\n            // execute the callback.\n            clearTimeout(timeoutHandle);\n            clearInterval(intervalHandle);\n            callback();\n        }\n    };\n}\n\n// This is for `asap.js` only.\n// Its name will be periodically randomized to break any code that depends on\n// its existence.\nrawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;\n\n// ASAP was originally a nextTick shim included in Q. This was factored out\n// into this ASAP package. It was later adapted to RSVP which made further\n// amendments. These decisions, particularly to marginalize MessageChannel and\n// to capture the MutationObserver implementation in a closure, were integrated\n// back into ASAP proper.\n// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n//This file contains the ES6 extensions to the core Promises/A+ API\n\nvar Promise = __webpack_require__(3);\n\nmodule.exports = Promise;\n\n/* Static Functions */\n\nvar TRUE = valuePromise(true);\nvar FALSE = valuePromise(false);\nvar NULL = valuePromise(null);\nvar UNDEFINED = valuePromise(undefined);\nvar ZERO = valuePromise(0);\nvar EMPTYSTRING = valuePromise('');\n\nfunction valuePromise(value) {\n  var p = new Promise(Promise._44);\n  p._83 = 1;\n  p._18 = value;\n  return p;\n}\nPromise.resolve = function (value) {\n  if (value instanceof Promise) return value;\n\n  if (value === null) return NULL;\n  if (value === undefined) return UNDEFINED;\n  if (value === true) return TRUE;\n  if (value === false) return FALSE;\n  if (value === 0) return ZERO;\n  if (value === '') return EMPTYSTRING;\n\n  if (typeof value === 'object' || typeof value === 'function') {\n    try {\n      var then = value.then;\n      if (typeof then === 'function') {\n        return new Promise(then.bind(value));\n      }\n    } catch (ex) {\n      return new Promise(function (resolve, reject) {\n        reject(ex);\n      });\n    }\n  }\n  return valuePromise(value);\n};\n\nPromise.all = function (arr) {\n  var args = Array.prototype.slice.call(arr);\n\n  return new Promise(function (resolve, reject) {\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n    function res(i, val) {\n      if (val && (typeof val === 'object' || typeof val === 'function')) {\n        if (val instanceof Promise && val.then === Promise.prototype.then) {\n          while (val._83 === 3) {\n            val = val._18;\n          }\n          if (val._83 === 1) return res(i, val._18);\n          if (val._83 === 2) reject(val._18);\n          val.then(function (val) {\n            res(i, val);\n          }, reject);\n          return;\n        } else {\n          var then = val.then;\n          if (typeof then === 'function') {\n            var p = new Promise(then.bind(val));\n            p.then(function (val) {\n              res(i, val);\n            }, reject);\n            return;\n          }\n        }\n      }\n      args[i] = val;\n      if (--remaining === 0) {\n        resolve(args);\n      }\n    }\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.reject = function (value) {\n  return new Promise(function (resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function (values) {\n  return new Promise(function (resolve, reject) {\n    values.forEach(function(value){\n      Promise.resolve(value).then(resolve, reject);\n    });\n  });\n};\n\n/* Prototype Methods */\n\nPromise.prototype['catch'] = function (onRejected) {\n  return this.then(null, onRejected);\n};\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports) {\n\n(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1])\n      }, this)\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    rawHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = 'status' in options ? options.status : 200\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_dom__ = __webpack_require__(16);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_dom___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_react_dom__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__index_css__ = __webpack_require__(24);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__index_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__index_css__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__App__ = __webpack_require__(25);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__registerServiceWorker__ = __webpack_require__(30);\n__WEBPACK_IMPORTED_MODULE_1_react_dom___default.a.render(__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3__App__[\"a\" /* default */],null),document.getElementById('root'));Object(__WEBPACK_IMPORTED_MODULE_4__registerServiceWorker__[\"a\" /* default */])();\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/** @license React v16.4.1\n * react.production.min.js\n *\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar k=__webpack_require__(2),n=__webpack_require__(4),p=__webpack_require__(5),q=__webpack_require__(6),r=\"function\"===typeof Symbol&&Symbol.for,t=r?Symbol.for(\"react.element\"):60103,u=r?Symbol.for(\"react.portal\"):60106,v=r?Symbol.for(\"react.fragment\"):60107,w=r?Symbol.for(\"react.strict_mode\"):60108,x=r?Symbol.for(\"react.profiler\"):60114,y=r?Symbol.for(\"react.provider\"):60109,z=r?Symbol.for(\"react.context\"):60110,A=r?Symbol.for(\"react.async_mode\"):60111,B=\nr?Symbol.for(\"react.forward_ref\"):60112;r&&Symbol.for(\"react.timeout\");var C=\"function\"===typeof Symbol&&Symbol.iterator;function D(a){for(var b=arguments.length-1,e=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=0;c<b;c++)e+=\"&args[]=\"+encodeURIComponent(arguments[c+1]);n(!1,\"Minified React error #\"+a+\"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \",e)}\nvar E={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}};function F(a,b,e){this.props=a;this.context=b;this.refs=p;this.updater=e||E}F.prototype.isReactComponent={};F.prototype.setState=function(a,b){\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a?D(\"85\"):void 0;this.updater.enqueueSetState(this,a,b,\"setState\")};F.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function G(){}\nG.prototype=F.prototype;function H(a,b,e){this.props=a;this.context=b;this.refs=p;this.updater=e||E}var I=H.prototype=new G;I.constructor=H;k(I,F.prototype);I.isPureReactComponent=!0;var J={current:null},K=Object.prototype.hasOwnProperty,L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,e){var c=void 0,d={},g=null,h=null;if(null!=b)for(c in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(g=\"\"+b.key),b)K.call(b,c)&&!L.hasOwnProperty(c)&&(d[c]=b[c]);var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){for(var l=Array(f),m=0;m<f;m++)l[m]=arguments[m+2];d.children=l}if(a&&a.defaultProps)for(c in f=a.defaultProps,f)void 0===d[c]&&(d[c]=f[c]);return{$$typeof:t,type:a,key:g,ref:h,props:d,_owner:J.current}}\nfunction N(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===t}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+(\"\"+a).replace(/[=:]/g,function(a){return b[a]})}var O=/\\/+/g,P=[];function Q(a,b,e,c){if(P.length){var d=P.pop();d.result=a;d.keyPrefix=b;d.func=e;d.context=c;d.count=0;return d}return{result:a,keyPrefix:b,func:e,context:c,count:0}}function R(a){a.result=null;a.keyPrefix=null;a.func=null;a.context=null;a.count=0;10>P.length&&P.push(a)}\nfunction S(a,b,e,c){var d=typeof a;if(\"undefined\"===d||\"boolean\"===d)a=null;var g=!1;if(null===a)g=!0;else switch(d){case \"string\":case \"number\":g=!0;break;case \"object\":switch(a.$$typeof){case t:case u:g=!0}}if(g)return e(c,a,\"\"===b?\".\"+T(a,0):b),1;g=0;b=\"\"===b?\".\":b+\":\";if(Array.isArray(a))for(var h=0;h<a.length;h++){d=a[h];var f=b+T(d,h);g+=S(d,f,e,c)}else if(null===a||\"undefined\"===typeof a?f=null:(f=C&&a[C]||a[\"@@iterator\"],f=\"function\"===typeof f?f:null),\"function\"===typeof f)for(a=f.call(a),\nh=0;!(d=a.next()).done;)d=d.value,f=b+T(d,h++),g+=S(d,f,e,c);else\"object\"===d&&(e=\"\"+a,D(\"31\",\"[object Object]\"===e?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":e,\"\"));return g}function T(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(a.key):b.toString(36)}function U(a,b){a.func.call(a.context,b,a.count++)}\nfunction V(a,b,e){var c=a.result,d=a.keyPrefix;a=a.func.call(a.context,b,a.count++);Array.isArray(a)?W(a,c,e,q.thatReturnsArgument):null!=a&&(N(a)&&(b=d+(!a.key||b&&b.key===a.key?\"\":(\"\"+a.key).replace(O,\"$&/\")+\"/\")+e,a={$$typeof:t,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}),c.push(a))}function W(a,b,e,c,d){var g=\"\";null!=e&&(g=(\"\"+e).replace(O,\"$&/\")+\"/\");b=Q(b,g,c,d);null==a||S(a,\"\",V,b);R(b)}\nvar X={Children:{map:function(a,b,e){if(null==a)return a;var c=[];W(a,c,null,b,e);return c},forEach:function(a,b,e){if(null==a)return a;b=Q(null,null,b,e);null==a||S(a,\"\",U,b);R(b)},count:function(a){return null==a?0:S(a,\"\",q.thatReturnsNull,null)},toArray:function(a){var b=[];W(a,b,null,q.thatReturnsArgument);return b},only:function(a){N(a)?void 0:D(\"143\");return a}},createRef:function(){return{current:null}},Component:F,PureComponent:H,createContext:function(a,b){void 0===b&&(b=null);a={$$typeof:z,\n_calculateChangedBits:b,_defaultValue:a,_currentValue:a,_currentValue2:a,_changedBits:0,_changedBits2:0,Provider:null,Consumer:null};a.Provider={$$typeof:y,_context:a};return a.Consumer=a},forwardRef:function(a){return{$$typeof:B,render:a}},Fragment:v,StrictMode:w,unstable_AsyncMode:A,unstable_Profiler:x,createElement:M,cloneElement:function(a,b,e){null===a||void 0===a?D(\"267\",a):void 0;var c=void 0,d=k({},a.props),g=a.key,h=a.ref,f=a._owner;if(null!=b){void 0!==b.ref&&(h=b.ref,f=J.current);void 0!==\nb.key&&(g=\"\"+b.key);var l=void 0;a.type&&a.type.defaultProps&&(l=a.type.defaultProps);for(c in b)K.call(b,c)&&!L.hasOwnProperty(c)&&(d[c]=void 0===b[c]&&void 0!==l?l[c]:b[c])}c=arguments.length-2;if(1===c)d.children=e;else if(1<c){l=Array(c);for(var m=0;m<c;m++)l[m]=arguments[m+2];d.children=l}return{$$typeof:t,type:a.type,key:g,ref:h,props:d,_owner:f}},createFactory:function(a){var b=M.bind(null,a);b.type=a;return b},isValidElement:N,version:\"16.4.1\",__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentOwner:J,\nassign:k}},Y={default:X},Z=Y&&X||Y;module.exports=Z.default?Z.default:Z;\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (false) {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (true) {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = __webpack_require__(17);\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/** @license React v16.4.1\n * react-dom.production.min.js\n *\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\nvar aa=__webpack_require__(4),ba=__webpack_require__(0),m=__webpack_require__(18),p=__webpack_require__(2),v=__webpack_require__(6),da=__webpack_require__(19),ea=__webpack_require__(20),fa=__webpack_require__(21),ha=__webpack_require__(5);\nfunction A(a){for(var b=arguments.length-1,c=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,d=0;d<b;d++)c+=\"&args[]=\"+encodeURIComponent(arguments[d+1]);aa(!1,\"Minified React error #\"+a+\"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \",c)}ba?void 0:A(\"227\");\nfunction ia(a,b,c,d,e,f,g,h,k){this._hasCaughtError=!1;this._caughtError=null;var n=Array.prototype.slice.call(arguments,3);try{b.apply(c,n)}catch(r){this._caughtError=r,this._hasCaughtError=!0}}\nvar B={_caughtError:null,_hasCaughtError:!1,_rethrowError:null,_hasRethrowError:!1,invokeGuardedCallback:function(a,b,c,d,e,f,g,h,k){ia.apply(B,arguments)},invokeGuardedCallbackAndCatchFirstError:function(a,b,c,d,e,f,g,h,k){B.invokeGuardedCallback.apply(this,arguments);if(B.hasCaughtError()){var n=B.clearCaughtError();B._hasRethrowError||(B._hasRethrowError=!0,B._rethrowError=n)}},rethrowCaughtError:function(){return ka.apply(B,arguments)},hasCaughtError:function(){return B._hasCaughtError},clearCaughtError:function(){if(B._hasCaughtError){var a=\nB._caughtError;B._caughtError=null;B._hasCaughtError=!1;return a}A(\"198\")}};function ka(){if(B._hasRethrowError){var a=B._rethrowError;B._rethrowError=null;B._hasRethrowError=!1;throw a;}}var la=null,ma={};\nfunction na(){if(la)for(var a in ma){var b=ma[a],c=la.indexOf(a);-1<c?void 0:A(\"96\",a);if(!oa[c]){b.extractEvents?void 0:A(\"97\",a);oa[c]=b;c=b.eventTypes;for(var d in c){var e=void 0;var f=c[d],g=b,h=d;pa.hasOwnProperty(h)?A(\"99\",h):void 0;pa[h]=f;var k=f.phasedRegistrationNames;if(k){for(e in k)k.hasOwnProperty(e)&&qa(k[e],g,h);e=!0}else f.registrationName?(qa(f.registrationName,g,h),e=!0):e=!1;e?void 0:A(\"98\",d,a)}}}}\nfunction qa(a,b,c){ra[a]?A(\"100\",a):void 0;ra[a]=b;sa[a]=b.eventTypes[c].dependencies}var oa=[],pa={},ra={},sa={};function ta(a){la?A(\"101\"):void 0;la=Array.prototype.slice.call(a);na()}function ua(a){var b=!1,c;for(c in a)if(a.hasOwnProperty(c)){var d=a[c];ma.hasOwnProperty(c)&&ma[c]===d||(ma[c]?A(\"102\",c):void 0,ma[c]=d,b=!0)}b&&na()}\nvar va={plugins:oa,eventNameDispatchConfigs:pa,registrationNameModules:ra,registrationNameDependencies:sa,possibleRegistrationNames:null,injectEventPluginOrder:ta,injectEventPluginsByName:ua},wa=null,xa=null,ya=null;function za(a,b,c,d){b=a.type||\"unknown-event\";a.currentTarget=ya(d);B.invokeGuardedCallbackAndCatchFirstError(b,c,void 0,a);a.currentTarget=null}\nfunction Aa(a,b){null==b?A(\"30\"):void 0;if(null==a)return b;if(Array.isArray(a)){if(Array.isArray(b))return a.push.apply(a,b),a;a.push(b);return a}return Array.isArray(b)?[a].concat(b):[a,b]}function Ba(a,b,c){Array.isArray(a)?a.forEach(b,c):a&&b.call(c,a)}var Ca=null;\nfunction Da(a,b){if(a){var c=a._dispatchListeners,d=a._dispatchInstances;if(Array.isArray(c))for(var e=0;e<c.length&&!a.isPropagationStopped();e++)za(a,b,c[e],d[e]);else c&&za(a,b,c,d);a._dispatchListeners=null;a._dispatchInstances=null;a.isPersistent()||a.constructor.release(a)}}function Ea(a){return Da(a,!0)}function Fa(a){return Da(a,!1)}var Ga={injectEventPluginOrder:ta,injectEventPluginsByName:ua};\nfunction Ha(a,b){var c=a.stateNode;if(!c)return null;var d=wa(c);if(!d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;c&&\"function\"!==typeof c?A(\"231\",b,typeof c):void 0;\nreturn c}function Ia(a,b){null!==a&&(Ca=Aa(Ca,a));a=Ca;Ca=null;a&&(b?Ba(a,Ea):Ba(a,Fa),Ca?A(\"95\"):void 0,B.rethrowCaughtError())}function Ja(a,b,c,d){for(var e=null,f=0;f<oa.length;f++){var g=oa[f];g&&(g=g.extractEvents(a,b,c,d))&&(e=Aa(e,g))}Ia(e,!1)}var Ka={injection:Ga,getListener:Ha,runEventsInBatch:Ia,runExtractedEventsInBatch:Ja},La=Math.random().toString(36).slice(2),C=\"__reactInternalInstance$\"+La,Ma=\"__reactEventHandlers$\"+La;\nfunction Na(a){if(a[C])return a[C];for(;!a[C];)if(a.parentNode)a=a.parentNode;else return null;a=a[C];return 5===a.tag||6===a.tag?a:null}function Oa(a){if(5===a.tag||6===a.tag)return a.stateNode;A(\"33\")}function Pa(a){return a[Ma]||null}var Qa={precacheFiberNode:function(a,b){b[C]=a},getClosestInstanceFromNode:Na,getInstanceFromNode:function(a){a=a[C];return!a||5!==a.tag&&6!==a.tag?null:a},getNodeFromInstance:Oa,getFiberCurrentPropsFromNode:Pa,updateFiberProps:function(a,b){a[Ma]=b}};\nfunction F(a){do a=a.return;while(a&&5!==a.tag);return a?a:null}function Ra(a,b,c){for(var d=[];a;)d.push(a),a=F(a);for(a=d.length;0<a--;)b(d[a],\"captured\",c);for(a=0;a<d.length;a++)b(d[a],\"bubbled\",c)}function Sa(a,b,c){if(b=Ha(a,c.dispatchConfig.phasedRegistrationNames[b]))c._dispatchListeners=Aa(c._dispatchListeners,b),c._dispatchInstances=Aa(c._dispatchInstances,a)}function Ta(a){a&&a.dispatchConfig.phasedRegistrationNames&&Ra(a._targetInst,Sa,a)}\nfunction Ua(a){if(a&&a.dispatchConfig.phasedRegistrationNames){var b=a._targetInst;b=b?F(b):null;Ra(b,Sa,a)}}function Va(a,b,c){a&&c&&c.dispatchConfig.registrationName&&(b=Ha(a,c.dispatchConfig.registrationName))&&(c._dispatchListeners=Aa(c._dispatchListeners,b),c._dispatchInstances=Aa(c._dispatchInstances,a))}function Xa(a){a&&a.dispatchConfig.registrationName&&Va(a._targetInst,null,a)}function Ya(a){Ba(a,Ta)}\nfunction Za(a,b,c,d){if(c&&d)a:{var e=c;for(var f=d,g=0,h=e;h;h=F(h))g++;h=0;for(var k=f;k;k=F(k))h++;for(;0<g-h;)e=F(e),g--;for(;0<h-g;)f=F(f),h--;for(;g--;){if(e===f||e===f.alternate)break a;e=F(e);f=F(f)}e=null}else e=null;f=e;for(e=[];c&&c!==f;){g=c.alternate;if(null!==g&&g===f)break;e.push(c);c=F(c)}for(c=[];d&&d!==f;){g=d.alternate;if(null!==g&&g===f)break;c.push(d);d=F(d)}for(d=0;d<e.length;d++)Va(e[d],\"bubbled\",a);for(a=c.length;0<a--;)Va(c[a],\"captured\",b)}\nvar $a={accumulateTwoPhaseDispatches:Ya,accumulateTwoPhaseDispatchesSkipTarget:function(a){Ba(a,Ua)},accumulateEnterLeaveDispatches:Za,accumulateDirectDispatches:function(a){Ba(a,Xa)}};function ab(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;c[\"ms\"+a]=\"MS\"+b;c[\"O\"+a]=\"o\"+b.toLowerCase();return c}\nvar bb={animationend:ab(\"Animation\",\"AnimationEnd\"),animationiteration:ab(\"Animation\",\"AnimationIteration\"),animationstart:ab(\"Animation\",\"AnimationStart\"),transitionend:ab(\"Transition\",\"TransitionEnd\")},cb={},db={};m.canUseDOM&&(db=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete bb.animationend.animation,delete bb.animationiteration.animation,delete bb.animationstart.animation),\"TransitionEvent\"in window||delete bb.transitionend.transition);\nfunction eb(a){if(cb[a])return cb[a];if(!bb[a])return a;var b=bb[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in db)return cb[a]=b[c];return a}var fb=eb(\"animationend\"),gb=eb(\"animationiteration\"),hb=eb(\"animationstart\"),ib=eb(\"transitionend\"),jb=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),kb=null;\nfunction lb(){!kb&&m.canUseDOM&&(kb=\"textContent\"in document.documentElement?\"textContent\":\"innerText\");return kb}var G={_root:null,_startText:null,_fallbackText:null};function mb(){if(G._fallbackText)return G._fallbackText;var a,b=G._startText,c=b.length,d,e=nb(),f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);G._fallbackText=e.slice(a,1<d?1-d:void 0);return G._fallbackText}function nb(){return\"value\"in G._root?G._root.value:G._root[lb()]}\nvar ob=\"dispatchConfig _targetInst nativeEvent isDefaultPrevented isPropagationStopped _dispatchListeners _dispatchInstances\".split(\" \"),pb={type:null,target:null,currentTarget:v.thatReturnsNull,eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};\nfunction H(a,b,c,d){this.dispatchConfig=a;this._targetInst=b;this.nativeEvent=c;a=this.constructor.Interface;for(var e in a)a.hasOwnProperty(e)&&((b=a[e])?this[e]=b(c):\"target\"===e?this.target=d:this[e]=c[e]);this.isDefaultPrevented=(null!=c.defaultPrevented?c.defaultPrevented:!1===c.returnValue)?v.thatReturnsTrue:v.thatReturnsFalse;this.isPropagationStopped=v.thatReturnsFalse;return this}\np(H.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&(a.returnValue=!1),this.isDefaultPrevented=v.thatReturnsTrue)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=v.thatReturnsTrue)},persist:function(){this.isPersistent=v.thatReturnsTrue},isPersistent:v.thatReturnsFalse,\ndestructor:function(){var a=this.constructor.Interface,b;for(b in a)this[b]=null;for(a=0;a<ob.length;a++)this[ob[a]]=null}});H.Interface=pb;H.extend=function(a){function b(){}function c(){return d.apply(this,arguments)}var d=this;b.prototype=d.prototype;var e=new b;p(e,c.prototype);c.prototype=e;c.prototype.constructor=c;c.Interface=p({},d.Interface,a);c.extend=d.extend;qb(c);return c};qb(H);\nfunction rb(a,b,c,d){if(this.eventPool.length){var e=this.eventPool.pop();this.call(e,a,b,c,d);return e}return new this(a,b,c,d)}function sb(a){a instanceof this?void 0:A(\"223\");a.destructor();10>this.eventPool.length&&this.eventPool.push(a)}function qb(a){a.eventPool=[];a.getPooled=rb;a.release=sb}var tb=H.extend({data:null}),ub=H.extend({data:null}),vb=[9,13,27,32],wb=m.canUseDOM&&\"CompositionEvent\"in window,xb=null;m.canUseDOM&&\"documentMode\"in document&&(xb=document.documentMode);\nvar yb=m.canUseDOM&&\"TextEvent\"in window&&!xb,zb=m.canUseDOM&&(!wb||xb&&8<xb&&11>=xb),Ab=String.fromCharCode(32),Bb={beforeInput:{phasedRegistrationNames:{bubbled:\"onBeforeInput\",captured:\"onBeforeInputCapture\"},dependencies:[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]},compositionEnd:{phasedRegistrationNames:{bubbled:\"onCompositionEnd\",captured:\"onCompositionEndCapture\"},dependencies:\"blur compositionend keydown keypress keyup mousedown\".split(\" \")},compositionStart:{phasedRegistrationNames:{bubbled:\"onCompositionStart\",\ncaptured:\"onCompositionStartCapture\"},dependencies:\"blur compositionstart keydown keypress keyup mousedown\".split(\" \")},compositionUpdate:{phasedRegistrationNames:{bubbled:\"onCompositionUpdate\",captured:\"onCompositionUpdateCapture\"},dependencies:\"blur compositionupdate keydown keypress keyup mousedown\".split(\" \")}},Cb=!1;\nfunction Db(a,b){switch(a){case \"keyup\":return-1!==vb.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"blur\":return!0;default:return!1}}function Eb(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var Fb=!1;function Gb(a,b){switch(a){case \"compositionend\":return Eb(b);case \"keypress\":if(32!==b.which)return null;Cb=!0;return Ab;case \"textInput\":return a=b.data,a===Ab&&Cb?null:a;default:return null}}\nfunction Hb(a,b){if(Fb)return\"compositionend\"===a||!wb&&Db(a,b)?(a=mb(),G._root=null,G._startText=null,G._fallbackText=null,Fb=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return zb?null:b.data;default:return null}}\nvar Ib={eventTypes:Bb,extractEvents:function(a,b,c,d){var e=void 0;var f=void 0;if(wb)b:{switch(a){case \"compositionstart\":e=Bb.compositionStart;break b;case \"compositionend\":e=Bb.compositionEnd;break b;case \"compositionupdate\":e=Bb.compositionUpdate;break b}e=void 0}else Fb?Db(a,c)&&(e=Bb.compositionEnd):\"keydown\"===a&&229===c.keyCode&&(e=Bb.compositionStart);e?(zb&&(Fb||e!==Bb.compositionStart?e===Bb.compositionEnd&&Fb&&(f=mb()):(G._root=d,G._startText=nb(),Fb=!0)),e=tb.getPooled(e,b,c,d),f?e.data=\nf:(f=Eb(c),null!==f&&(e.data=f)),Ya(e),f=e):f=null;(a=yb?Gb(a,c):Hb(a,c))?(b=ub.getPooled(Bb.beforeInput,b,c,d),b.data=a,Ya(b)):b=null;return null===f?b:null===b?f:[f,b]}},Jb=null,Kb={injectFiberControlledHostComponent:function(a){Jb=a}},Lb=null,Mb=null;function Nb(a){if(a=xa(a)){Jb&&\"function\"===typeof Jb.restoreControlledState?void 0:A(\"194\");var b=wa(a.stateNode);Jb.restoreControlledState(a.stateNode,a.type,b)}}function Ob(a){Lb?Mb?Mb.push(a):Mb=[a]:Lb=a}\nfunction Pb(){return null!==Lb||null!==Mb}function Qb(){if(Lb){var a=Lb,b=Mb;Mb=Lb=null;Nb(a);if(b)for(a=0;a<b.length;a++)Nb(b[a])}}var Rb={injection:Kb,enqueueStateRestore:Ob,needsStateRestore:Pb,restoreStateIfNeeded:Qb};function Sb(a,b){return a(b)}function Tb(a,b,c){return a(b,c)}function Ub(){}var Vb=!1;function Wb(a,b){if(Vb)return a(b);Vb=!0;try{return Sb(a,b)}finally{Vb=!1,Pb()&&(Ub(),Qb())}}\nvar Xb={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Yb(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!Xb[a.type]:\"textarea\"===b?!0:!1}function Zb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}\nfunction $b(a,b){if(!m.canUseDOM||b&&!(\"addEventListener\"in document))return!1;a=\"on\"+a;b=a in document;b||(b=document.createElement(\"div\"),b.setAttribute(a,\"return;\"),b=\"function\"===typeof b[a]);return b}function ac(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction bc(a){var b=ac(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function cc(a){a._valueTracker||(a._valueTracker=bc(a))}function dc(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=ac(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}\nvar ec=ba.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,fc=\"function\"===typeof Symbol&&Symbol.for,gc=fc?Symbol.for(\"react.element\"):60103,hc=fc?Symbol.for(\"react.portal\"):60106,ic=fc?Symbol.for(\"react.fragment\"):60107,jc=fc?Symbol.for(\"react.strict_mode\"):60108,kc=fc?Symbol.for(\"react.profiler\"):60114,lc=fc?Symbol.for(\"react.provider\"):60109,mc=fc?Symbol.for(\"react.context\"):60110,pc=fc?Symbol.for(\"react.async_mode\"):60111,qc=fc?Symbol.for(\"react.forward_ref\"):60112,rc=fc?Symbol.for(\"react.timeout\"):\n60113,sc=\"function\"===typeof Symbol&&Symbol.iterator;function tc(a){if(null===a||\"undefined\"===typeof a)return null;a=sc&&a[sc]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nfunction uc(a){var b=a.type;if(\"function\"===typeof b)return b.displayName||b.name;if(\"string\"===typeof b)return b;switch(b){case pc:return\"AsyncMode\";case mc:return\"Context.Consumer\";case ic:return\"ReactFragment\";case hc:return\"ReactPortal\";case kc:return\"Profiler(\"+a.pendingProps.id+\")\";case lc:return\"Context.Provider\";case jc:return\"StrictMode\";case rc:return\"Timeout\"}if(\"object\"===typeof b&&null!==b)switch(b.$$typeof){case qc:return a=b.render.displayName||b.render.name||\"\",\"\"!==a?\"ForwardRef(\"+\na+\")\":\"ForwardRef\"}return null}function vc(a){var b=\"\";do{a:switch(a.tag){case 0:case 1:case 2:case 5:var c=a._debugOwner,d=a._debugSource;var e=uc(a);var f=null;c&&(f=uc(c));c=d;e=\"\\n    in \"+(e||\"Unknown\")+(c?\" (at \"+c.fileName.replace(/^.*[\\\\\\/]/,\"\")+\":\"+c.lineNumber+\")\":f?\" (created by \"+f+\")\":\"\");break a;default:e=\"\"}b+=e;a=a.return}while(a);return b}\nvar wc=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,xc={},zc={};function Ac(a){if(zc.hasOwnProperty(a))return!0;if(xc.hasOwnProperty(a))return!1;if(wc.test(a))return zc[a]=!0;xc[a]=!0;return!1}\nfunction Bc(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}function Cc(a,b,c,d){if(null===b||\"undefined\"===typeof b||Bc(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}\nfunction I(a,b,c,d,e){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b}var J={};\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){J[a]=new I(a,0,!1,a,null)});\n[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];J[b]=new I(b,1,!1,a[1],null)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){J[a]=new I(a,2,!1,a.toLowerCase(),null)});[\"autoReverse\",\"externalResourcesRequired\",\"preserveAlpha\"].forEach(function(a){J[a]=new I(a,2,!1,a,null)});\n\"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){J[a]=new I(a,3,!1,a.toLowerCase(),null)});[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){J[a]=new I(a,3,!0,a.toLowerCase(),null)});[\"capture\",\"download\"].forEach(function(a){J[a]=new I(a,4,!1,a.toLowerCase(),null)});\n[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){J[a]=new I(a,6,!1,a.toLowerCase(),null)});[\"rowSpan\",\"start\"].forEach(function(a){J[a]=new I(a,5,!1,a.toLowerCase(),null)});var Dc=/[\\-:]([a-z])/g;function Ec(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(Dc,\nEc);J[b]=new I(b,1,!1,a,null)});\"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(Dc,Ec);J[b]=new I(b,1,!1,a,\"http://www.w3.org/1999/xlink\")});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(Dc,Ec);J[b]=new I(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\")});J.tabIndex=new I(\"tabIndex\",1,!1,\"tabindex\",null);\nfunction Fc(a,b,c,d){var e=J.hasOwnProperty(b)?J[b]:null;var f=null!==e?0===e.type:d?!1:!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1]?!1:!0;f||(Cc(b,c,e,d)&&(c=null),d||null===e?Ac(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c))))}\nfunction Gc(a,b){var c=b.checked;return p({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Hc(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Ic(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function Jc(a,b){b=b.checked;null!=b&&Fc(a,\"checked\",b,!1)}\nfunction Kc(a,b){Jc(a,b);var c=Ic(b.value);if(null!=c)if(\"number\"===b.type){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);b.hasOwnProperty(\"value\")?Lc(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&Lc(a,b.type,Ic(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction Mc(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){b=\"\"+a._wrapperState.initialValue;var d=a.value;c||b===d||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!a.defaultChecked;a.defaultChecked=!a.defaultChecked;\"\"!==c&&(a.name=c)}function Lc(a,b,c){if(\"number\"!==b||a.ownerDocument.activeElement!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}\nfunction Ic(a){switch(typeof a){case \"boolean\":case \"number\":case \"object\":case \"string\":case \"undefined\":return a;default:return\"\"}}var Nc={change:{phasedRegistrationNames:{bubbled:\"onChange\",captured:\"onChangeCapture\"},dependencies:\"blur change click focus input keydown keyup selectionchange\".split(\" \")}};function Oc(a,b,c){a=H.getPooled(Nc.change,a,b,c);a.type=\"change\";Ob(c);Ya(a);return a}var Pc=null,Qc=null;function Rc(a){Ia(a,!1)}function Sc(a){var b=Oa(a);if(dc(b))return a}\nfunction Tc(a,b){if(\"change\"===a)return b}var Uc=!1;m.canUseDOM&&(Uc=$b(\"input\")&&(!document.documentMode||9<document.documentMode));function Vc(){Pc&&(Pc.detachEvent(\"onpropertychange\",Wc),Qc=Pc=null)}function Wc(a){\"value\"===a.propertyName&&Sc(Qc)&&(a=Oc(Qc,a,Zb(a)),Wb(Rc,a))}function Xc(a,b,c){\"focus\"===a?(Vc(),Pc=b,Qc=c,Pc.attachEvent(\"onpropertychange\",Wc)):\"blur\"===a&&Vc()}function Yc(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return Sc(Qc)}\nfunction Zc(a,b){if(\"click\"===a)return Sc(b)}function $c(a,b){if(\"input\"===a||\"change\"===a)return Sc(b)}\nvar ad={eventTypes:Nc,_isInputEventSupported:Uc,extractEvents:function(a,b,c,d){var e=b?Oa(b):window,f=void 0,g=void 0,h=e.nodeName&&e.nodeName.toLowerCase();\"select\"===h||\"input\"===h&&\"file\"===e.type?f=Tc:Yb(e)?Uc?f=$c:(f=Yc,g=Xc):(h=e.nodeName)&&\"input\"===h.toLowerCase()&&(\"checkbox\"===e.type||\"radio\"===e.type)&&(f=Zc);if(f&&(f=f(a,b)))return Oc(f,c,d);g&&g(a,e,b);\"blur\"===a&&(a=e._wrapperState)&&a.controlled&&\"number\"===e.type&&Lc(e,\"number\",e.value)}},bd=H.extend({view:null,detail:null}),cd={Alt:\"altKey\",\nControl:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function dd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=cd[a])?!!b[a]:!1}function ed(){return dd}\nvar fd=bd.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:ed,button:null,buttons:null,relatedTarget:function(a){return a.relatedTarget||(a.fromElement===a.srcElement?a.toElement:a.fromElement)}}),gd=fd.extend({pointerId:null,width:null,height:null,pressure:null,tiltX:null,tiltY:null,pointerType:null,isPrimary:null}),hd={mouseEnter:{registrationName:\"onMouseEnter\",dependencies:[\"mouseout\",\"mouseover\"]},\nmouseLeave:{registrationName:\"onMouseLeave\",dependencies:[\"mouseout\",\"mouseover\"]},pointerEnter:{registrationName:\"onPointerEnter\",dependencies:[\"pointerout\",\"pointerover\"]},pointerLeave:{registrationName:\"onPointerLeave\",dependencies:[\"pointerout\",\"pointerover\"]}},id={eventTypes:hd,extractEvents:function(a,b,c,d){var e=\"mouseover\"===a||\"pointerover\"===a,f=\"mouseout\"===a||\"pointerout\"===a;if(e&&(c.relatedTarget||c.fromElement)||!f&&!e)return null;e=d.window===d?d:(e=d.ownerDocument)?e.defaultView||\ne.parentWindow:window;f?(f=b,b=(b=c.relatedTarget||c.toElement)?Na(b):null):f=null;if(f===b)return null;var g=void 0,h=void 0,k=void 0,n=void 0;if(\"mouseout\"===a||\"mouseover\"===a)g=fd,h=hd.mouseLeave,k=hd.mouseEnter,n=\"mouse\";else if(\"pointerout\"===a||\"pointerover\"===a)g=gd,h=hd.pointerLeave,k=hd.pointerEnter,n=\"pointer\";a=null==f?e:Oa(f);e=null==b?e:Oa(b);h=g.getPooled(h,f,c,d);h.type=n+\"leave\";h.target=a;h.relatedTarget=e;c=g.getPooled(k,b,c,d);c.type=n+\"enter\";c.target=e;c.relatedTarget=a;Za(h,\nc,f,b);return[h,c]}};function jd(a){var b=a;if(a.alternate)for(;b.return;)b=b.return;else{if(0!==(b.effectTag&2))return 1;for(;b.return;)if(b=b.return,0!==(b.effectTag&2))return 1}return 3===b.tag?2:3}function kd(a){2!==jd(a)?A(\"188\"):void 0}\nfunction ld(a){var b=a.alternate;if(!b)return b=jd(a),3===b?A(\"188\"):void 0,1===b?null:a;for(var c=a,d=b;;){var e=c.return,f=e?e.alternate:null;if(!e||!f)break;if(e.child===f.child){for(var g=e.child;g;){if(g===c)return kd(e),a;if(g===d)return kd(e),b;g=g.sibling}A(\"188\")}if(c.return!==d.return)c=e,d=f;else{g=!1;for(var h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===c){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}g?\nvoid 0:A(\"189\")}}c.alternate!==d?A(\"190\"):void 0}3!==c.tag?A(\"188\"):void 0;return c.stateNode.current===c?a:b}function md(a){a=ld(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}\nfunction nd(a){a=ld(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child&&4!==b.tag)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}var od=H.extend({animationName:null,elapsedTime:null,pseudoElement:null}),pd=H.extend({clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),qd=bd.extend({relatedTarget:null});\nfunction rd(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}\nvar sd={Esc:\"Escape\",Spacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},td={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",\n116:\"F5\",117:\"F6\",118:\"F7\",119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},ud=bd.extend({key:function(a){if(a.key){var b=sd[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=rd(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?td[a.keyCode]||\"Unidentified\":\"\"},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:ed,charCode:function(a){return\"keypress\"===\na.type?rd(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===a.type?rd(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),vd=fd.extend({dataTransfer:null}),wd=bd.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:ed}),xd=H.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),yd=fd.extend({deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in\na?-a.wheelDeltaX:0},deltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:null,deltaMode:null}),zd=[[\"abort\",\"abort\"],[fb,\"animationEnd\"],[gb,\"animationIteration\"],[hb,\"animationStart\"],[\"canplay\",\"canPlay\"],[\"canplaythrough\",\"canPlayThrough\"],[\"drag\",\"drag\"],[\"dragenter\",\"dragEnter\"],[\"dragexit\",\"dragExit\"],[\"dragleave\",\"dragLeave\"],[\"dragover\",\"dragOver\"],[\"durationchange\",\"durationChange\"],[\"emptied\",\"emptied\"],[\"encrypted\",\"encrypted\"],\n[\"ended\",\"ended\"],[\"error\",\"error\"],[\"gotpointercapture\",\"gotPointerCapture\"],[\"load\",\"load\"],[\"loadeddata\",\"loadedData\"],[\"loadedmetadata\",\"loadedMetadata\"],[\"loadstart\",\"loadStart\"],[\"lostpointercapture\",\"lostPointerCapture\"],[\"mousemove\",\"mouseMove\"],[\"mouseout\",\"mouseOut\"],[\"mouseover\",\"mouseOver\"],[\"playing\",\"playing\"],[\"pointermove\",\"pointerMove\"],[\"pointerout\",\"pointerOut\"],[\"pointerover\",\"pointerOver\"],[\"progress\",\"progress\"],[\"scroll\",\"scroll\"],[\"seeking\",\"seeking\"],[\"stalled\",\"stalled\"],\n[\"suspend\",\"suspend\"],[\"timeupdate\",\"timeUpdate\"],[\"toggle\",\"toggle\"],[\"touchmove\",\"touchMove\"],[ib,\"transitionEnd\"],[\"waiting\",\"waiting\"],[\"wheel\",\"wheel\"]],Ad={},Bd={};function Cd(a,b){var c=a[0];a=a[1];var d=\"on\"+(a[0].toUpperCase()+a.slice(1));b={phasedRegistrationNames:{bubbled:d,captured:d+\"Capture\"},dependencies:[c],isInteractive:b};Ad[a]=b;Bd[c]=b}\n[[\"blur\",\"blur\"],[\"cancel\",\"cancel\"],[\"click\",\"click\"],[\"close\",\"close\"],[\"contextmenu\",\"contextMenu\"],[\"copy\",\"copy\"],[\"cut\",\"cut\"],[\"dblclick\",\"doubleClick\"],[\"dragend\",\"dragEnd\"],[\"dragstart\",\"dragStart\"],[\"drop\",\"drop\"],[\"focus\",\"focus\"],[\"input\",\"input\"],[\"invalid\",\"invalid\"],[\"keydown\",\"keyDown\"],[\"keypress\",\"keyPress\"],[\"keyup\",\"keyUp\"],[\"mousedown\",\"mouseDown\"],[\"mouseup\",\"mouseUp\"],[\"paste\",\"paste\"],[\"pause\",\"pause\"],[\"play\",\"play\"],[\"pointercancel\",\"pointerCancel\"],[\"pointerdown\",\"pointerDown\"],\n[\"pointerup\",\"pointerUp\"],[\"ratechange\",\"rateChange\"],[\"reset\",\"reset\"],[\"seeked\",\"seeked\"],[\"submit\",\"submit\"],[\"touchcancel\",\"touchCancel\"],[\"touchend\",\"touchEnd\"],[\"touchstart\",\"touchStart\"],[\"volumechange\",\"volumeChange\"]].forEach(function(a){Cd(a,!0)});zd.forEach(function(a){Cd(a,!1)});\nvar Dd={eventTypes:Ad,isInteractiveTopLevelEventType:function(a){a=Bd[a];return void 0!==a&&!0===a.isInteractive},extractEvents:function(a,b,c,d){var e=Bd[a];if(!e)return null;switch(a){case \"keypress\":if(0===rd(c))return null;case \"keydown\":case \"keyup\":a=ud;break;case \"blur\":case \"focus\":a=qd;break;case \"click\":if(2===c.button)return null;case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":a=fd;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":a=\nvd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":a=wd;break;case fb:case gb:case hb:a=od;break;case ib:a=xd;break;case \"scroll\":a=bd;break;case \"wheel\":a=yd;break;case \"copy\":case \"cut\":case \"paste\":a=pd;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":a=gd;break;default:a=H}b=a.getPooled(e,b,c,d);Ya(b);return b}},Ed=Dd.isInteractiveTopLevelEventType,\nFd=[];function Gd(a){var b=a.targetInst;do{if(!b){a.ancestors.push(b);break}var c;for(c=b;c.return;)c=c.return;c=3!==c.tag?null:c.stateNode.containerInfo;if(!c)break;a.ancestors.push(b);b=Na(c)}while(b);for(c=0;c<a.ancestors.length;c++)b=a.ancestors[c],Ja(a.topLevelType,b,a.nativeEvent,Zb(a.nativeEvent))}var Hd=!0;function Id(a){Hd=!!a}function K(a,b){if(!b)return null;var c=(Ed(a)?Kd:Ld).bind(null,a);b.addEventListener(a,c,!1)}\nfunction Md(a,b){if(!b)return null;var c=(Ed(a)?Kd:Ld).bind(null,a);b.addEventListener(a,c,!0)}function Kd(a,b){Tb(Ld,a,b)}function Ld(a,b){if(Hd){var c=Zb(b);c=Na(c);null===c||\"number\"!==typeof c.tag||2===jd(c)||(c=null);if(Fd.length){var d=Fd.pop();d.topLevelType=a;d.nativeEvent=b;d.targetInst=c;a=d}else a={topLevelType:a,nativeEvent:b,targetInst:c,ancestors:[]};try{Wb(Gd,a)}finally{a.topLevelType=null,a.nativeEvent=null,a.targetInst=null,a.ancestors.length=0,10>Fd.length&&Fd.push(a)}}}\nvar Nd={get _enabled(){return Hd},setEnabled:Id,isEnabled:function(){return Hd},trapBubbledEvent:K,trapCapturedEvent:Md,dispatchEvent:Ld},Od={},Pd=0,Qd=\"_reactListenersID\"+(\"\"+Math.random()).slice(2);function Rd(a){Object.prototype.hasOwnProperty.call(a,Qd)||(a[Qd]=Pd++,Od[a[Qd]]={});return Od[a[Qd]]}function Sd(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Td(a,b){var c=Sd(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Sd(c)}}function Ud(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\nvar Vd=m.canUseDOM&&\"documentMode\"in document&&11>=document.documentMode,Wd={select:{phasedRegistrationNames:{bubbled:\"onSelect\",captured:\"onSelectCapture\"},dependencies:\"blur contextmenu focus keydown keyup mousedown mouseup selectionchange\".split(\" \")}},Xd=null,Yd=null,Zd=null,$d=!1;\nfunction ae(a,b){if($d||null==Xd||Xd!==da())return null;var c=Xd;\"selectionStart\"in c&&Ud(c)?c={start:c.selectionStart,end:c.selectionEnd}:window.getSelection?(c=window.getSelection(),c={anchorNode:c.anchorNode,anchorOffset:c.anchorOffset,focusNode:c.focusNode,focusOffset:c.focusOffset}):c=void 0;return Zd&&ea(Zd,c)?null:(Zd=c,a=H.getPooled(Wd.select,Yd,a,b),a.type=\"select\",a.target=Xd,Ya(a),a)}\nvar be={eventTypes:Wd,extractEvents:function(a,b,c,d){var e=d.window===d?d.document:9===d.nodeType?d:d.ownerDocument,f;if(!(f=!e)){a:{e=Rd(e);f=sa.onSelect;for(var g=0;g<f.length;g++){var h=f[g];if(!e.hasOwnProperty(h)||!e[h]){e=!1;break a}}e=!0}f=!e}if(f)return null;e=b?Oa(b):window;switch(a){case \"focus\":if(Yb(e)||\"true\"===e.contentEditable)Xd=e,Yd=b,Zd=null;break;case \"blur\":Zd=Yd=Xd=null;break;case \"mousedown\":$d=!0;break;case \"contextmenu\":case \"mouseup\":return $d=!1,ae(c,d);case \"selectionchange\":if(Vd)break;\ncase \"keydown\":case \"keyup\":return ae(c,d)}return null}};Ga.injectEventPluginOrder(\"ResponderEventPlugin SimpleEventPlugin TapEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin\".split(\" \"));wa=Qa.getFiberCurrentPropsFromNode;xa=Qa.getInstanceFromNode;ya=Qa.getNodeFromInstance;Ga.injectEventPluginsByName({SimpleEventPlugin:Dd,EnterLeaveEventPlugin:id,ChangeEventPlugin:ad,SelectEventPlugin:be,BeforeInputEventPlugin:Ib});\nvar ce=\"function\"===typeof requestAnimationFrame?requestAnimationFrame:void 0,de=Date,ee=setTimeout,fe=clearTimeout,ge=void 0;if(\"object\"===typeof performance&&\"function\"===typeof performance.now){var he=performance;ge=function(){return he.now()}}else ge=function(){return de.now()};var ie=void 0,je=void 0;\nif(m.canUseDOM){var ke=\"function\"===typeof ce?ce:function(){A(\"276\")},L=null,le=null,me=-1,ne=!1,oe=!1,pe=0,qe=33,re=33,se={didTimeout:!1,timeRemaining:function(){var a=pe-ge();return 0<a?a:0}},ue=function(a,b){var c=a.scheduledCallback,d=!1;try{c(b),d=!0}finally{je(a),d||(ne=!0,window.postMessage(te,\"*\"))}},te=\"__reactIdleCallback$\"+Math.random().toString(36).slice(2);window.addEventListener(\"message\",function(a){if(a.source===window&&a.data===te&&(ne=!1,null!==L)){if(null!==L){var b=ge();if(!(-1===\nme||me>b)){a=-1;for(var c=[],d=L;null!==d;){var e=d.timeoutTime;-1!==e&&e<=b?c.push(d):-1!==e&&(-1===a||e<a)&&(a=e);d=d.next}if(0<c.length)for(se.didTimeout=!0,b=0,d=c.length;b<d;b++)ue(c[b],se);me=a}}for(a=ge();0<pe-a&&null!==L;)a=L,se.didTimeout=!1,ue(a,se),a=ge();null===L||oe||(oe=!0,ke(ve))}},!1);var ve=function(a){oe=!1;var b=a-pe+re;b<re&&qe<re?(8>b&&(b=8),re=b<qe?qe:b):qe=b;pe=a+re;ne||(ne=!0,window.postMessage(te,\"*\"))};ie=function(a,b){var c=-1;null!=b&&\"number\"===typeof b.timeout&&(c=ge()+\nb.timeout);if(-1===me||-1!==c&&c<me)me=c;a={scheduledCallback:a,timeoutTime:c,prev:null,next:null};null===L?L=a:(b=a.prev=le,null!==b&&(b.next=a));le=a;oe||(oe=!0,ke(ve));return a};je=function(a){if(null!==a.prev||L===a){var b=a.next,c=a.prev;a.next=null;a.prev=null;null!==b?null!==c?(c.next=b,b.prev=c):(b.prev=null,L=b):null!==c?(c.next=null,le=c):le=L=null}}}else{var we=new Map;ie=function(a){var b={scheduledCallback:a,timeoutTime:0,next:null,prev:null},c=ee(function(){a({timeRemaining:function(){return Infinity},\ndidTimeout:!1})});we.set(a,c);return b};je=function(a){var b=we.get(a.scheduledCallback);we.delete(a);fe(b)}}function xe(a){var b=\"\";ba.Children.forEach(a,function(a){null==a||\"string\"!==typeof a&&\"number\"!==typeof a||(b+=a)});return b}function ye(a,b){a=p({children:void 0},b);if(b=xe(b.children))a.children=b;return a}\nfunction ze(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+c;b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction Ae(a,b){var c=b.value;a._wrapperState={initialValue:null!=c?c:b.defaultValue,wasMultiple:!!b.multiple}}function Be(a,b){null!=b.dangerouslySetInnerHTML?A(\"91\"):void 0;return p({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function Ce(a,b){var c=b.value;null==c&&(c=b.defaultValue,b=b.children,null!=b&&(null!=c?A(\"92\"):void 0,Array.isArray(b)&&(1>=b.length?void 0:A(\"93\"),b=b[0]),c=\"\"+b),null==c&&(c=\"\"));a._wrapperState={initialValue:\"\"+c}}\nfunction De(a,b){var c=b.value;null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&(a.defaultValue=c));null!=b.defaultValue&&(a.defaultValue=b.defaultValue)}function Ee(a){var b=a.textContent;b===a._wrapperState.initialValue&&(a.value=b)}var Fe={html:\"http://www.w3.org/1999/xhtml\",mathml:\"http://www.w3.org/1998/Math/MathML\",svg:\"http://www.w3.org/2000/svg\"};\nfunction Ge(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}function He(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?Ge(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar Ie=void 0,Je=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==Fe.svg||\"innerHTML\"in a)a.innerHTML=b;else{Ie=Ie||document.createElement(\"div\");Ie.innerHTML=\"<svg>\"+b+\"</svg>\";for(b=Ie.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction Ke(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar Le={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,\nstopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},Me=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(Le).forEach(function(a){Me.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);Le[b]=Le[a]})});\nfunction Ne(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\");var e=c;var f=b[c];e=null==f||\"boolean\"===typeof f||\"\"===f?\"\":d||\"number\"!==typeof f||0===f||Le.hasOwnProperty(e)&&Le[e]?(\"\"+f).trim():f+\"px\";\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var Oe=p({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction Pe(a,b,c){b&&(Oe[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML?A(\"137\",a,c()):void 0),null!=b.dangerouslySetInnerHTML&&(null!=b.children?A(\"60\"):void 0,\"object\"===typeof b.dangerouslySetInnerHTML&&\"__html\"in b.dangerouslySetInnerHTML?void 0:A(\"61\")),null!=b.style&&\"object\"!==typeof b.style?A(\"62\",c()):void 0)}\nfunction Qe(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}var Re=v.thatReturns(\"\");\nfunction Se(a,b){a=9===a.nodeType||11===a.nodeType?a:a.ownerDocument;var c=Rd(a);b=sa[b];for(var d=0;d<b.length;d++){var e=b[d];if(!c.hasOwnProperty(e)||!c[e]){switch(e){case \"scroll\":Md(\"scroll\",a);break;case \"focus\":case \"blur\":Md(\"focus\",a);Md(\"blur\",a);c.blur=!0;c.focus=!0;break;case \"cancel\":case \"close\":$b(e,!0)&&Md(e,a);break;case \"invalid\":case \"submit\":case \"reset\":break;default:-1===jb.indexOf(e)&&K(e,a)}c[e]=!0}}}\nfunction Te(a,b,c,d){c=9===c.nodeType?c:c.ownerDocument;d===Fe.html&&(d=Ge(a));d===Fe.html?\"script\"===a?(a=c.createElement(\"div\"),a.innerHTML=\"<script>\\x3c/script>\",a=a.removeChild(a.firstChild)):a=\"string\"===typeof b.is?c.createElement(a,{is:b.is}):c.createElement(a):a=c.createElementNS(d,a);return a}function Ue(a,b){return(9===b.nodeType?b:b.ownerDocument).createTextNode(a)}\nfunction Ve(a,b,c,d){var e=Qe(b,c);switch(b){case \"iframe\":case \"object\":K(\"load\",a);var f=c;break;case \"video\":case \"audio\":for(f=0;f<jb.length;f++)K(jb[f],a);f=c;break;case \"source\":K(\"error\",a);f=c;break;case \"img\":case \"image\":case \"link\":K(\"error\",a);K(\"load\",a);f=c;break;case \"form\":K(\"reset\",a);K(\"submit\",a);f=c;break;case \"details\":K(\"toggle\",a);f=c;break;case \"input\":Hc(a,c);f=Gc(a,c);K(\"invalid\",a);Se(d,\"onChange\");break;case \"option\":f=ye(a,c);break;case \"select\":Ae(a,c);f=p({},c,{value:void 0});\nK(\"invalid\",a);Se(d,\"onChange\");break;case \"textarea\":Ce(a,c);f=Be(a,c);K(\"invalid\",a);Se(d,\"onChange\");break;default:f=c}Pe(b,f,Re);var g=f,h;for(h in g)if(g.hasOwnProperty(h)){var k=g[h];\"style\"===h?Ne(a,k,Re):\"dangerouslySetInnerHTML\"===h?(k=k?k.__html:void 0,null!=k&&Je(a,k)):\"children\"===h?\"string\"===typeof k?(\"textarea\"!==b||\"\"!==k)&&Ke(a,k):\"number\"===typeof k&&Ke(a,\"\"+k):\"suppressContentEditableWarning\"!==h&&\"suppressHydrationWarning\"!==h&&\"autoFocus\"!==h&&(ra.hasOwnProperty(h)?null!=k&&Se(d,\nh):null!=k&&Fc(a,h,k,e))}switch(b){case \"input\":cc(a);Mc(a,c,!1);break;case \"textarea\":cc(a);Ee(a,c);break;case \"option\":null!=c.value&&a.setAttribute(\"value\",c.value);break;case \"select\":a.multiple=!!c.multiple;b=c.value;null!=b?ze(a,!!c.multiple,b,!1):null!=c.defaultValue&&ze(a,!!c.multiple,c.defaultValue,!0);break;default:\"function\"===typeof f.onClick&&(a.onclick=v)}}\nfunction We(a,b,c,d,e){var f=null;switch(b){case \"input\":c=Gc(a,c);d=Gc(a,d);f=[];break;case \"option\":c=ye(a,c);d=ye(a,d);f=[];break;case \"select\":c=p({},c,{value:void 0});d=p({},d,{value:void 0});f=[];break;case \"textarea\":c=Be(a,c);d=Be(a,d);f=[];break;default:\"function\"!==typeof c.onClick&&\"function\"===typeof d.onClick&&(a.onclick=v)}Pe(b,d,Re);b=a=void 0;var g=null;for(a in c)if(!d.hasOwnProperty(a)&&c.hasOwnProperty(a)&&null!=c[a])if(\"style\"===a){var h=c[a];for(b in h)h.hasOwnProperty(b)&&(g||\n(g={}),g[b]=\"\")}else\"dangerouslySetInnerHTML\"!==a&&\"children\"!==a&&\"suppressContentEditableWarning\"!==a&&\"suppressHydrationWarning\"!==a&&\"autoFocus\"!==a&&(ra.hasOwnProperty(a)?f||(f=[]):(f=f||[]).push(a,null));for(a in d){var k=d[a];h=null!=c?c[a]:void 0;if(d.hasOwnProperty(a)&&k!==h&&(null!=k||null!=h))if(\"style\"===a)if(h){for(b in h)!h.hasOwnProperty(b)||k&&k.hasOwnProperty(b)||(g||(g={}),g[b]=\"\");for(b in k)k.hasOwnProperty(b)&&h[b]!==k[b]&&(g||(g={}),g[b]=k[b])}else g||(f||(f=[]),f.push(a,g)),\ng=k;else\"dangerouslySetInnerHTML\"===a?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(f=f||[]).push(a,\"\"+k)):\"children\"===a?h===k||\"string\"!==typeof k&&\"number\"!==typeof k||(f=f||[]).push(a,\"\"+k):\"suppressContentEditableWarning\"!==a&&\"suppressHydrationWarning\"!==a&&(ra.hasOwnProperty(a)?(null!=k&&Se(e,a),f||h===k||(f=[])):(f=f||[]).push(a,k))}g&&(f=f||[]).push(\"style\",g);return f}\nfunction Xe(a,b,c,d,e){\"input\"===c&&\"radio\"===e.type&&null!=e.name&&Jc(a,e);Qe(c,d);d=Qe(c,e);for(var f=0;f<b.length;f+=2){var g=b[f],h=b[f+1];\"style\"===g?Ne(a,h,Re):\"dangerouslySetInnerHTML\"===g?Je(a,h):\"children\"===g?Ke(a,h):Fc(a,g,h,d)}switch(c){case \"input\":Kc(a,e);break;case \"textarea\":De(a,e);break;case \"select\":a._wrapperState.initialValue=void 0,b=a._wrapperState.wasMultiple,a._wrapperState.wasMultiple=!!e.multiple,c=e.value,null!=c?ze(a,!!e.multiple,c,!1):b!==!!e.multiple&&(null!=e.defaultValue?\nze(a,!!e.multiple,e.defaultValue,!0):ze(a,!!e.multiple,e.multiple?[]:\"\",!1))}}\nfunction Ye(a,b,c,d,e){switch(b){case \"iframe\":case \"object\":K(\"load\",a);break;case \"video\":case \"audio\":for(d=0;d<jb.length;d++)K(jb[d],a);break;case \"source\":K(\"error\",a);break;case \"img\":case \"image\":case \"link\":K(\"error\",a);K(\"load\",a);break;case \"form\":K(\"reset\",a);K(\"submit\",a);break;case \"details\":K(\"toggle\",a);break;case \"input\":Hc(a,c);K(\"invalid\",a);Se(e,\"onChange\");break;case \"select\":Ae(a,c);K(\"invalid\",a);Se(e,\"onChange\");break;case \"textarea\":Ce(a,c),K(\"invalid\",a),Se(e,\"onChange\")}Pe(b,\nc,Re);d=null;for(var f in c)if(c.hasOwnProperty(f)){var g=c[f];\"children\"===f?\"string\"===typeof g?a.textContent!==g&&(d=[\"children\",g]):\"number\"===typeof g&&a.textContent!==\"\"+g&&(d=[\"children\",\"\"+g]):ra.hasOwnProperty(f)&&null!=g&&Se(e,f)}switch(b){case \"input\":cc(a);Mc(a,c,!0);break;case \"textarea\":cc(a);Ee(a,c);break;case \"select\":case \"option\":break;default:\"function\"===typeof c.onClick&&(a.onclick=v)}return d}function Ze(a,b){return a.nodeValue!==b}\nvar $e={createElement:Te,createTextNode:Ue,setInitialProperties:Ve,diffProperties:We,updateProperties:Xe,diffHydratedProperties:Ye,diffHydratedText:Ze,warnForUnmatchedText:function(){},warnForDeletedHydratableElement:function(){},warnForDeletedHydratableText:function(){},warnForInsertedHydratedElement:function(){},warnForInsertedHydratedText:function(){},restoreControlledState:function(a,b,c){switch(b){case \"input\":Kc(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;\nc=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Pa(d);e?void 0:A(\"90\");dc(d);Kc(d,e)}}}break;case \"textarea\":De(a,c);break;case \"select\":b=c.value,null!=b&&ze(a,!!c.multiple,b,!1)}}},af=null,bf=null;function cf(a,b){switch(a){case \"button\":case \"input\":case \"select\":case \"textarea\":return!!b.autoFocus}return!1}\nfunction df(a,b){return\"textarea\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&\"string\"===typeof b.dangerouslySetInnerHTML.__html}var ef=ge,ff=ie,gf=je;function hf(a){for(a=a.nextSibling;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a}function jf(a){for(a=a.firstChild;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a}new Set;var kf=[],lf=-1;function mf(a){return{current:a}}\nfunction M(a){0>lf||(a.current=kf[lf],kf[lf]=null,lf--)}function N(a,b){lf++;kf[lf]=a.current;a.current=b}var nf=mf(ha),O=mf(!1),of=ha;function pf(a){return qf(a)?of:nf.current}\nfunction rf(a,b){var c=a.type.contextTypes;if(!c)return ha;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}function qf(a){return 2===a.tag&&null!=a.type.childContextTypes}function sf(a){qf(a)&&(M(O,a),M(nf,a))}function tf(a){M(O,a);M(nf,a)}\nfunction uf(a,b,c){nf.current!==ha?A(\"168\"):void 0;N(nf,b,a);N(O,c,a)}function vf(a,b){var c=a.stateNode,d=a.type.childContextTypes;if(\"function\"!==typeof c.getChildContext)return b;c=c.getChildContext();for(var e in c)e in d?void 0:A(\"108\",uc(a)||\"Unknown\",e);return p({},b,c)}function wf(a){if(!qf(a))return!1;var b=a.stateNode;b=b&&b.__reactInternalMemoizedMergedChildContext||ha;of=nf.current;N(nf,b,a);N(O,O.current,a);return!0}\nfunction xf(a,b){var c=a.stateNode;c?void 0:A(\"169\");if(b){var d=vf(a,of);c.__reactInternalMemoizedMergedChildContext=d;M(O,a);M(nf,a);N(nf,d,a)}else M(O,a);N(O,b,a)}\nfunction yf(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=null;this.index=0;this.ref=null;this.pendingProps=b;this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.effectTag=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.expirationTime=0;this.alternate=null}\nfunction zf(a,b,c){var d=a.alternate;null===d?(d=new yf(a.tag,b,a.key,a.mode),d.type=a.type,d.stateNode=a.stateNode,d.alternate=a,a.alternate=d):(d.pendingProps=b,d.effectTag=0,d.nextEffect=null,d.firstEffect=null,d.lastEffect=null);d.expirationTime=c;d.child=a.child;d.memoizedProps=a.memoizedProps;d.memoizedState=a.memoizedState;d.updateQueue=a.updateQueue;d.sibling=a.sibling;d.index=a.index;d.ref=a.ref;return d}\nfunction Af(a,b,c){var d=a.type,e=a.key;a=a.props;if(\"function\"===typeof d)var f=d.prototype&&d.prototype.isReactComponent?2:0;else if(\"string\"===typeof d)f=5;else switch(d){case ic:return Bf(a.children,b,c,e);case pc:f=11;b|=3;break;case jc:f=11;b|=2;break;case kc:return d=new yf(15,a,e,b|4),d.type=kc,d.expirationTime=c,d;case rc:f=16;b|=2;break;default:a:{switch(\"object\"===typeof d&&null!==d?d.$$typeof:null){case lc:f=13;break a;case mc:f=12;break a;case qc:f=14;break a;default:A(\"130\",null==d?\nd:typeof d,\"\")}f=void 0}}b=new yf(f,a,e,b);b.type=d;b.expirationTime=c;return b}function Bf(a,b,c,d){a=new yf(10,a,d,b);a.expirationTime=c;return a}function Cf(a,b,c){a=new yf(6,a,null,b);a.expirationTime=c;return a}function Df(a,b,c){b=new yf(4,null!==a.children?a.children:[],a.key,b);b.expirationTime=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}\nfunction Ef(a,b,c){b=new yf(3,null,null,b?3:0);a={current:b,containerInfo:a,pendingChildren:null,earliestPendingTime:0,latestPendingTime:0,earliestSuspendedTime:0,latestSuspendedTime:0,latestPingedTime:0,pendingCommitExpirationTime:0,finishedWork:null,context:null,pendingContext:null,hydrate:c,remainingExpirationTime:0,firstBatch:null,nextScheduledRoot:null};return b.stateNode=a}var Ff=null,Gf=null;function Hf(a){return function(b){try{return a(b)}catch(c){}}}\nfunction If(a){if(\"undefined\"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var b=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(b.isDisabled||!b.supportsFiber)return!0;try{var c=b.inject(a);Ff=Hf(function(a){return b.onCommitFiberRoot(c,a)});Gf=Hf(function(a){return b.onCommitFiberUnmount(c,a)})}catch(d){}return!0}function Jf(a){\"function\"===typeof Ff&&Ff(a)}function Kf(a){\"function\"===typeof Gf&&Gf(a)}var Lf=!1;\nfunction Mf(a){return{expirationTime:0,baseState:a,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function Nf(a){return{expirationTime:a.expirationTime,baseState:a.baseState,firstUpdate:a.firstUpdate,lastUpdate:a.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}\nfunction Of(a){return{expirationTime:a,tag:0,payload:null,callback:null,next:null,nextEffect:null}}function Pf(a,b,c){null===a.lastUpdate?a.firstUpdate=a.lastUpdate=b:(a.lastUpdate.next=b,a.lastUpdate=b);if(0===a.expirationTime||a.expirationTime>c)a.expirationTime=c}\nfunction Qf(a,b,c){var d=a.alternate;if(null===d){var e=a.updateQueue;var f=null;null===e&&(e=a.updateQueue=Mf(a.memoizedState))}else e=a.updateQueue,f=d.updateQueue,null===e?null===f?(e=a.updateQueue=Mf(a.memoizedState),f=d.updateQueue=Mf(d.memoizedState)):e=a.updateQueue=Nf(f):null===f&&(f=d.updateQueue=Nf(e));null===f||e===f?Pf(e,b,c):null===e.lastUpdate||null===f.lastUpdate?(Pf(e,b,c),Pf(f,b,c)):(Pf(e,b,c),f.lastUpdate=b)}\nfunction Rf(a,b,c){var d=a.updateQueue;d=null===d?a.updateQueue=Mf(a.memoizedState):Sf(a,d);null===d.lastCapturedUpdate?d.firstCapturedUpdate=d.lastCapturedUpdate=b:(d.lastCapturedUpdate.next=b,d.lastCapturedUpdate=b);if(0===d.expirationTime||d.expirationTime>c)d.expirationTime=c}function Sf(a,b){var c=a.alternate;null!==c&&b===c.updateQueue&&(b=a.updateQueue=Nf(b));return b}\nfunction Tf(a,b,c,d,e,f){switch(c.tag){case 1:return a=c.payload,\"function\"===typeof a?a.call(f,d,e):a;case 3:a.effectTag=a.effectTag&-1025|64;case 0:a=c.payload;e=\"function\"===typeof a?a.call(f,d,e):a;if(null===e||void 0===e)break;return p({},d,e);case 2:Lf=!0}return d}\nfunction Uf(a,b,c,d,e){Lf=!1;if(!(0===b.expirationTime||b.expirationTime>e)){b=Sf(a,b);for(var f=b.baseState,g=null,h=0,k=b.firstUpdate,n=f;null!==k;){var r=k.expirationTime;if(r>e){if(null===g&&(g=k,f=n),0===h||h>r)h=r}else n=Tf(a,b,k,n,c,d),null!==k.callback&&(a.effectTag|=32,k.nextEffect=null,null===b.lastEffect?b.firstEffect=b.lastEffect=k:(b.lastEffect.nextEffect=k,b.lastEffect=k));k=k.next}r=null;for(k=b.firstCapturedUpdate;null!==k;){var w=k.expirationTime;if(w>e){if(null===r&&(r=k,null===\ng&&(f=n)),0===h||h>w)h=w}else n=Tf(a,b,k,n,c,d),null!==k.callback&&(a.effectTag|=32,k.nextEffect=null,null===b.lastCapturedEffect?b.firstCapturedEffect=b.lastCapturedEffect=k:(b.lastCapturedEffect.nextEffect=k,b.lastCapturedEffect=k));k=k.next}null===g&&(b.lastUpdate=null);null===r?b.lastCapturedUpdate=null:a.effectTag|=32;null===g&&null===r&&(f=n);b.baseState=f;b.firstUpdate=g;b.firstCapturedUpdate=r;b.expirationTime=h;a.memoizedState=n}}\nfunction Vf(a,b){\"function\"!==typeof a?A(\"191\",a):void 0;a.call(b)}\nfunction Wf(a,b,c){null!==b.firstCapturedUpdate&&(null!==b.lastUpdate&&(b.lastUpdate.next=b.firstCapturedUpdate,b.lastUpdate=b.lastCapturedUpdate),b.firstCapturedUpdate=b.lastCapturedUpdate=null);a=b.firstEffect;for(b.firstEffect=b.lastEffect=null;null!==a;){var d=a.callback;null!==d&&(a.callback=null,Vf(d,c));a=a.nextEffect}a=b.firstCapturedEffect;for(b.firstCapturedEffect=b.lastCapturedEffect=null;null!==a;)b=a.callback,null!==b&&(a.callback=null,Vf(b,c)),a=a.nextEffect}\nfunction Xf(a,b){return{value:a,source:b,stack:vc(b)}}var Yf=mf(null),Zf=mf(null),$f=mf(0);function ag(a){var b=a.type._context;N($f,b._changedBits,a);N(Zf,b._currentValue,a);N(Yf,a,a);b._currentValue=a.pendingProps.value;b._changedBits=a.stateNode}function bg(a){var b=$f.current,c=Zf.current;M(Yf,a);M(Zf,a);M($f,a);a=a.type._context;a._currentValue=c;a._changedBits=b}var cg={},dg=mf(cg),eg=mf(cg),fg=mf(cg);function gg(a){a===cg?A(\"174\"):void 0;return a}\nfunction ig(a,b){N(fg,b,a);N(eg,a,a);N(dg,cg,a);var c=b.nodeType;switch(c){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:He(null,\"\");break;default:c=8===c?b.parentNode:b,b=c.namespaceURI||null,c=c.tagName,b=He(b,c)}M(dg,a);N(dg,b,a)}function jg(a){M(dg,a);M(eg,a);M(fg,a)}function kg(a){eg.current===a&&(M(dg,a),M(eg,a))}function lg(a,b,c){var d=a.memoizedState;b=b(c,d);d=null===b||void 0===b?d:p({},d,b);a.memoizedState=d;a=a.updateQueue;null!==a&&0===a.expirationTime&&(a.baseState=d)}\nvar pg={isMounted:function(a){return(a=a._reactInternalFiber)?2===jd(a):!1},enqueueSetState:function(a,b,c){a=a._reactInternalFiber;var d=mg();d=ng(d,a);var e=Of(d);e.payload=b;void 0!==c&&null!==c&&(e.callback=c);Qf(a,e,d);og(a,d)},enqueueReplaceState:function(a,b,c){a=a._reactInternalFiber;var d=mg();d=ng(d,a);var e=Of(d);e.tag=1;e.payload=b;void 0!==c&&null!==c&&(e.callback=c);Qf(a,e,d);og(a,d)},enqueueForceUpdate:function(a,b){a=a._reactInternalFiber;var c=mg();c=ng(c,a);var d=Of(c);d.tag=2;void 0!==\nb&&null!==b&&(d.callback=b);Qf(a,d,c);og(a,c)}};function qg(a,b,c,d,e,f){var g=a.stateNode;a=a.type;return\"function\"===typeof g.shouldComponentUpdate?g.shouldComponentUpdate(c,e,f):a.prototype&&a.prototype.isPureReactComponent?!ea(b,c)||!ea(d,e):!0}\nfunction rg(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&pg.enqueueReplaceState(b,b.state,null)}\nfunction sg(a,b){var c=a.type,d=a.stateNode,e=a.pendingProps,f=pf(a);d.props=e;d.state=a.memoizedState;d.refs=ha;d.context=rf(a,f);f=a.updateQueue;null!==f&&(Uf(a,f,e,d,b),d.state=a.memoizedState);f=a.type.getDerivedStateFromProps;\"function\"===typeof f&&(lg(a,f,e),d.state=a.memoizedState);\"function\"===typeof c.getDerivedStateFromProps||\"function\"===typeof d.getSnapshotBeforeUpdate||\"function\"!==typeof d.UNSAFE_componentWillMount&&\"function\"!==typeof d.componentWillMount||(c=d.state,\"function\"===typeof d.componentWillMount&&\nd.componentWillMount(),\"function\"===typeof d.UNSAFE_componentWillMount&&d.UNSAFE_componentWillMount(),c!==d.state&&pg.enqueueReplaceState(d,d.state,null),f=a.updateQueue,null!==f&&(Uf(a,f,e,d,b),d.state=a.memoizedState));\"function\"===typeof d.componentDidMount&&(a.effectTag|=4)}var tg=Array.isArray;\nfunction ug(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;var d=void 0;c&&(2!==c.tag?A(\"110\"):void 0,d=c.stateNode);d?void 0:A(\"147\",a);var e=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===e)return b.ref;b=function(a){var b=d.refs===ha?d.refs={}:d.refs;null===a?delete b[e]:b[e]=a};b._stringRef=e;return b}\"string\"!==typeof a?A(\"148\"):void 0;c._owner?void 0:A(\"254\",a)}return a}\nfunction vg(a,b){\"textarea\"!==a.type&&A(\"31\",\"[object Object]\"===Object.prototype.toString.call(b)?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":b,\"\")}\nfunction wg(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c;c.nextEffect=null;c.effectTag=8}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b,c){a=zf(a,b,c);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.effectTag=\n2,c):d;b.effectTag=2;return c}function g(b){a&&null===b.alternate&&(b.effectTag=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=Cf(c,a.mode,d),b.return=a,b;b=e(b,c,d);b.return=a;return b}function k(a,b,c,d){if(null!==b&&b.type===c.type)return d=e(b,c.props,d),d.ref=ug(a,b,c),d.return=a,d;d=Af(c,a.mode,d);d.ref=ug(a,b,c);d.return=a;return d}function n(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=\nDf(c,a.mode,d),b.return=a,b;b=e(b,c.children||[],d);b.return=a;return b}function r(a,b,c,d,f){if(null===b||10!==b.tag)return b=Bf(c,a.mode,d,f),b.return=a,b;b=e(b,c,d);b.return=a;return b}function w(a,b,c){if(\"string\"===typeof b||\"number\"===typeof b)return b=Cf(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case gc:return c=Af(b,a.mode,c),c.ref=ug(a,null,b),c.return=a,c;case hc:return b=Df(b,a.mode,c),b.return=a,b}if(tg(b)||tc(b))return b=Bf(b,a.mode,c,null),b.return=\na,b;vg(a,b)}return null}function P(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case gc:return c.key===e?c.type===ic?r(a,b,c.props.children,d,e):k(a,b,c,d):null;case hc:return c.key===e?n(a,b,c,d):null}if(tg(c)||tc(c))return null!==e?null:r(a,b,c,d,null);vg(a,c)}return null}function nc(a,b,c,d,e){if(\"string\"===typeof d||\"number\"===typeof d)return a=a.get(c)||null,h(b,a,\"\"+d,e);\nif(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case gc:return a=a.get(null===d.key?c:d.key)||null,d.type===ic?r(b,a,d.props.children,e,d.key):k(b,a,d,e);case hc:return a=a.get(null===d.key?c:d.key)||null,n(b,a,d,e)}if(tg(d)||tc(d))return a=a.get(c)||null,r(b,a,d,e,null);vg(b,d)}return null}function Jd(e,g,h,k){for(var u=null,x=null,t=g,q=g=0,n=null;null!==t&&q<h.length;q++){t.index>q?(n=t,t=null):n=t.sibling;var l=P(e,t,h[q],k);if(null===l){null===t&&(t=n);break}a&&t&&null===l.alternate&&b(e,\nt);g=f(l,g,q);null===x?u=l:x.sibling=l;x=l;t=n}if(q===h.length)return c(e,t),u;if(null===t){for(;q<h.length;q++)if(t=w(e,h[q],k))g=f(t,g,q),null===x?u=t:x.sibling=t,x=t;return u}for(t=d(e,t);q<h.length;q++)if(n=nc(t,e,q,h[q],k))a&&null!==n.alternate&&t.delete(null===n.key?q:n.key),g=f(n,g,q),null===x?u=n:x.sibling=n,x=n;a&&t.forEach(function(a){return b(e,a)});return u}function E(e,g,h,k){var u=tc(h);\"function\"!==typeof u?A(\"150\"):void 0;h=u.call(h);null==h?A(\"151\"):void 0;for(var t=u=null,n=g,x=\ng=0,y=null,l=h.next();null!==n&&!l.done;x++,l=h.next()){n.index>x?(y=n,n=null):y=n.sibling;var r=P(e,n,l.value,k);if(null===r){n||(n=y);break}a&&n&&null===r.alternate&&b(e,n);g=f(r,g,x);null===t?u=r:t.sibling=r;t=r;n=y}if(l.done)return c(e,n),u;if(null===n){for(;!l.done;x++,l=h.next())l=w(e,l.value,k),null!==l&&(g=f(l,g,x),null===t?u=l:t.sibling=l,t=l);return u}for(n=d(e,n);!l.done;x++,l=h.next())l=nc(n,e,x,l.value,k),null!==l&&(a&&null!==l.alternate&&n.delete(null===l.key?x:l.key),g=f(l,g,x),null===\nt?u=l:t.sibling=l,t=l);a&&n.forEach(function(a){return b(e,a)});return u}return function(a,d,f,h){var k=\"object\"===typeof f&&null!==f&&f.type===ic&&null===f.key;k&&(f=f.props.children);var n=\"object\"===typeof f&&null!==f;if(n)switch(f.$$typeof){case gc:a:{n=f.key;for(k=d;null!==k;){if(k.key===n)if(10===k.tag?f.type===ic:k.type===f.type){c(a,k.sibling);d=e(k,f.type===ic?f.props.children:f.props,h);d.ref=ug(a,k,f);d.return=a;a=d;break a}else{c(a,k);break}else b(a,k);k=k.sibling}f.type===ic?(d=Bf(f.props.children,\na.mode,h,f.key),d.return=a,a=d):(h=Af(f,a.mode,h),h.ref=ug(a,d,f),h.return=a,a=h)}return g(a);case hc:a:{for(k=f.key;null!==d;){if(d.key===k)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[],h);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=Df(f,a.mode,h);d.return=a;a=d}return g(a)}if(\"string\"===typeof f||\"number\"===typeof f)return f=\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f,h),d.return=\na,a=d):(c(a,d),d=Cf(f,a.mode,h),d.return=a,a=d),g(a);if(tg(f))return Jd(a,d,f,h);if(tc(f))return E(a,d,f,h);n&&vg(a,f);if(\"undefined\"===typeof f&&!k)switch(a.tag){case 2:case 1:h=a.type,A(\"152\",h.displayName||h.name||\"Component\")}return c(a,d)}}var xg=wg(!0),yg=wg(!1),zg=null,Ag=null,Bg=!1;function Cg(a,b){var c=new yf(5,null,null,0);c.type=\"DELETED\";c.stateNode=b;c.return=a;c.effectTag=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}\nfunction Dg(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,!0):!1;default:return!1}}function Eg(a){if(Bg){var b=Ag;if(b){var c=b;if(!Dg(a,b)){b=hf(c);if(!b||!Dg(a,b)){a.effectTag|=2;Bg=!1;zg=a;return}Cg(zg,c)}zg=a;Ag=jf(b)}else a.effectTag|=2,Bg=!1,zg=a}}\nfunction Fg(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag;)a=a.return;zg=a}function Gg(a){if(a!==zg)return!1;if(!Bg)return Fg(a),Bg=!0,!1;var b=a.type;if(5!==a.tag||\"head\"!==b&&\"body\"!==b&&!df(b,a.memoizedProps))for(b=Ag;b;)Cg(a,b),b=hf(b);Fg(a);Ag=zg?hf(a.stateNode):null;return!0}function Hg(){Ag=zg=null;Bg=!1}function Q(a,b,c){Ig(a,b,c,b.expirationTime)}function Ig(a,b,c,d){b.child=null===a?yg(b,null,c,d):xg(b,a.child,c,d)}\nfunction Jg(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.effectTag|=128}function Kg(a,b,c,d,e){Jg(a,b);var f=0!==(b.effectTag&64);if(!c&&!f)return d&&xf(b,!1),R(a,b);c=b.stateNode;ec.current=b;var g=f?null:c.render();b.effectTag|=1;f&&(Ig(a,b,null,e),b.child=null);Ig(a,b,g,e);b.memoizedState=c.state;b.memoizedProps=c.props;d&&xf(b,!0);return b.child}\nfunction Lg(a){var b=a.stateNode;b.pendingContext?uf(a,b.pendingContext,b.pendingContext!==b.context):b.context&&uf(a,b.context,!1);ig(a,b.containerInfo)}\nfunction Mg(a,b,c,d){var e=a.child;null!==e&&(e.return=a);for(;null!==e;){switch(e.tag){case 12:var f=e.stateNode|0;if(e.type===b&&0!==(f&c)){for(f=e;null!==f;){var g=f.alternate;if(0===f.expirationTime||f.expirationTime>d)f.expirationTime=d,null!==g&&(0===g.expirationTime||g.expirationTime>d)&&(g.expirationTime=d);else if(null!==g&&(0===g.expirationTime||g.expirationTime>d))g.expirationTime=d;else break;f=f.return}f=null}else f=e.child;break;case 13:f=e.type===a.type?null:e.child;break;default:f=\ne.child}if(null!==f)f.return=e;else for(f=e;null!==f;){if(f===a){f=null;break}e=f.sibling;if(null!==e){e.return=f.return;f=e;break}f=f.return}e=f}}\nfunction Qg(a,b,c){var d=b.type._context,e=b.pendingProps,f=b.memoizedProps,g=!0;if(O.current)g=!1;else if(f===e)return b.stateNode=0,ag(b),R(a,b);var h=e.value;b.memoizedProps=e;if(null===f)h=1073741823;else if(f.value===e.value){if(f.children===e.children&&g)return b.stateNode=0,ag(b),R(a,b);h=0}else{var k=f.value;if(k===h&&(0!==k||1/k===1/h)||k!==k&&h!==h){if(f.children===e.children&&g)return b.stateNode=0,ag(b),R(a,b);h=0}else if(h=\"function\"===typeof d._calculateChangedBits?d._calculateChangedBits(k,\nh):1073741823,h|=0,0===h){if(f.children===e.children&&g)return b.stateNode=0,ag(b),R(a,b)}else Mg(b,d,h,c)}b.stateNode=h;ag(b);Q(a,b,e.children);return b.child}function R(a,b){null!==a&&b.child!==a.child?A(\"153\"):void 0;if(null!==b.child){a=b.child;var c=zf(a,a.pendingProps,a.expirationTime);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=zf(a,a.pendingProps,a.expirationTime),c.return=b;c.sibling=null}return b.child}\nfunction Rg(a,b,c){if(0===b.expirationTime||b.expirationTime>c){switch(b.tag){case 3:Lg(b);break;case 2:wf(b);break;case 4:ig(b,b.stateNode.containerInfo);break;case 13:ag(b)}return null}switch(b.tag){case 0:null!==a?A(\"155\"):void 0;var d=b.type,e=b.pendingProps,f=pf(b);f=rf(b,f);d=d(e,f);b.effectTag|=1;\"object\"===typeof d&&null!==d&&\"function\"===typeof d.render&&void 0===d.$$typeof?(f=b.type,b.tag=2,b.memoizedState=null!==d.state&&void 0!==d.state?d.state:null,f=f.getDerivedStateFromProps,\"function\"===\ntypeof f&&lg(b,f,e),e=wf(b),d.updater=pg,b.stateNode=d,d._reactInternalFiber=b,sg(b,c),a=Kg(a,b,!0,e,c)):(b.tag=1,Q(a,b,d),b.memoizedProps=e,a=b.child);return a;case 1:return e=b.type,c=b.pendingProps,O.current||b.memoizedProps!==c?(d=pf(b),d=rf(b,d),e=e(c,d),b.effectTag|=1,Q(a,b,e),b.memoizedProps=c,a=b.child):a=R(a,b),a;case 2:e=wf(b);if(null===a)if(null===b.stateNode){var g=b.pendingProps,h=b.type;d=pf(b);var k=2===b.tag&&null!=b.type.contextTypes;f=k?rf(b,d):ha;g=new h(g,f);b.memoizedState=null!==\ng.state&&void 0!==g.state?g.state:null;g.updater=pg;b.stateNode=g;g._reactInternalFiber=b;k&&(k=b.stateNode,k.__reactInternalMemoizedUnmaskedChildContext=d,k.__reactInternalMemoizedMaskedChildContext=f);sg(b,c);d=!0}else{h=b.type;d=b.stateNode;k=b.memoizedProps;f=b.pendingProps;d.props=k;var n=d.context;g=pf(b);g=rf(b,g);var r=h.getDerivedStateFromProps;(h=\"function\"===typeof r||\"function\"===typeof d.getSnapshotBeforeUpdate)||\"function\"!==typeof d.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof d.componentWillReceiveProps||\n(k!==f||n!==g)&&rg(b,d,f,g);Lf=!1;var w=b.memoizedState;n=d.state=w;var P=b.updateQueue;null!==P&&(Uf(b,P,f,d,c),n=b.memoizedState);k!==f||w!==n||O.current||Lf?(\"function\"===typeof r&&(lg(b,r,f),n=b.memoizedState),(k=Lf||qg(b,k,f,w,n,g))?(h||\"function\"!==typeof d.UNSAFE_componentWillMount&&\"function\"!==typeof d.componentWillMount||(\"function\"===typeof d.componentWillMount&&d.componentWillMount(),\"function\"===typeof d.UNSAFE_componentWillMount&&d.UNSAFE_componentWillMount()),\"function\"===typeof d.componentDidMount&&\n(b.effectTag|=4)):(\"function\"===typeof d.componentDidMount&&(b.effectTag|=4),b.memoizedProps=f,b.memoizedState=n),d.props=f,d.state=n,d.context=g,d=k):(\"function\"===typeof d.componentDidMount&&(b.effectTag|=4),d=!1)}else h=b.type,d=b.stateNode,f=b.memoizedProps,k=b.pendingProps,d.props=f,n=d.context,g=pf(b),g=rf(b,g),r=h.getDerivedStateFromProps,(h=\"function\"===typeof r||\"function\"===typeof d.getSnapshotBeforeUpdate)||\"function\"!==typeof d.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof d.componentWillReceiveProps||\n(f!==k||n!==g)&&rg(b,d,k,g),Lf=!1,n=b.memoizedState,w=d.state=n,P=b.updateQueue,null!==P&&(Uf(b,P,k,d,c),w=b.memoizedState),f!==k||n!==w||O.current||Lf?(\"function\"===typeof r&&(lg(b,r,k),w=b.memoizedState),(r=Lf||qg(b,f,k,n,w,g))?(h||\"function\"!==typeof d.UNSAFE_componentWillUpdate&&\"function\"!==typeof d.componentWillUpdate||(\"function\"===typeof d.componentWillUpdate&&d.componentWillUpdate(k,w,g),\"function\"===typeof d.UNSAFE_componentWillUpdate&&d.UNSAFE_componentWillUpdate(k,w,g)),\"function\"===typeof d.componentDidUpdate&&\n(b.effectTag|=4),\"function\"===typeof d.getSnapshotBeforeUpdate&&(b.effectTag|=256)):(\"function\"!==typeof d.componentDidUpdate||f===a.memoizedProps&&n===a.memoizedState||(b.effectTag|=4),\"function\"!==typeof d.getSnapshotBeforeUpdate||f===a.memoizedProps&&n===a.memoizedState||(b.effectTag|=256),b.memoizedProps=k,b.memoizedState=w),d.props=k,d.state=w,d.context=g,d=r):(\"function\"!==typeof d.componentDidUpdate||f===a.memoizedProps&&n===a.memoizedState||(b.effectTag|=4),\"function\"!==typeof d.getSnapshotBeforeUpdate||\nf===a.memoizedProps&&n===a.memoizedState||(b.effectTag|=256),d=!1);return Kg(a,b,d,e,c);case 3:Lg(b);e=b.updateQueue;if(null!==e)if(d=b.memoizedState,d=null!==d?d.element:null,Uf(b,e,b.pendingProps,null,c),e=b.memoizedState.element,e===d)Hg(),a=R(a,b);else{d=b.stateNode;if(d=(null===a||null===a.child)&&d.hydrate)Ag=jf(b.stateNode.containerInfo),zg=b,d=Bg=!0;d?(b.effectTag|=2,b.child=yg(b,null,e,c)):(Hg(),Q(a,b,e));a=b.child}else Hg(),a=R(a,b);return a;case 5:a:{gg(fg.current);e=gg(dg.current);d=He(e,\nb.type);e!==d&&(N(eg,b,b),N(dg,d,b));null===a&&Eg(b);e=b.type;k=b.memoizedProps;d=b.pendingProps;f=null!==a?a.memoizedProps:null;if(!O.current&&k===d){if(k=b.mode&1&&!!d.hidden)b.expirationTime=1073741823;if(!k||1073741823!==c){a=R(a,b);break a}}k=d.children;df(e,d)?k=null:f&&df(e,f)&&(b.effectTag|=16);Jg(a,b);1073741823!==c&&b.mode&1&&d.hidden?(b.expirationTime=1073741823,b.memoizedProps=d,a=null):(Q(a,b,k),b.memoizedProps=d,a=b.child)}return a;case 6:return null===a&&Eg(b),b.memoizedProps=b.pendingProps,\nnull;case 16:return null;case 4:return ig(b,b.stateNode.containerInfo),e=b.pendingProps,O.current||b.memoizedProps!==e?(null===a?b.child=xg(b,null,e,c):Q(a,b,e),b.memoizedProps=e,a=b.child):a=R(a,b),a;case 14:return e=b.type.render,c=b.pendingProps,d=b.ref,O.current||b.memoizedProps!==c||d!==(null!==a?a.ref:null)?(e=e(c,d),Q(a,b,e),b.memoizedProps=c,a=b.child):a=R(a,b),a;case 10:return c=b.pendingProps,O.current||b.memoizedProps!==c?(Q(a,b,c),b.memoizedProps=c,a=b.child):a=R(a,b),a;case 11:return c=\nb.pendingProps.children,O.current||null!==c&&b.memoizedProps!==c?(Q(a,b,c),b.memoizedProps=c,a=b.child):a=R(a,b),a;case 15:return c=b.pendingProps,b.memoizedProps===c?a=R(a,b):(Q(a,b,c.children),b.memoizedProps=c,a=b.child),a;case 13:return Qg(a,b,c);case 12:a:if(d=b.type,f=b.pendingProps,k=b.memoizedProps,e=d._currentValue,g=d._changedBits,O.current||0!==g||k!==f){b.memoizedProps=f;h=f.unstable_observedBits;if(void 0===h||null===h)h=1073741823;b.stateNode=h;if(0!==(g&h))Mg(b,d,g,c);else if(k===f){a=\nR(a,b);break a}c=f.children;c=c(e);b.effectTag|=1;Q(a,b,c);a=b.child}else a=R(a,b);return a;default:A(\"156\")}}function Sg(a){a.effectTag|=4}var Tg=void 0,Ug=void 0,Vg=void 0;Tg=function(){};Ug=function(a,b,c){(b.updateQueue=c)&&Sg(b)};Vg=function(a,b,c,d){c!==d&&Sg(b)};\nfunction Wg(a,b){var c=b.pendingProps;switch(b.tag){case 1:return null;case 2:return sf(b),null;case 3:jg(b);tf(b);var d=b.stateNode;d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)Gg(b),b.effectTag&=-3;Tg(b);return null;case 5:kg(b);d=gg(fg.current);var e=b.type;if(null!==a&&null!=b.stateNode){var f=a.memoizedProps,g=b.stateNode,h=gg(dg.current);g=We(g,e,f,c,d);Ug(a,b,g,e,f,c,d,h);a.ref!==b.ref&&(b.effectTag|=128)}else{if(!c)return null===b.stateNode?\nA(\"166\"):void 0,null;a=gg(dg.current);if(Gg(b))c=b.stateNode,e=b.type,f=b.memoizedProps,c[C]=b,c[Ma]=f,d=Ye(c,e,f,a,d),b.updateQueue=d,null!==d&&Sg(b);else{a=Te(e,c,d,a);a[C]=b;a[Ma]=c;a:for(f=b.child;null!==f;){if(5===f.tag||6===f.tag)a.appendChild(f.stateNode);else if(4!==f.tag&&null!==f.child){f.child.return=f;f=f.child;continue}if(f===b)break;for(;null===f.sibling;){if(null===f.return||f.return===b)break a;f=f.return}f.sibling.return=f.return;f=f.sibling}Ve(a,e,c,d);cf(e,c)&&Sg(b);b.stateNode=\na}null!==b.ref&&(b.effectTag|=128)}return null;case 6:if(a&&null!=b.stateNode)Vg(a,b,a.memoizedProps,c);else{if(\"string\"!==typeof c)return null===b.stateNode?A(\"166\"):void 0,null;d=gg(fg.current);gg(dg.current);Gg(b)?(d=b.stateNode,c=b.memoizedProps,d[C]=b,Ze(d,c)&&Sg(b)):(d=Ue(c,d),d[C]=b,b.stateNode=d)}return null;case 14:return null;case 16:return null;case 10:return null;case 11:return null;case 15:return null;case 4:return jg(b),Tg(b),null;case 13:return bg(b),null;case 12:return null;case 0:A(\"167\");\ndefault:A(\"156\")}}function Xg(a,b){var c=b.source;null===b.stack&&null!==c&&vc(c);null!==c&&uc(c);b=b.value;null!==a&&2===a.tag&&uc(a);try{b&&b.suppressReactErrorLogging||console.error(b)}catch(d){d&&d.suppressReactErrorLogging||console.error(d)}}function Yg(a){var b=a.ref;if(null!==b)if(\"function\"===typeof b)try{b(null)}catch(c){Zg(a,c)}else b.current=null}\nfunction $g(a){\"function\"===typeof Kf&&Kf(a);switch(a.tag){case 2:Yg(a);var b=a.stateNode;if(\"function\"===typeof b.componentWillUnmount)try{b.props=a.memoizedProps,b.state=a.memoizedState,b.componentWillUnmount()}catch(c){Zg(a,c)}break;case 5:Yg(a);break;case 4:ah(a)}}function bh(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction ch(a){a:{for(var b=a.return;null!==b;){if(bh(b)){var c=b;break a}b=b.return}A(\"160\");c=void 0}var d=b=void 0;switch(c.tag){case 5:b=c.stateNode;d=!1;break;case 3:b=c.stateNode.containerInfo;d=!0;break;case 4:b=c.stateNode.containerInfo;d=!0;break;default:A(\"161\")}c.effectTag&16&&(Ke(b,\"\"),c.effectTag&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c.return||bh(c.return)){c=null;break a}c=c.return}c.sibling.return=c.return;for(c=c.sibling;5!==c.tag&&6!==c.tag;){if(c.effectTag&2)continue b;\nif(null===c.child||4===c.tag)continue b;else c.child.return=c,c=c.child}if(!(c.effectTag&2)){c=c.stateNode;break a}}for(var e=a;;){if(5===e.tag||6===e.tag)if(c)if(d){var f=b,g=e.stateNode,h=c;8===f.nodeType?f.parentNode.insertBefore(g,h):f.insertBefore(g,h)}else b.insertBefore(e.stateNode,c);else d?(f=b,g=e.stateNode,8===f.nodeType?f.parentNode.insertBefore(g,f):f.appendChild(g)):b.appendChild(e.stateNode);else if(4!==e.tag&&null!==e.child){e.child.return=e;e=e.child;continue}if(e===a)break;for(;null===\ne.sibling;){if(null===e.return||e.return===a)return;e=e.return}e.sibling.return=e.return;e=e.sibling}}\nfunction ah(a){for(var b=a,c=!1,d=void 0,e=void 0;;){if(!c){c=b.return;a:for(;;){null===c?A(\"160\"):void 0;switch(c.tag){case 5:d=c.stateNode;e=!1;break a;case 3:d=c.stateNode.containerInfo;e=!0;break a;case 4:d=c.stateNode.containerInfo;e=!0;break a}c=c.return}c=!0}if(5===b.tag||6===b.tag){a:for(var f=b,g=f;;)if($g(g),null!==g.child&&4!==g.tag)g.child.return=g,g=g.child;else{if(g===f)break;for(;null===g.sibling;){if(null===g.return||g.return===f)break a;g=g.return}g.sibling.return=g.return;g=g.sibling}e?\n(f=d,g=b.stateNode,8===f.nodeType?f.parentNode.removeChild(g):f.removeChild(g)):d.removeChild(b.stateNode)}else if(4===b.tag?d=b.stateNode.containerInfo:$g(b),null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return;b=b.return;4===b.tag&&(c=!1)}b.sibling.return=b.return;b=b.sibling}}\nfunction dh(a,b){switch(b.tag){case 2:break;case 5:var c=b.stateNode;if(null!=c){var d=b.memoizedProps;a=null!==a?a.memoizedProps:d;var e=b.type,f=b.updateQueue;b.updateQueue=null;null!==f&&(c[Ma]=d,Xe(c,f,e,a,d))}break;case 6:null===b.stateNode?A(\"162\"):void 0;b.stateNode.nodeValue=b.memoizedProps;break;case 3:break;case 15:break;case 16:break;default:A(\"163\")}}function eh(a,b,c){c=Of(c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){fh(d);Xg(a,b)};return c}\nfunction gh(a,b,c){c=Of(c);c.tag=3;var d=a.stateNode;null!==d&&\"function\"===typeof d.componentDidCatch&&(c.callback=function(){null===hh?hh=new Set([this]):hh.add(this);var c=b.value,d=b.stack;Xg(a,b);this.componentDidCatch(c,{componentStack:null!==d?d:\"\"})});return c}\nfunction ih(a,b,c,d,e,f){c.effectTag|=512;c.firstEffect=c.lastEffect=null;d=Xf(d,c);a=b;do{switch(a.tag){case 3:a.effectTag|=1024;d=eh(a,d,f);Rf(a,d,f);return;case 2:if(b=d,c=a.stateNode,0===(a.effectTag&64)&&null!==c&&\"function\"===typeof c.componentDidCatch&&(null===hh||!hh.has(c))){a.effectTag|=1024;d=gh(a,b,f);Rf(a,d,f);return}}a=a.return}while(null!==a)}\nfunction jh(a){switch(a.tag){case 2:sf(a);var b=a.effectTag;return b&1024?(a.effectTag=b&-1025|64,a):null;case 3:return jg(a),tf(a),b=a.effectTag,b&1024?(a.effectTag=b&-1025|64,a):null;case 5:return kg(a),null;case 16:return b=a.effectTag,b&1024?(a.effectTag=b&-1025|64,a):null;case 4:return jg(a),null;case 13:return bg(a),null;default:return null}}var kh=ef(),lh=2,mh=kh,nh=0,oh=0,ph=!1,S=null,qh=null,T=0,rh=-1,sh=!1,U=null,th=!1,uh=!1,hh=null;\nfunction vh(){if(null!==S)for(var a=S.return;null!==a;){var b=a;switch(b.tag){case 2:sf(b);break;case 3:jg(b);tf(b);break;case 5:kg(b);break;case 4:jg(b);break;case 13:bg(b)}a=a.return}qh=null;T=0;rh=-1;sh=!1;S=null;uh=!1}\nfunction wh(a){for(;;){var b=a.alternate,c=a.return,d=a.sibling;if(0===(a.effectTag&512)){b=Wg(b,a,T);var e=a;if(1073741823===T||1073741823!==e.expirationTime){var f=0;switch(e.tag){case 3:case 2:var g=e.updateQueue;null!==g&&(f=g.expirationTime)}for(g=e.child;null!==g;)0!==g.expirationTime&&(0===f||f>g.expirationTime)&&(f=g.expirationTime),g=g.sibling;e.expirationTime=f}if(null!==b)return b;null!==c&&0===(c.effectTag&512)&&(null===c.firstEffect&&(c.firstEffect=a.firstEffect),null!==a.lastEffect&&\n(null!==c.lastEffect&&(c.lastEffect.nextEffect=a.firstEffect),c.lastEffect=a.lastEffect),1<a.effectTag&&(null!==c.lastEffect?c.lastEffect.nextEffect=a:c.firstEffect=a,c.lastEffect=a));if(null!==d)return d;if(null!==c)a=c;else{uh=!0;break}}else{a=jh(a,sh,T);if(null!==a)return a.effectTag&=511,a;null!==c&&(c.firstEffect=c.lastEffect=null,c.effectTag|=512);if(null!==d)return d;if(null!==c)a=c;else break}}return null}\nfunction xh(a){var b=Rg(a.alternate,a,T);null===b&&(b=wh(a));ec.current=null;return b}\nfunction yh(a,b,c){ph?A(\"243\"):void 0;ph=!0;if(b!==T||a!==qh||null===S)vh(),qh=a,T=b,rh=-1,S=zf(qh.current,null,T),a.pendingCommitExpirationTime=0;var d=!1;sh=!c||T<=lh;do{try{if(c)for(;null!==S&&!zh();)S=xh(S);else for(;null!==S;)S=xh(S)}catch(f){if(null===S)d=!0,fh(f);else{null===S?A(\"271\"):void 0;c=S;var e=c.return;if(null===e){d=!0;fh(f);break}ih(a,e,c,f,sh,T,mh);S=wh(c)}}break}while(1);ph=!1;if(d)return null;if(null===S){if(uh)return a.pendingCommitExpirationTime=b,a.current.alternate;sh?A(\"262\"):\nvoid 0;0<=rh&&setTimeout(function(){var b=a.current.expirationTime;0!==b&&(0===a.remainingExpirationTime||a.remainingExpirationTime<b)&&Ah(a,b)},rh);Bh(a.current.expirationTime)}return null}\nfunction Zg(a,b){var c;a:{ph&&!th?A(\"263\"):void 0;for(c=a.return;null!==c;){switch(c.tag){case 2:var d=c.stateNode;if(\"function\"===typeof c.type.getDerivedStateFromCatch||\"function\"===typeof d.componentDidCatch&&(null===hh||!hh.has(d))){a=Xf(b,a);a=gh(c,a,1);Qf(c,a,1);og(c,1);c=void 0;break a}break;case 3:a=Xf(b,a);a=eh(c,a,1);Qf(c,a,1);og(c,1);c=void 0;break a}c=c.return}3===a.tag&&(c=Xf(b,a),c=eh(a,c,1),Qf(a,c,1),og(a,1));c=void 0}return c}\nfunction Ch(){var a=2+25*(((mg()-2+500)/25|0)+1);a<=nh&&(a=nh+1);return nh=a}function ng(a,b){a=0!==oh?oh:ph?th?1:T:b.mode&1?Dh?2+10*(((a-2+15)/10|0)+1):2+25*(((a-2+500)/25|0)+1):1;Dh&&(0===Eh||a>Eh)&&(Eh=a);return a}\nfunction og(a,b){for(;null!==a;){if(0===a.expirationTime||a.expirationTime>b)a.expirationTime=b;null!==a.alternate&&(0===a.alternate.expirationTime||a.alternate.expirationTime>b)&&(a.alternate.expirationTime=b);if(null===a.return)if(3===a.tag){var c=a.stateNode;!ph&&0!==T&&b<T&&vh();var d=c.current.expirationTime;ph&&!th&&qh===c||Ah(c,d);Fh>Gh&&A(\"185\")}else break;a=a.return}}function mg(){mh=ef()-kh;return lh=(mh/10|0)+2}\nfunction Hh(a){var b=oh;oh=2+25*(((mg()-2+500)/25|0)+1);try{return a()}finally{oh=b}}function Ih(a,b,c,d,e){var f=oh;oh=1;try{return a(b,c,d,e)}finally{oh=f}}var Jh=null,V=null,Kh=0,Lh=void 0,W=!1,X=null,Y=0,Eh=0,Mh=!1,Nh=!1,Oh=null,Ph=null,Z=!1,Qh=!1,Dh=!1,Rh=null,Gh=1E3,Fh=0,Sh=1;function Th(a){if(0!==Kh){if(a>Kh)return;null!==Lh&&gf(Lh)}var b=ef()-kh;Kh=a;Lh=ff(Uh,{timeout:10*(a-2)-b})}\nfunction Ah(a,b){if(null===a.nextScheduledRoot)a.remainingExpirationTime=b,null===V?(Jh=V=a,a.nextScheduledRoot=a):(V=V.nextScheduledRoot=a,V.nextScheduledRoot=Jh);else{var c=a.remainingExpirationTime;if(0===c||b<c)a.remainingExpirationTime=b}W||(Z?Qh&&(X=a,Y=1,Vh(a,1,!1)):1===b?Wh():Th(b))}\nfunction Xh(){var a=0,b=null;if(null!==V)for(var c=V,d=Jh;null!==d;){var e=d.remainingExpirationTime;if(0===e){null===c||null===V?A(\"244\"):void 0;if(d===d.nextScheduledRoot){Jh=V=d.nextScheduledRoot=null;break}else if(d===Jh)Jh=e=d.nextScheduledRoot,V.nextScheduledRoot=e,d.nextScheduledRoot=null;else if(d===V){V=c;V.nextScheduledRoot=Jh;d.nextScheduledRoot=null;break}else c.nextScheduledRoot=d.nextScheduledRoot,d.nextScheduledRoot=null;d=c.nextScheduledRoot}else{if(0===a||e<a)a=e,b=d;if(d===V)break;\nc=d;d=d.nextScheduledRoot}}c=X;null!==c&&c===b&&1===a?Fh++:Fh=0;X=b;Y=a}function Uh(a){Yh(0,!0,a)}function Wh(){Yh(1,!1,null)}function Yh(a,b,c){Ph=c;Xh();if(b)for(;null!==X&&0!==Y&&(0===a||a>=Y)&&(!Mh||mg()>=Y);)mg(),Vh(X,Y,!Mh),Xh();else for(;null!==X&&0!==Y&&(0===a||a>=Y);)Vh(X,Y,!1),Xh();null!==Ph&&(Kh=0,Lh=null);0!==Y&&Th(Y);Ph=null;Mh=!1;Zh()}function $h(a,b){W?A(\"253\"):void 0;X=a;Y=b;Vh(a,b,!1);Wh();Zh()}\nfunction Zh(){Fh=0;if(null!==Rh){var a=Rh;Rh=null;for(var b=0;b<a.length;b++){var c=a[b];try{c._onComplete()}catch(d){Nh||(Nh=!0,Oh=d)}}}if(Nh)throw a=Oh,Oh=null,Nh=!1,a;}function Vh(a,b,c){W?A(\"245\"):void 0;W=!0;c?(c=a.finishedWork,null!==c?ai(a,c,b):(c=yh(a,b,!0),null!==c&&(zh()?a.finishedWork=c:ai(a,c,b)))):(c=a.finishedWork,null!==c?ai(a,c,b):(c=yh(a,b,!1),null!==c&&ai(a,c,b)));W=!1}\nfunction ai(a,b,c){var d=a.firstBatch;if(null!==d&&d._expirationTime<=c&&(null===Rh?Rh=[d]:Rh.push(d),d._defer)){a.finishedWork=b;a.remainingExpirationTime=0;return}a.finishedWork=null;th=ph=!0;c=b.stateNode;c.current===b?A(\"177\"):void 0;d=c.pendingCommitExpirationTime;0===d?A(\"261\"):void 0;c.pendingCommitExpirationTime=0;mg();ec.current=null;if(1<b.effectTag)if(null!==b.lastEffect){b.lastEffect.nextEffect=b;var e=b.firstEffect}else e=b;else e=b.firstEffect;af=Hd;var f=da();if(Ud(f)){if(\"selectionStart\"in\nf)var g={start:f.selectionStart,end:f.selectionEnd};else a:{var h=window.getSelection&&window.getSelection();if(h&&0!==h.rangeCount){g=h.anchorNode;var k=h.anchorOffset,n=h.focusNode;h=h.focusOffset;try{g.nodeType,n.nodeType}catch(Wa){g=null;break a}var r=0,w=-1,P=-1,nc=0,Jd=0,E=f,t=null;b:for(;;){for(var x;;){E!==g||0!==k&&3!==E.nodeType||(w=r+k);E!==n||0!==h&&3!==E.nodeType||(P=r+h);3===E.nodeType&&(r+=E.nodeValue.length);if(null===(x=E.firstChild))break;t=E;E=x}for(;;){if(E===f)break b;t===g&&\n++nc===k&&(w=r);t===n&&++Jd===h&&(P=r);if(null!==(x=E.nextSibling))break;E=t;t=E.parentNode}E=x}g=-1===w||-1===P?null:{start:w,end:P}}else g=null}g=g||{start:0,end:0}}else g=null;bf={focusedElem:f,selectionRange:g};Id(!1);for(U=e;null!==U;){f=!1;g=void 0;try{for(;null!==U;){if(U.effectTag&256){var u=U.alternate;k=U;switch(k.tag){case 2:if(k.effectTag&256&&null!==u){var y=u.memoizedProps,D=u.memoizedState,ja=k.stateNode;ja.props=k.memoizedProps;ja.state=k.memoizedState;var mi=ja.getSnapshotBeforeUpdate(y,\nD);ja.__reactInternalSnapshotBeforeUpdate=mi}break;case 3:case 5:case 6:case 4:break;default:A(\"163\")}}U=U.nextEffect}}catch(Wa){f=!0,g=Wa}f&&(null===U?A(\"178\"):void 0,Zg(U,g),null!==U&&(U=U.nextEffect))}for(U=e;null!==U;){u=!1;y=void 0;try{for(;null!==U;){var q=U.effectTag;q&16&&Ke(U.stateNode,\"\");if(q&128){var z=U.alternate;if(null!==z){var l=z.ref;null!==l&&(\"function\"===typeof l?l(null):l.current=null)}}switch(q&14){case 2:ch(U);U.effectTag&=-3;break;case 6:ch(U);U.effectTag&=-3;dh(U.alternate,\nU);break;case 4:dh(U.alternate,U);break;case 8:D=U,ah(D),D.return=null,D.child=null,D.alternate&&(D.alternate.child=null,D.alternate.return=null)}U=U.nextEffect}}catch(Wa){u=!0,y=Wa}u&&(null===U?A(\"178\"):void 0,Zg(U,y),null!==U&&(U=U.nextEffect))}l=bf;z=da();q=l.focusedElem;u=l.selectionRange;if(z!==q&&fa(document.documentElement,q)){null!==u&&Ud(q)&&(z=u.start,l=u.end,void 0===l&&(l=z),\"selectionStart\"in q?(q.selectionStart=z,q.selectionEnd=Math.min(l,q.value.length)):window.getSelection&&(z=window.getSelection(),\ny=q[lb()].length,l=Math.min(u.start,y),u=void 0===u.end?l:Math.min(u.end,y),!z.extend&&l>u&&(y=u,u=l,l=y),y=Td(q,l),D=Td(q,u),y&&D&&(1!==z.rangeCount||z.anchorNode!==y.node||z.anchorOffset!==y.offset||z.focusNode!==D.node||z.focusOffset!==D.offset)&&(ja=document.createRange(),ja.setStart(y.node,y.offset),z.removeAllRanges(),l>u?(z.addRange(ja),z.extend(D.node,D.offset)):(ja.setEnd(D.node,D.offset),z.addRange(ja)))));z=[];for(l=q;l=l.parentNode;)1===l.nodeType&&z.push({element:l,left:l.scrollLeft,\ntop:l.scrollTop});\"function\"===typeof q.focus&&q.focus();for(q=0;q<z.length;q++)l=z[q],l.element.scrollLeft=l.left,l.element.scrollTop=l.top}bf=null;Id(af);af=null;c.current=b;for(U=e;null!==U;){e=!1;q=void 0;try{for(z=d;null!==U;){var hg=U.effectTag;if(hg&36){var oc=U.alternate;l=U;u=z;switch(l.tag){case 2:var ca=l.stateNode;if(l.effectTag&4)if(null===oc)ca.props=l.memoizedProps,ca.state=l.memoizedState,ca.componentDidMount();else{var wi=oc.memoizedProps,xi=oc.memoizedState;ca.props=l.memoizedProps;\nca.state=l.memoizedState;ca.componentDidUpdate(wi,xi,ca.__reactInternalSnapshotBeforeUpdate)}var Ng=l.updateQueue;null!==Ng&&(ca.props=l.memoizedProps,ca.state=l.memoizedState,Wf(l,Ng,ca,u));break;case 3:var Og=l.updateQueue;if(null!==Og){y=null;if(null!==l.child)switch(l.child.tag){case 5:y=l.child.stateNode;break;case 2:y=l.child.stateNode}Wf(l,Og,y,u)}break;case 5:var yi=l.stateNode;null===oc&&l.effectTag&4&&cf(l.type,l.memoizedProps)&&yi.focus();break;case 6:break;case 4:break;case 15:break;case 16:break;\ndefault:A(\"163\")}}if(hg&128){l=void 0;var yc=U.ref;if(null!==yc){var Pg=U.stateNode;switch(U.tag){case 5:l=Pg;break;default:l=Pg}\"function\"===typeof yc?yc(l):yc.current=l}}var zi=U.nextEffect;U.nextEffect=null;U=zi}}catch(Wa){e=!0,q=Wa}e&&(null===U?A(\"178\"):void 0,Zg(U,q),null!==U&&(U=U.nextEffect))}ph=th=!1;\"function\"===typeof Jf&&Jf(b.stateNode);b=c.current.expirationTime;0===b&&(hh=null);a.remainingExpirationTime=b}function zh(){return null===Ph||Ph.timeRemaining()>Sh?!1:Mh=!0}\nfunction fh(a){null===X?A(\"246\"):void 0;X.remainingExpirationTime=0;Nh||(Nh=!0,Oh=a)}function Bh(a){null===X?A(\"246\"):void 0;X.remainingExpirationTime=a}function bi(a,b){var c=Z;Z=!0;try{return a(b)}finally{(Z=c)||W||Wh()}}function ci(a,b){if(Z&&!Qh){Qh=!0;try{return a(b)}finally{Qh=!1}}return a(b)}function di(a,b){W?A(\"187\"):void 0;var c=Z;Z=!0;try{return Ih(a,b)}finally{Z=c,Wh()}}\nfunction ei(a,b,c){if(Dh)return a(b,c);Z||W||0===Eh||(Yh(Eh,!1,null),Eh=0);var d=Dh,e=Z;Z=Dh=!0;try{return a(b,c)}finally{Dh=d,(Z=e)||W||Wh()}}function fi(a){var b=Z;Z=!0;try{Ih(a)}finally{(Z=b)||W||Yh(1,!1,null)}}\nfunction gi(a,b,c,d,e){var f=b.current;if(c){c=c._reactInternalFiber;var g;b:{2===jd(c)&&2===c.tag?void 0:A(\"170\");for(g=c;3!==g.tag;){if(qf(g)){g=g.stateNode.__reactInternalMemoizedMergedChildContext;break b}(g=g.return)?void 0:A(\"171\")}g=g.stateNode.context}c=qf(c)?vf(c,g):g}else c=ha;null===b.context?b.context=c:b.pendingContext=c;b=e;e=Of(d);e.payload={element:a};b=void 0===b?null:b;null!==b&&(e.callback=b);Qf(f,e,d);og(f,d);return d}\nfunction hi(a){var b=a._reactInternalFiber;void 0===b&&(\"function\"===typeof a.render?A(\"188\"):A(\"268\",Object.keys(a)));a=md(b);return null===a?null:a.stateNode}function ii(a,b,c,d){var e=b.current,f=mg();e=ng(f,e);return gi(a,b,c,e,d)}function ji(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}\nfunction ki(a){var b=a.findFiberByHostInstance;return If(p({},a,{findHostInstanceByFiber:function(a){a=md(a);return null===a?null:a.stateNode},findFiberByHostInstance:function(a){return b?b(a):null}}))}\nvar li={updateContainerAtExpirationTime:gi,createContainer:function(a,b,c){return Ef(a,b,c)},updateContainer:ii,flushRoot:$h,requestWork:Ah,computeUniqueAsyncExpiration:Ch,batchedUpdates:bi,unbatchedUpdates:ci,deferredUpdates:Hh,syncUpdates:Ih,interactiveUpdates:ei,flushInteractiveUpdates:function(){W||0===Eh||(Yh(Eh,!1,null),Eh=0)},flushControlled:fi,flushSync:di,getPublicRootInstance:ji,findHostInstance:hi,findHostInstanceWithNoPortals:function(a){a=nd(a);return null===a?null:a.stateNode},injectIntoDevTools:ki};\nfunction ni(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:hc,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}Kb.injectFiberControlledHostComponent($e);function oi(a){this._expirationTime=Ch();this._root=a;this._callbacks=this._next=null;this._hasChildren=this._didComplete=!1;this._children=null;this._defer=!0}\noi.prototype.render=function(a){this._defer?void 0:A(\"250\");this._hasChildren=!0;this._children=a;var b=this._root._internalRoot,c=this._expirationTime,d=new pi;gi(a,b,null,c,d._onCommit);return d};oi.prototype.then=function(a){if(this._didComplete)a();else{var b=this._callbacks;null===b&&(b=this._callbacks=[]);b.push(a)}};\noi.prototype.commit=function(){var a=this._root._internalRoot,b=a.firstBatch;this._defer&&null!==b?void 0:A(\"251\");if(this._hasChildren){var c=this._expirationTime;if(b!==this){this._hasChildren&&(c=this._expirationTime=b._expirationTime,this.render(this._children));for(var d=null,e=b;e!==this;)d=e,e=e._next;null===d?A(\"251\"):void 0;d._next=e._next;this._next=b;a.firstBatch=this}this._defer=!1;$h(a,c);b=this._next;this._next=null;b=a.firstBatch=b;null!==b&&b._hasChildren&&b.render(b._children)}else this._next=\nnull,this._defer=!1};oi.prototype._onComplete=function(){if(!this._didComplete){this._didComplete=!0;var a=this._callbacks;if(null!==a)for(var b=0;b<a.length;b++)(0,a[b])()}};function pi(){this._callbacks=null;this._didCommit=!1;this._onCommit=this._onCommit.bind(this)}pi.prototype.then=function(a){if(this._didCommit)a();else{var b=this._callbacks;null===b&&(b=this._callbacks=[]);b.push(a)}};\npi.prototype._onCommit=function(){if(!this._didCommit){this._didCommit=!0;var a=this._callbacks;if(null!==a)for(var b=0;b<a.length;b++){var c=a[b];\"function\"!==typeof c?A(\"191\",c):void 0;c()}}};function qi(a,b,c){this._internalRoot=Ef(a,b,c)}qi.prototype.render=function(a,b){var c=this._internalRoot,d=new pi;b=void 0===b?null:b;null!==b&&d.then(b);ii(a,c,null,d._onCommit);return d};\nqi.prototype.unmount=function(a){var b=this._internalRoot,c=new pi;a=void 0===a?null:a;null!==a&&c.then(a);ii(null,b,null,c._onCommit);return c};qi.prototype.legacy_renderSubtreeIntoContainer=function(a,b,c){var d=this._internalRoot,e=new pi;c=void 0===c?null:c;null!==c&&e.then(c);ii(b,d,a,e._onCommit);return e};\nqi.prototype.createBatch=function(){var a=new oi(this),b=a._expirationTime,c=this._internalRoot,d=c.firstBatch;if(null===d)c.firstBatch=a,a._next=null;else{for(c=null;null!==d&&d._expirationTime<=b;)c=d,d=d._next;a._next=d;null!==c&&(c._next=a)}return a};function ri(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}Sb=li.batchedUpdates;Tb=li.interactiveUpdates;Ub=li.flushInteractiveUpdates;\nfunction si(a,b){b||(b=a?9===a.nodeType?a.documentElement:a.firstChild:null,b=!(!b||1!==b.nodeType||!b.hasAttribute(\"data-reactroot\")));if(!b)for(var c;c=a.lastChild;)a.removeChild(c);return new qi(a,!1,b)}\nfunction ti(a,b,c,d,e){ri(c)?void 0:A(\"200\");var f=c._reactRootContainer;if(f){if(\"function\"===typeof e){var g=e;e=function(){var a=ji(f._internalRoot);g.call(a)}}null!=a?f.legacy_renderSubtreeIntoContainer(a,b,e):f.render(b,e)}else{f=c._reactRootContainer=si(c,d);if(\"function\"===typeof e){var h=e;e=function(){var a=ji(f._internalRoot);h.call(a)}}ci(function(){null!=a?f.legacy_renderSubtreeIntoContainer(a,b,e):f.render(b,e)})}return ji(f._internalRoot)}\nfunction ui(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;ri(b)?void 0:A(\"200\");return ni(a,b,null,c)}\nvar vi={createPortal:ui,findDOMNode:function(a){return null==a?null:1===a.nodeType?a:hi(a)},hydrate:function(a,b,c){return ti(null,a,b,!0,c)},render:function(a,b,c){return ti(null,a,b,!1,c)},unstable_renderSubtreeIntoContainer:function(a,b,c,d){null==a||void 0===a._reactInternalFiber?A(\"38\"):void 0;return ti(a,b,c,!1,d)},unmountComponentAtNode:function(a){ri(a)?void 0:A(\"40\");return a._reactRootContainer?(ci(function(){ti(null,null,a,!1,function(){a._reactRootContainer=null})}),!0):!1},unstable_createPortal:function(){return ui.apply(void 0,\narguments)},unstable_batchedUpdates:bi,unstable_deferredUpdates:Hh,unstable_interactiveUpdates:ei,flushSync:di,unstable_flushControlled:fi,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{EventPluginHub:Ka,EventPluginRegistry:va,EventPropagators:$a,ReactControlledComponent:Rb,ReactDOMComponentTree:Qa,ReactDOMEventListener:Nd},unstable_createRoot:function(a,b){return new qi(a,!0,null!=b&&!0===b.hydrate)}};ki({findFiberByHostInstance:Na,bundleType:0,version:\"16.4.1\",rendererPackageName:\"react-dom\"});\nvar Ai={default:vi},Bi=Ai&&vi||Ai;module.exports=Bi.default?Bi.default:Bi;\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n\n\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n\n/**\n * Simple, lightweight module assisting with the detection and context of\n * Worker. Helps avoid circular dependencies and allows code to reason about\n * whether or not they are in a Worker, even if they never include the main\n * `ReactWorker` dependency.\n */\nvar ExecutionEnvironment = {\n\n  canUseDOM: canUseDOM,\n\n  canUseWorkers: typeof Worker !== 'undefined',\n\n  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),\n\n  canUseViewport: canUseDOM && !!window.screen,\n\n  isInWorker: !canUseDOM // For now, this is true - might change in the future.\n\n};\n\nmodule.exports = ExecutionEnvironment;\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\n/* eslint-disable fb-www/typeof-undefined */\n\n/**\n * Same as document.activeElement but wraps in a try-catch block. In IE it is\n * not safe to call document.activeElement if there is nothing focused.\n *\n * The activeElement will be null only if the document or document body is not\n * yet defined.\n *\n * @param {?DOMDocument} doc Defaults to current document.\n * @return {?DOMElement}\n */\nfunction getActiveElement(doc) /*?DOMElement*/{\n  doc = doc || (typeof document !== 'undefined' ? document : undefined);\n  if (typeof doc === 'undefined') {\n    return null;\n  }\n  try {\n    return doc.activeElement || doc.body;\n  } catch (e) {\n    return doc.body;\n  }\n}\n\nmodule.exports = getActiveElement;\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n * \n */\n\n/*eslint-disable no-self-compare */\n\n\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x, y) {\n  // SameValue algorithm\n  if (x === y) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    // Added the nonzero y check to make Flow happy, but it is redundant\n    return x !== 0 || y !== 0 || 1 / x === 1 / y;\n  } else {\n    // Step 6.a: NaN == NaN\n    return x !== x && y !== y;\n  }\n}\n\n/**\n * Performs equality by iterating through keys on an object and returning false\n * when any key has values which are not strictly equal between the arguments.\n * Returns true when the values of all keys are strictly equal.\n */\nfunction shallowEqual(objA, objB) {\n  if (is(objA, objB)) {\n    return true;\n  }\n\n  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  // Test for A's keys different from B.\n  for (var i = 0; i < keysA.length; i++) {\n    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = shallowEqual;\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nvar isTextNode = __webpack_require__(22);\n\n/*eslint-disable no-bitwise */\n\n/**\n * Checks if a given DOM node contains or is another DOM node.\n */\nfunction containsNode(outerNode, innerNode) {\n  if (!outerNode || !innerNode) {\n    return false;\n  } else if (outerNode === innerNode) {\n    return true;\n  } else if (isTextNode(outerNode)) {\n    return false;\n  } else if (isTextNode(innerNode)) {\n    return containsNode(outerNode, innerNode.parentNode);\n  } else if ('contains' in outerNode) {\n    return outerNode.contains(innerNode);\n  } else if (outerNode.compareDocumentPosition) {\n    return !!(outerNode.compareDocumentPosition(innerNode) & 16);\n  } else {\n    return false;\n  }\n}\n\nmodule.exports = containsNode;\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\nvar isNode = __webpack_require__(23);\n\n/**\n * @param {*} object The object to check.\n * @return {boolean} Whether or not the object is a DOM text node.\n */\nfunction isTextNode(object) {\n  return isNode(object) && object.nodeType == 3;\n}\n\nmodule.exports = isTextNode;\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\n/**\n * @param {*} object The object to check.\n * @return {boolean} Whether or not the object is a DOM node.\n */\nfunction isNode(object) {\n  var doc = object ? object.ownerDocument || object : document;\n  var defaultView = doc.defaultView || window;\n  return !!(object && (typeof defaultView.Node === 'function' ? object instanceof defaultView.Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));\n}\n\nmodule.exports = isNode;\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 25 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__svg_rocket_svg__ = __webpack_require__(26);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__svg_rocket_svg___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__svg_rocket_svg__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__App_css__ = __webpack_require__(7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__App_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__App_css__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__Board_js__ = __webpack_require__(27);\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}// todo: flow\n// todo: jest test\nvar App=function(_Component){_inherits(App,_Component);function App(){_classCallCheck(this,App);return _possibleConstructorReturn(this,(App.__proto__||Object.getPrototypeOf(App)).apply(this,arguments));}_createClass(App,[{key:'render',value:function render(){return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'App'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('header',{className:'App-header'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('img',{src:__WEBPACK_IMPORTED_MODULE_1__svg_rocket_svg___default.a,className:'App-logo',alt:'logo'}),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('h1',{className:'App-title'},'React Scorch')),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3__Board_js__[\"a\" /* default */],null));}}]);return App;}(__WEBPACK_IMPORTED_MODULE_0_react__[\"Component\"]);/* harmony default export */ __webpack_exports__[\"a\"] = (App);\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__.p + \"static/media/svg-rocket.2ee4edd8.svg\";\n\n/***/ }),\n/* 27 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__App_css__ = __webpack_require__(7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__App_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__App_css__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_matter_js__ = __webpack_require__(28);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_matter_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_matter_js__);\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}global.decomp=__webpack_require__(29);// todo: manage board canvas size, as maybe relational to screen size by scaling the world\nvar Board=function(_Component){_inherits(Board,_Component);function Board(){var _ref;var _temp,_this,_ret;_classCallCheck(this,Board);for(var _len=arguments.length,args=Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}return _ret=(_temp=(_this=_possibleConstructorReturn(this,(_ref=Board.__proto__||Object.getPrototypeOf(Board)).call.apply(_ref,[this].concat(args))),_this),_this.initialAngle='90',_this.state={turn:'A',angleA:_this.initialAngle,angleB:_this.initialAngle,forceA:15,forceB:15,gameOver:\"-\"},_this.canvasRef=__WEBPACK_IMPORTED_MODULE_0_react___default.a.createRef(),_this.size={height:550,width:800,scale:1// todo: scale by screen size\n},_this.bullet={collisionCount:0,inFlight:false},_this.initMJS=function(){////////////////////////////////////////////////\n// module aliases\nvar Engine=__WEBPACK_IMPORTED_MODULE_2_matter_js___default.a.Engine,Render=__WEBPACK_IMPORTED_MODULE_2_matter_js___default.a.Render,World=__WEBPACK_IMPORTED_MODULE_2_matter_js___default.a.World,Events=__WEBPACK_IMPORTED_MODULE_2_matter_js___default.a.Events,//MouseConstraint = MJS.MouseConstraint,\n//Mouse = MJS.Mouse,\n//Vertices = MJS.Vertices,\n//Body = MJS.Body,\nBodies=__WEBPACK_IMPORTED_MODULE_2_matter_js___default.a.Bodies;// create an engine\n_this.engine=Engine.create();// create a renderer\nvar render=Render.create({element:_this.canvasRef.current,engine:_this.engine,options:{width:_this.size.width,height:_this.size.height,wireframes:false,background:_this.getRandomColor()//\"LightGray\"\n}});var bodies=[];////////////////////////////////////////////////\n// create static landscape\nvar baseGround=Bodies.rectangle(_this.size.width/2,_this.size.height-10,_this.size.width,20,{isStatic:true,label:\"ground-base\",render:{fillStyle:\"DarkSlateGrey\"}});var leftWall=Bodies.rectangle(-10,_this.size.height/2,20,_this.size.height*2,{isStatic:true,label:\"ground-base\",render:{fillStyle:\"DarkSlateGrey\"}});var rightWall=Bodies.rectangle(_this.size.width+10,_this.size.height/2,20,_this.size.height*2,{isStatic:true,label:\"ground-base\",render:{fillStyle:\"DarkSlateGrey\"}});bodies.push(baseGround);bodies.push(leftWall);bodies.push(rightWall);var elementSize=5,maxHeight=300,smootherSize=10,modifier=0,maxElements=Math.floor(maxHeight/elementSize),x=void 0,y=void 0,i=void 0,j=void 0,k=void 0,rect=void 0;j=Math.floor(Math.random()*maxElements+1);for(k=0;k<Math.floor(_this.size.width/elementSize)+1;k++){if(k%smootherSize===0){modifier=Math.floor(Math.random()*3-1);if(j===1){modifier++;}else if(j===maxElements){modifier--;};};j=j+Math.floor(Math.random()*3-1+modifier);if(j<1){j=1;}else if(j>maxElements){j=maxElements;};for(i=0;i<j;i++){x=k*elementSize;y=_this.size.height-10-i*elementSize;rect=Bodies.rectangle(x,y,elementSize,elementSize,{isStatic:true,label:\"ground-element\",render:{fillStyle:\"DarkSlateGrey\"}});bodies.push(rect);}}////////////////////////////////////////////////\n// create two player sprites\nvar radius=50;x=Math.floor(Math.random()*_this.size.width/4+1);_this.playerA=Bodies.circle(radius+x,1,20,{isStatic:false,label:\"player-a\",render:{sprite:{texture:\"https://opengameart.org/sites/default/files/styles/medium/public/ship9.png\",xScale:0.15,yScale:0.15}}});bodies.push(_this.playerA);x=Math.floor(Math.random()*_this.size.width/4+1);_this.playerB=Bodies.circle(_this.size.width-radius-x,1,20,{isStatic:false,label:\"player-b\",render:{sprite:{texture:\"https://opengameart.org/sites/default/files/styles/medium/public/ship9b_0.png\",xScale:0.15,yScale:0.15}}});bodies.push(_this.playerB);////////////////////////////////////////////////\n// add all of the bodies to the world\nWorld.add(_this.engine.world,bodies);// run the engine\nEngine.run(_this.engine);// run the renderer\nRender.run(render);// add collision listener (active, start, end)\nEvents.on(_this.engine,'collisionStart',_this.onCollision);Events.on(_this.engine,'collisionEnd',_this.onCollision);//Events.on(this.engine, 'collisionActive', this.onCollision);\n////////////////////////////////////////////////\n// add mouse control\n/*\n    let mouse = Mouse.create(render.canvas),\n        mouseConstraint = MouseConstraint.create(\n          this.engine, {\n              mouse: mouse,\n              constraint: {\n                  stiffness: 0.2,\n                  render: {\n                      visible: false\n                  }\n              }\n          });\n\n    World.add(this.engine.world, mouseConstraint);\n\n    // keep the mouse in sync with rendering\n    //this.render.mouse = mouse;\n\n    // register events\n    Events.on(mouseConstraint, \"mousedown\", this.onCanvasClick)\n    */},_this.onCollision=function(e){var i=void 0,pair=void 0,pairs=e.pairs,Body=__WEBPACK_IMPORTED_MODULE_2_matter_js___default.a.Body,World=__WEBPACK_IMPORTED_MODULE_2_matter_js___default.a.World;for(i=0;i<pairs.length;i++){pair=pairs[i];//console.log (\"Collision of A: \" + pair.bodyA.label + \", B: \" + pair.bodyB.label)\n///////////////////////////////////////////\n// handle initial player sprite positioning\nif(pair.bodyA.label.startsWith(\"player\")&&pair.bodyB.label.startsWith(\"ground\")){Body.setStatic(pair.bodyA,true);//Body.setPosition(pair.bodyA, {x: pair.bodyA.position.x-15, y: pair.bodyA.position.y});\nBody.setAngle(pair.bodyA,0);};if(pair.bodyB.label.startsWith(\"player\")&&pair.bodyA.label.startsWith(\"ground\")){Body.setStatic(pair.bodyB,true);//Body.setPosition(pair.bodyB, {x: pair.bodyB.position.x-15, y: pair.bodyB.position.y});\nBody.setAngle(pair.bodyB,0);};///////////////////////////////////////////\n// handle bullet collisions\nif(pair.bodyA.label.startsWith(\"bullet\")||pair.bodyB.label.startsWith(\"bullet\")){_this.bullet.collisionCount++;var bullet=pair.bodyA.label.startsWith(\"bullet\")?pair.bodyA:pair.bodyB;if(_this.bullet.collisionCount>2){// first two collisions are on firing\n_this.nextTurn();_this.bullet={collisionCount:0,inFlight:false};Body.scale(bullet,5,5);World.remove(_this.engine.world,[bullet]);if(pair.bodyA.label.startsWith(\"ground-element\")){World.remove(_this.engine.world,[pair.bodyA]);}else if(pair.bodyB.label.startsWith(\"ground-element\")){World.remove(_this.engine.world,[pair.bodyB]);}if(pair.bodyA.label.startsWith(\"player\")||pair.bodyB.label.startsWith(\"player\")){//console.log (\"game over\");\nif(pair.bodyA.label.startsWith(\"player\")){_this.setState({gameOver:pair.bodyA.label});};if(pair.bodyB.label.startsWith(\"player\")){_this.setState({gameOver:pair.bodyB.label});};}}}}},_this.onAngleChange=function(e){var Body=__WEBPACK_IMPORTED_MODULE_2_matter_js___default.a.Body;var value=e.target.value;if(_this.state.turn==='A'){_this.setState({angleA:value});Body.setAngle(_this.playerA,(value-90)*Math.PI/180);}else{_this.setState({angleB:value});Body.setAngle(_this.playerB,(value-90)*Math.PI/180);}//console.log (e.target.value);\n},_this.onForceChange=function(e){var value=e.target.value;if(_this.state.turn==='A'){_this.setState({forceA:value});}else{_this.setState({forceB:value});}//console.log (e.target.value);\n},_this.onAttack=function(e){if(_this.readyToAttack()){_this.bullet={collisionCount:0,inFlight:true};var Body=__WEBPACK_IMPORTED_MODULE_2_matter_js___default.a.Body,Bodies=__WEBPACK_IMPORTED_MODULE_2_matter_js___default.a.Bodies,World=__WEBPACK_IMPORTED_MODULE_2_matter_js___default.a.World,player=_this.getPlayer(),bullet=Bodies.circle(player.position.x,player.position.y,5,{isStatic:false,label:\"bullet\"});Body.setVelocity(bullet,_this.getVelocity());World.add(_this.engine.world,[bullet]);}},_this.nextTurn=function(){if(_this.bullet.inFlight){_this.setState(function(prevState,props){return{turn:prevState.turn==='A'?'B':'A'};});//console.log (\"next turn\");\n}},_this.getPlayer=function(){return _this.state.turn==='A'?_this.playerA:_this.playerB;},_this.getAngle=function(){return _this.state.turn==='A'?_this.state.angleA:_this.state.angleB;},_this.getForce=function(){return _this.state.turn==='A'?_this.state.forceA:_this.state.forceB;},_this.getVelocity=function(){return{x:-1*_this.getForce()*Math.cos(Math.PI/180*_this.getAngle()),y:-1*_this.getForce()*Math.sin(Math.PI/180*_this.getAngle())};},_this.readyToAttack=function(){// if both players are in place\nreturn _this.playerA.isStatic&&_this.playerB.isStatic&&!_this.bullet.inFlight;},_this.getRandomColor=function(){var letters='0123456789ABCDEF',color='#',i=void 0;for(i=0;i<6;i++){color+=letters[Math.floor(Math.random()*16)];}return color;},_temp),_possibleConstructorReturn(_this,_ret);}// constructor arguments\n// react 16.3 new ref API\n_createClass(Board,[{key:'componentDidMount',value:function componentDidMount(){// initialize matter.js\nthis.initMJS();}},{key:'componentWillUnmount',value:function componentWillUnmount(){// todo: distruct matter.js?\n}/*\n  onCanvasClick = (e) => {\n    let {x, y} = e.mouse.mousedownPosition;\n    console.log (\"clicked: \" + x + \", \" + y); //JSON.stringify\n  }\n  */},{key:'render',// todo: one shot state, detect hit, damage, missile with mass on tip\n// todo: switch turns, victory, end/new game\nvalue:function render(){var angle=this.getAngle(),force=this.getForce();var controls=void 0;if(this.state.gameOver==='-'){controls=__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'Board-controlers'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('p',{className:'Board-turn'},'Player ',this.state.turn),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'Board-angle'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('p',null,'Angle: ',angle),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input',{type:'range',name:'angle',min:'20',max:'160',step:'1',value:angle,onChange:this.onAngleChange})),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'Board-force'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('p',null,'Force: ',force),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input',{type:'range',name:'angle',min:'5',max:'25',step:'1',value:force,onChange:this.onForceChange})),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input',{className:'Board-attack',type:'image',alt:'attack',onClick:this.onAttack,src:'https://www.freeiconspng.com/uploads/nuclear-explosion-png-10.png'}));}else{var won=this.state.gameOver===\"player-a\"?\"Player B\":\"Player A\";controls=__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('p',{className:'Board-gameover'},'Game Over: ',won,' Won');}return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'Board'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'Board-canvas',ref:this.canvasRef}),controls);}}]);return Board;}(__WEBPACK_IMPORTED_MODULE_0_react__[\"Component\"]);/* harmony default export */ __webpack_exports__[\"a\"] = (Board);\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)))\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {var require;var require;/**\n* matter-js 0.14.2 by @liabru 2018-06-11\n* http://brm.io/matter-js/\n* License MIT\n*/\n\n/**\n * The MIT License (MIT)\n * \n * Copyright (c) Liam Brummitt and contributors.\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n(function(f){if(true){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Matter = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return require(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(_dereq_,module,exports){\n/**\n* The `Matter.Body` module contains methods for creating and manipulating body models.\n* A `Matter.Body` is a rigid body that can be simulated by a `Matter.Engine`.\n* Factories for commonly used body configurations (such as rectangles, circles and other polygons) can be found in the module `Matter.Bodies`.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n\n* @class Body\n*/\n\nvar Body = {};\n\nmodule.exports = Body;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Vector = _dereq_('../geometry/Vector');\nvar Sleeping = _dereq_('../core/Sleeping');\nvar Render = _dereq_('../render/Render');\nvar Common = _dereq_('../core/Common');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Axes = _dereq_('../geometry/Axes');\n\n(function() {\n\n    Body._inertiaScale = 4;\n    Body._nextCollidingGroupId = 1;\n    Body._nextNonCollidingGroupId = -1;\n    Body._nextCategory = 0x0001;\n\n    /**\n     * Creates a new rigid body model. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * Vertices must be specified in clockwise order.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} options\n     * @return {body} body\n     */\n    Body.create = function(options) {\n        var defaults = {\n            id: Common.nextId(),\n            type: 'body',\n            label: 'Body',\n            parts: [],\n            plugin: {},\n            angle: 0,\n            vertices: Vertices.fromPath('L 0 0 L 40 0 L 40 40 L 0 40'),\n            position: { x: 0, y: 0 },\n            force: { x: 0, y: 0 },\n            torque: 0,\n            positionImpulse: { x: 0, y: 0 },\n            constraintImpulse: { x: 0, y: 0, angle: 0 },\n            totalContacts: 0,\n            speed: 0,\n            angularSpeed: 0,\n            velocity: { x: 0, y: 0 },\n            angularVelocity: 0,\n            isSensor: false,\n            isStatic: false,\n            isSleeping: false,\n            motion: 0,\n            sleepThreshold: 60,\n            density: 0.001,\n            restitution: 0,\n            friction: 0.1,\n            frictionStatic: 0.5,\n            frictionAir: 0.01,\n            collisionFilter: {\n                category: 0x0001,\n                mask: 0xFFFFFFFF,\n                group: 0\n            },\n            slop: 0.05,\n            timeScale: 1,\n            render: {\n                visible: true,\n                opacity: 1,\n                sprite: {\n                    xScale: 1,\n                    yScale: 1,\n                    xOffset: 0,\n                    yOffset: 0\n                },\n                lineWidth: 0\n            }\n        };\n\n        var body = Common.extend(defaults, options);\n\n        _initProperties(body, options);\n\n        return body;\n    };\n\n    /**\n     * Returns the next unique group index for which bodies will collide.\n     * If `isNonColliding` is `true`, returns the next unique group index for which bodies will _not_ collide.\n     * See `body.collisionFilter` for more information.\n     * @method nextGroup\n     * @param {bool} [isNonColliding=false]\n     * @return {Number} Unique group index\n     */\n    Body.nextGroup = function(isNonColliding) {\n        if (isNonColliding)\n            return Body._nextNonCollidingGroupId--;\n\n        return Body._nextCollidingGroupId++;\n    };\n\n    /**\n     * Returns the next unique category bitfield (starting after the initial default category `0x0001`).\n     * There are 32 available. See `body.collisionFilter` for more information.\n     * @method nextCategory\n     * @return {Number} Unique category bitfield\n     */\n    Body.nextCategory = function() {\n        Body._nextCategory = Body._nextCategory << 1;\n        return Body._nextCategory;\n    };\n\n    /**\n     * Initialises body properties.\n     * @method _initProperties\n     * @private\n     * @param {body} body\n     * @param {} [options]\n     */\n    var _initProperties = function(body, options) {\n        options = options || {};\n\n        // init required properties (order is important)\n        Body.set(body, {\n            bounds: body.bounds || Bounds.create(body.vertices),\n            positionPrev: body.positionPrev || Vector.clone(body.position),\n            anglePrev: body.anglePrev || body.angle,\n            vertices: body.vertices,\n            parts: body.parts || [body],\n            isStatic: body.isStatic,\n            isSleeping: body.isSleeping,\n            parent: body.parent || body\n        });\n\n        Vertices.rotate(body.vertices, body.angle, body.position);\n        Axes.rotate(body.axes, body.angle);\n        Bounds.update(body.bounds, body.vertices, body.velocity);\n\n        // allow options to override the automatically calculated properties\n        Body.set(body, {\n            axes: options.axes || body.axes,\n            area: options.area || body.area,\n            mass: options.mass || body.mass,\n            inertia: options.inertia || body.inertia\n        });\n\n        // render properties\n        var defaultFillStyle = (body.isStatic ? '#2e2b44' : Common.choose(['#006BA6', '#0496FF', '#FFBC42', '#D81159', '#8F2D56'])),\n            defaultStrokeStyle = '#000';\n        body.render.fillStyle = body.render.fillStyle || defaultFillStyle;\n        body.render.strokeStyle = body.render.strokeStyle || defaultStrokeStyle;\n        body.render.sprite.xOffset += -(body.bounds.min.x - body.position.x) / (body.bounds.max.x - body.bounds.min.x);\n        body.render.sprite.yOffset += -(body.bounds.min.y - body.position.y) / (body.bounds.max.y - body.bounds.min.y);\n    };\n\n    /**\n     * Given a property and a value (or map of), sets the property(s) on the body, using the appropriate setter functions if they exist.\n     * Prefer to use the actual setter functions in performance critical situations.\n     * @method set\n     * @param {body} body\n     * @param {} settings A property name (or map of properties and values) to set on the body.\n     * @param {} value The value to set if `settings` is a single property name.\n     */\n    Body.set = function(body, settings, value) {\n        var property;\n\n        if (typeof settings === 'string') {\n            property = settings;\n            settings = {};\n            settings[property] = value;\n        }\n\n        for (property in settings) {\n            value = settings[property];\n\n            if (!settings.hasOwnProperty(property))\n                continue;\n\n            switch (property) {\n\n            case 'isStatic':\n                Body.setStatic(body, value);\n                break;\n            case 'isSleeping':\n                Sleeping.set(body, value);\n                break;\n            case 'mass':\n                Body.setMass(body, value);\n                break;\n            case 'density':\n                Body.setDensity(body, value);\n                break;\n            case 'inertia':\n                Body.setInertia(body, value);\n                break;\n            case 'vertices':\n                Body.setVertices(body, value);\n                break;\n            case 'position':\n                Body.setPosition(body, value);\n                break;\n            case 'angle':\n                Body.setAngle(body, value);\n                break;\n            case 'velocity':\n                Body.setVelocity(body, value);\n                break;\n            case 'angularVelocity':\n                Body.setAngularVelocity(body, value);\n                break;\n            case 'parts':\n                Body.setParts(body, value);\n                break;\n            default:\n                body[property] = value;\n\n            }\n        }\n    };\n\n    /**\n     * Sets the body as static, including isStatic flag and setting mass and inertia to Infinity.\n     * @method setStatic\n     * @param {body} body\n     * @param {bool} isStatic\n     */\n    Body.setStatic = function(body, isStatic) {\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            part.isStatic = isStatic;\n\n            if (isStatic) {\n                part._original = {\n                    restitution: part.restitution,\n                    friction: part.friction,\n                    mass: part.mass,\n                    inertia: part.inertia,\n                    density: part.density,\n                    inverseMass: part.inverseMass,\n                    inverseInertia: part.inverseInertia\n                };\n\n                part.restitution = 0;\n                part.friction = 1;\n                part.mass = part.inertia = part.density = Infinity;\n                part.inverseMass = part.inverseInertia = 0;\n\n                part.positionPrev.x = part.position.x;\n                part.positionPrev.y = part.position.y;\n                part.anglePrev = part.angle;\n                part.angularVelocity = 0;\n                part.speed = 0;\n                part.angularSpeed = 0;\n                part.motion = 0;\n            } else if (part._original) {\n                part.restitution = part._original.restitution;\n                part.friction = part._original.friction;\n                part.mass = part._original.mass;\n                part.inertia = part._original.inertia;\n                part.density = part._original.density;\n                part.inverseMass = part._original.inverseMass;\n                part.inverseInertia = part._original.inverseInertia;\n\n                delete part._original;\n            }\n        }\n    };\n\n    /**\n     * Sets the mass of the body. Inverse mass, density and inertia are automatically updated to reflect the change.\n     * @method setMass\n     * @param {body} body\n     * @param {number} mass\n     */\n    Body.setMass = function(body, mass) {\n        var moment = body.inertia / (body.mass / 6);\n        body.inertia = moment * (mass / 6);\n        body.inverseInertia = 1 / body.inertia;\n\n        body.mass = mass;\n        body.inverseMass = 1 / body.mass;\n        body.density = body.mass / body.area;\n    };\n\n    /**\n     * Sets the density of the body. Mass and inertia are automatically updated to reflect the change.\n     * @method setDensity\n     * @param {body} body\n     * @param {number} density\n     */\n    Body.setDensity = function(body, density) {\n        Body.setMass(body, density * body.area);\n        body.density = density;\n    };\n\n    /**\n     * Sets the moment of inertia (i.e. second moment of area) of the body of the body. \n     * Inverse inertia is automatically updated to reflect the change. Mass is not changed.\n     * @method setInertia\n     * @param {body} body\n     * @param {number} inertia\n     */\n    Body.setInertia = function(body, inertia) {\n        body.inertia = inertia;\n        body.inverseInertia = 1 / body.inertia;\n    };\n\n    /**\n     * Sets the body's vertices and updates body properties accordingly, including inertia, area and mass (with respect to `body.density`).\n     * Vertices will be automatically transformed to be orientated around their centre of mass as the origin.\n     * They are then automatically translated to world space based on `body.position`.\n     *\n     * The `vertices` argument should be passed as an array of `Matter.Vector` points (or a `Matter.Vertices` array).\n     * Vertices must form a convex hull, concave hulls are not supported.\n     *\n     * @method setVertices\n     * @param {body} body\n     * @param {vector[]} vertices\n     */\n    Body.setVertices = function(body, vertices) {\n        // change vertices\n        if (vertices[0].body === body) {\n            body.vertices = vertices;\n        } else {\n            body.vertices = Vertices.create(vertices, body);\n        }\n\n        // update properties\n        body.axes = Axes.fromVertices(body.vertices);\n        body.area = Vertices.area(body.vertices);\n        Body.setMass(body, body.density * body.area);\n\n        // orient vertices around the centre of mass at origin (0, 0)\n        var centre = Vertices.centre(body.vertices);\n        Vertices.translate(body.vertices, centre, -1);\n\n        // update inertia while vertices are at origin (0, 0)\n        Body.setInertia(body, Body._inertiaScale * Vertices.inertia(body.vertices, body.mass));\n\n        // update geometry\n        Vertices.translate(body.vertices, body.position);\n        Bounds.update(body.bounds, body.vertices, body.velocity);\n    };\n\n    /**\n     * Sets the parts of the `body` and updates mass, inertia and centroid.\n     * Each part will have its parent set to `body`.\n     * By default the convex hull will be automatically computed and set on `body`, unless `autoHull` is set to `false.`\n     * Note that this method will ensure that the first part in `body.parts` will always be the `body`.\n     * @method setParts\n     * @param {body} body\n     * @param [body] parts\n     * @param {bool} [autoHull=true]\n     */\n    Body.setParts = function(body, parts, autoHull) {\n        var i;\n\n        // add all the parts, ensuring that the first part is always the parent body\n        parts = parts.slice(0);\n        body.parts.length = 0;\n        body.parts.push(body);\n        body.parent = body;\n\n        for (i = 0; i < parts.length; i++) {\n            var part = parts[i];\n            if (part !== body) {\n                part.parent = body;\n                body.parts.push(part);\n            }\n        }\n\n        if (body.parts.length === 1)\n            return;\n\n        autoHull = typeof autoHull !== 'undefined' ? autoHull : true;\n\n        // find the convex hull of all parts to set on the parent body\n        if (autoHull) {\n            var vertices = [];\n            for (i = 0; i < parts.length; i++) {\n                vertices = vertices.concat(parts[i].vertices);\n            }\n\n            Vertices.clockwiseSort(vertices);\n\n            var hull = Vertices.hull(vertices),\n                hullCentre = Vertices.centre(hull);\n\n            Body.setVertices(body, hull);\n            Vertices.translate(body.vertices, hullCentre);\n        }\n\n        // sum the properties of all compound parts of the parent body\n        var total = Body._totalProperties(body);\n\n        body.area = total.area;\n        body.parent = body;\n        body.position.x = total.centre.x;\n        body.position.y = total.centre.y;\n        body.positionPrev.x = total.centre.x;\n        body.positionPrev.y = total.centre.y;\n\n        Body.setMass(body, total.mass);\n        Body.setInertia(body, total.inertia);\n        Body.setPosition(body, total.centre);\n    };\n\n    /**\n     * Sets the position of the body instantly. Velocity, angle, force etc. are unchanged.\n     * @method setPosition\n     * @param {body} body\n     * @param {vector} position\n     */\n    Body.setPosition = function(body, position) {\n        var delta = Vector.sub(position, body.position);\n        body.positionPrev.x += delta.x;\n        body.positionPrev.y += delta.y;\n\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            part.position.x += delta.x;\n            part.position.y += delta.y;\n            Vertices.translate(part.vertices, delta);\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n        }\n    };\n\n    /**\n     * Sets the angle of the body instantly. Angular velocity, position, force etc. are unchanged.\n     * @method setAngle\n     * @param {body} body\n     * @param {number} angle\n     */\n    Body.setAngle = function(body, angle) {\n        var delta = angle - body.angle;\n        body.anglePrev += delta;\n\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            part.angle += delta;\n            Vertices.rotate(part.vertices, delta, body.position);\n            Axes.rotate(part.axes, delta);\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n            if (i > 0) {\n                Vector.rotateAbout(part.position, delta, body.position, part.position);\n            }\n        }\n    };\n\n    /**\n     * Sets the linear velocity of the body instantly. Position, angle, force etc. are unchanged. See also `Body.applyForce`.\n     * @method setVelocity\n     * @param {body} body\n     * @param {vector} velocity\n     */\n    Body.setVelocity = function(body, velocity) {\n        body.positionPrev.x = body.position.x - velocity.x;\n        body.positionPrev.y = body.position.y - velocity.y;\n        body.velocity.x = velocity.x;\n        body.velocity.y = velocity.y;\n        body.speed = Vector.magnitude(body.velocity);\n    };\n\n    /**\n     * Sets the angular velocity of the body instantly. Position, angle, force etc. are unchanged. See also `Body.applyForce`.\n     * @method setAngularVelocity\n     * @param {body} body\n     * @param {number} velocity\n     */\n    Body.setAngularVelocity = function(body, velocity) {\n        body.anglePrev = body.angle - velocity;\n        body.angularVelocity = velocity;\n        body.angularSpeed = Math.abs(body.angularVelocity);\n    };\n\n    /**\n     * Moves a body by a given vector relative to its current position, without imparting any velocity.\n     * @method translate\n     * @param {body} body\n     * @param {vector} translation\n     */\n    Body.translate = function(body, translation) {\n        Body.setPosition(body, Vector.add(body.position, translation));\n    };\n\n    /**\n     * Rotates a body by a given angle relative to its current angle, without imparting any angular velocity.\n     * @method rotate\n     * @param {body} body\n     * @param {number} rotation\n     * @param {vector} [point]\n     */\n    Body.rotate = function(body, rotation, point) {\n        if (!point) {\n            Body.setAngle(body, body.angle + rotation);\n        } else {\n            var cos = Math.cos(rotation),\n                sin = Math.sin(rotation),\n                dx = body.position.x - point.x,\n                dy = body.position.y - point.y;\n                \n            Body.setPosition(body, {\n                x: point.x + (dx * cos - dy * sin),\n                y: point.y + (dx * sin + dy * cos)\n            });\n\n            Body.setAngle(body, body.angle + rotation);\n        }\n    };\n\n    /**\n     * Scales the body, including updating physical properties (mass, area, axes, inertia), from a world-space point (default is body centre).\n     * @method scale\n     * @param {body} body\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} [point]\n     */\n    Body.scale = function(body, scaleX, scaleY, point) {\n        var totalArea = 0,\n            totalInertia = 0;\n\n        point = point || body.position;\n\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n\n            // scale vertices\n            Vertices.scale(part.vertices, scaleX, scaleY, point);\n\n            // update properties\n            part.axes = Axes.fromVertices(part.vertices);\n            part.area = Vertices.area(part.vertices);\n            Body.setMass(part, body.density * part.area);\n\n            // update inertia (requires vertices to be at origin)\n            Vertices.translate(part.vertices, { x: -part.position.x, y: -part.position.y });\n            Body.setInertia(part, Body._inertiaScale * Vertices.inertia(part.vertices, part.mass));\n            Vertices.translate(part.vertices, { x: part.position.x, y: part.position.y });\n\n            if (i > 0) {\n                totalArea += part.area;\n                totalInertia += part.inertia;\n            }\n\n            // scale position\n            part.position.x = point.x + (part.position.x - point.x) * scaleX;\n            part.position.y = point.y + (part.position.y - point.y) * scaleY;\n\n            // update bounds\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n        }\n\n        // handle parent body\n        if (body.parts.length > 1) {\n            body.area = totalArea;\n\n            if (!body.isStatic) {\n                Body.setMass(body, body.density * totalArea);\n                Body.setInertia(body, totalInertia);\n            }\n        }\n\n        // handle circles\n        if (body.circleRadius) { \n            if (scaleX === scaleY) {\n                body.circleRadius *= scaleX;\n            } else {\n                // body is no longer a circle\n                body.circleRadius = null;\n            }\n        }\n    };\n\n    /**\n     * Performs a simulation step for the given `body`, including updating position and angle using Verlet integration.\n     * @method update\n     * @param {body} body\n     * @param {number} deltaTime\n     * @param {number} timeScale\n     * @param {number} correction\n     */\n    Body.update = function(body, deltaTime, timeScale, correction) {\n        var deltaTimeSquared = Math.pow(deltaTime * timeScale * body.timeScale, 2);\n\n        // from the previous step\n        var frictionAir = 1 - body.frictionAir * timeScale * body.timeScale,\n            velocityPrevX = body.position.x - body.positionPrev.x,\n            velocityPrevY = body.position.y - body.positionPrev.y;\n\n        // update velocity with Verlet integration\n        body.velocity.x = (velocityPrevX * frictionAir * correction) + (body.force.x / body.mass) * deltaTimeSquared;\n        body.velocity.y = (velocityPrevY * frictionAir * correction) + (body.force.y / body.mass) * deltaTimeSquared;\n\n        body.positionPrev.x = body.position.x;\n        body.positionPrev.y = body.position.y;\n        body.position.x += body.velocity.x;\n        body.position.y += body.velocity.y;\n\n        // update angular velocity with Verlet integration\n        body.angularVelocity = ((body.angle - body.anglePrev) * frictionAir * correction) + (body.torque / body.inertia) * deltaTimeSquared;\n        body.anglePrev = body.angle;\n        body.angle += body.angularVelocity;\n\n        // track speed and acceleration\n        body.speed = Vector.magnitude(body.velocity);\n        body.angularSpeed = Math.abs(body.angularVelocity);\n\n        // transform the body geometry\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n\n            Vertices.translate(part.vertices, body.velocity);\n            \n            if (i > 0) {\n                part.position.x += body.velocity.x;\n                part.position.y += body.velocity.y;\n            }\n\n            if (body.angularVelocity !== 0) {\n                Vertices.rotate(part.vertices, body.angularVelocity, body.position);\n                Axes.rotate(part.axes, body.angularVelocity);\n                if (i > 0) {\n                    Vector.rotateAbout(part.position, body.angularVelocity, body.position, part.position);\n                }\n            }\n\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n        }\n    };\n\n    /**\n     * Applies a force to a body from a given world-space position, including resulting torque.\n     * @method applyForce\n     * @param {body} body\n     * @param {vector} position\n     * @param {vector} force\n     */\n    Body.applyForce = function(body, position, force) {\n        body.force.x += force.x;\n        body.force.y += force.y;\n        var offset = { x: position.x - body.position.x, y: position.y - body.position.y };\n        body.torque += offset.x * force.y - offset.y * force.x;\n    };\n\n    /**\n     * Returns the sums of the properties of all compound parts of the parent body.\n     * @method _totalProperties\n     * @private\n     * @param {body} body\n     * @return {}\n     */\n    Body._totalProperties = function(body) {\n        // from equations at:\n        // https://ecourses.ou.edu/cgi-bin/ebook.cgi?doc=&topic=st&chap_sec=07.2&page=theory\n        // http://output.to/sideway/default.asp?qno=121100087\n\n        var properties = {\n            mass: 0,\n            area: 0,\n            inertia: 0,\n            centre: { x: 0, y: 0 }\n        };\n\n        // sum the properties of all compound parts of the parent body\n        for (var i = body.parts.length === 1 ? 0 : 1; i < body.parts.length; i++) {\n            var part = body.parts[i],\n                mass = part.mass !== Infinity ? part.mass : 1;\n\n            properties.mass += mass;\n            properties.area += part.area;\n            properties.inertia += part.inertia;\n            properties.centre = Vector.add(properties.centre, Vector.mult(part.position, mass));\n        }\n\n        properties.centre = Vector.div(properties.centre, properties.mass);\n\n        return properties;\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired when a body starts sleeping (where `this` is the body).\n    *\n    * @event sleepStart\n    * @this {body} The body that has started sleeping\n    * @param {} event An event object\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a body ends sleeping (where `this` is the body).\n    *\n    * @event sleepEnd\n    * @this {body} The body that has ended sleeping\n    * @param {} event An event object\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` uniquely identifying number generated in `Body.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"body\"\n     * @readOnly\n     */\n\n    /**\n     * An arbitrary `String` name to help the user identify and manage bodies.\n     *\n     * @property label\n     * @type string\n     * @default \"Body\"\n     */\n\n    /**\n     * An array of bodies that make up this body. \n     * The first body in the array must always be a self reference to the current body instance.\n     * All bodies in the `parts` array together form a single rigid compound body.\n     * Parts are allowed to overlap, have gaps or holes or even form concave bodies.\n     * Parts themselves should never be added to a `World`, only the parent body should be.\n     * Use `Body.setParts` when setting parts to ensure correct updates of all properties.\n     *\n     * @property parts\n     * @type body[]\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n    /**\n     * A self reference if the body is _not_ a part of another body.\n     * Otherwise this is a reference to the body that this is a part of.\n     * See `body.parts`.\n     *\n     * @property parent\n     * @type body\n     */\n\n    /**\n     * A `Number` specifying the angle of the body, in radians.\n     *\n     * @property angle\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * An array of `Vector` objects that specify the convex hull of the rigid body.\n     * These should be provided about the origin `(0, 0)`. E.g.\n     *\n     *     [{ x: 0, y: 0 }, { x: 25, y: 50 }, { x: 50, y: 0 }]\n     *\n     * When passed via `Body.create`, the vertices are translated relative to `body.position` (i.e. world-space, and constantly updated by `Body.update` during simulation).\n     * The `Vector` objects are also augmented with additional properties required for efficient collision detection. \n     *\n     * Other properties such as `inertia` and `bounds` are automatically calculated from the passed vertices (unless provided via `options`).\n     * Concave hulls are not currently supported. The module `Matter.Vertices` contains useful methods for working with vertices.\n     *\n     * @property vertices\n     * @type vector[]\n     */\n\n    /**\n     * A `Vector` that specifies the current world-space position of the body.\n     *\n     * @property position\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Vector` that specifies the force to apply in the current step. It is zeroed after every `Body.update`. See also `Body.applyForce`.\n     *\n     * @property force\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Number` that specifies the torque (turning force) to apply in the current step. It is zeroed after every `Body.update`.\n     *\n     * @property torque\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that _measures_ the current speed of the body after the last `Body.update`. It is read-only and always positive (it's the magnitude of `body.velocity`).\n     *\n     * @readOnly\n     * @property speed\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that _measures_ the current angular speed of the body after the last `Body.update`. It is read-only and always positive (it's the magnitude of `body.angularVelocity`).\n     *\n     * @readOnly\n     * @property angularSpeed\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Vector` that _measures_ the current velocity of the body after the last `Body.update`. It is read-only. \n     * If you need to modify a body's velocity directly, you should either apply a force or simply change the body's `position` (as the engine uses position-Verlet integration).\n     *\n     * @readOnly\n     * @property velocity\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Number` that _measures_ the current angular velocity of the body after the last `Body.update`. It is read-only. \n     * If you need to modify a body's angular velocity directly, you should apply a torque or simply change the body's `angle` (as the engine uses position-Verlet integration).\n     *\n     * @readOnly\n     * @property angularVelocity\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A flag that indicates whether a body is considered static. A static body can never change position or angle and is completely fixed.\n     * If you need to set a body as static after its creation, you should use `Body.setStatic` as this requires more than just setting this flag.\n     *\n     * @property isStatic\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag that indicates whether a body is a sensor. Sensor triggers collision events, but doesn't react with colliding body physically.\n     *\n     * @property isSensor\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag that indicates whether the body is considered sleeping. A sleeping body acts similar to a static body, except it is only temporary and can be awoken.\n     * If you need to set a body as sleeping, you should use `Sleeping.set` as this requires more than just setting this flag.\n     *\n     * @property isSleeping\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A `Number` that _measures_ the amount of movement a body currently has (a combination of `speed` and `angularSpeed`). It is read-only and always positive.\n     * It is used and updated by the `Matter.Sleeping` module during simulation to decide if a body has come to rest.\n     *\n     * @readOnly\n     * @property motion\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that defines the number of updates in which this body must have near-zero velocity before it is set as sleeping by the `Matter.Sleeping` module (if sleeping is enabled by the engine).\n     *\n     * @property sleepThreshold\n     * @type number\n     * @default 60\n     */\n\n    /**\n     * A `Number` that defines the density of the body, that is its mass per unit area.\n     * If you pass the density via `Body.create` the `mass` property is automatically calculated for you based on the size (area) of the object.\n     * This is generally preferable to simply setting mass and allows for more intuitive definition of materials (e.g. rock has a higher density than wood).\n     *\n     * @property density\n     * @type number\n     * @default 0.001\n     */\n\n    /**\n     * A `Number` that defines the mass of the body, although it may be more appropriate to specify the `density` property instead.\n     * If you modify this value, you must also modify the `body.inverseMass` property (`1 / mass`).\n     *\n     * @property mass\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the inverse mass of the body (`1 / mass`).\n     * If you modify this value, you must also modify the `body.mass` property.\n     *\n     * @property inverseMass\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the moment of inertia (i.e. second moment of area) of the body.\n     * It is automatically calculated from the given convex hull (`vertices` array) and density in `Body.create`.\n     * If you modify this value, you must also modify the `body.inverseInertia` property (`1 / inertia`).\n     *\n     * @property inertia\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the inverse moment of inertia of the body (`1 / inertia`).\n     * If you modify this value, you must also modify the `body.inertia` property.\n     *\n     * @property inverseInertia\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the restitution (elasticity) of the body. The value is always positive and is in the range `(0, 1)`.\n     * A value of `0` means collisions may be perfectly inelastic and no bouncing may occur. \n     * A value of `0.8` means the body may bounce back with approximately 80% of its kinetic energy.\n     * Note that collision response is based on _pairs_ of bodies, and that `restitution` values are _combined_ with the following formula:\n     *\n     *     Math.max(bodyA.restitution, bodyB.restitution)\n     *\n     * @property restitution\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that defines the friction of the body. The value is always positive and is in the range `(0, 1)`.\n     * A value of `0` means that the body may slide indefinitely.\n     * A value of `1` means the body may come to a stop almost instantly after a force is applied.\n     *\n     * The effects of the value may be non-linear. \n     * High values may be unstable depending on the body.\n     * The engine uses a Coulomb friction model including static and kinetic friction.\n     * Note that collision response is based on _pairs_ of bodies, and that `friction` values are _combined_ with the following formula:\n     *\n     *     Math.min(bodyA.friction, bodyB.friction)\n     *\n     * @property friction\n     * @type number\n     * @default 0.1\n     */\n\n    /**\n     * A `Number` that defines the static friction of the body (in the Coulomb friction model). \n     * A value of `0` means the body will never 'stick' when it is nearly stationary and only dynamic `friction` is used.\n     * The higher the value (e.g. `10`), the more force it will take to initially get the body moving when nearly stationary.\n     * This value is multiplied with the `friction` property to make it easier to change `friction` and maintain an appropriate amount of static friction.\n     *\n     * @property frictionStatic\n     * @type number\n     * @default 0.5\n     */\n\n    /**\n     * A `Number` that defines the air friction of the body (air resistance). \n     * A value of `0` means the body will never slow as it moves through space.\n     * The higher the value, the faster a body slows when moving through space.\n     * The effects of the value are non-linear. \n     *\n     * @property frictionAir\n     * @type number\n     * @default 0.01\n     */\n\n    /**\n     * An `Object` that specifies the collision filtering properties of this body.\n     *\n     * Collisions between two bodies will obey the following rules:\n     * - If the two bodies have the same non-zero value of `collisionFilter.group`,\n     *   they will always collide if the value is positive, and they will never collide\n     *   if the value is negative.\n     * - If the two bodies have different values of `collisionFilter.group` or if one\n     *   (or both) of the bodies has a value of 0, then the category/mask rules apply as follows:\n     *\n     * Each body belongs to a collision category, given by `collisionFilter.category`. This\n     * value is used as a bit field and the category should have only one bit set, meaning that\n     * the value of this property is a power of two in the range [1, 2^31]. Thus, there are 32\n     * different collision categories available.\n     *\n     * Each body also defines a collision bitmask, given by `collisionFilter.mask` which specifies\n     * the categories it collides with (the value is the bitwise AND value of all these categories).\n     *\n     * Using the category/mask rules, two bodies `A` and `B` collide if each includes the other's\n     * category in its mask, i.e. `(categoryA & maskB) !== 0` and `(categoryB & maskA) !== 0`\n     * are both true.\n     *\n     * @property collisionFilter\n     * @type object\n     */\n\n    /**\n     * An Integer `Number`, that specifies the collision group this body belongs to.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.group\n     * @type object\n     * @default 0\n     */\n\n    /**\n     * A bit field that specifies the collision category this body belongs to.\n     * The category value should have only one bit set, for example `0x0001`.\n     * This means there are up to 32 unique collision categories available.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.category\n     * @type object\n     * @default 1\n     */\n\n    /**\n     * A bit mask that specifies the collision categories this body may collide with.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.mask\n     * @type object\n     * @default -1\n     */\n\n    /**\n     * A `Number` that specifies a tolerance on how far a body is allowed to 'sink' or rotate into other bodies.\n     * Avoid changing this value unless you understand the purpose of `slop` in physics engines.\n     * The default should generally suffice, although very large bodies may require larger values for stable stacking.\n     *\n     * @property slop\n     * @type number\n     * @default 0.05\n     */\n\n    /**\n     * A `Number` that allows per-body time scaling, e.g. a force-field where bodies inside are in slow-motion, while others are at full speed.\n     *\n     * @property timeScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * An `Object` that defines the rendering properties to be consumed by the module `Matter.Render`.\n     *\n     * @property render\n     * @type object\n     */\n\n    /**\n     * A flag that indicates if the body should be rendered.\n     *\n     * @property render.visible\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * Sets the opacity to use when rendering.\n     *\n     * @property render.opacity\n     * @type number\n     * @default 1\n    */\n\n    /**\n     * An `Object` that defines the sprite properties to use when rendering, if any.\n     *\n     * @property render.sprite\n     * @type object\n     */\n\n    /**\n     * An `String` that defines the path to the image to use as the sprite texture, if any.\n     *\n     * @property render.sprite.texture\n     * @type string\n     */\n     \n    /**\n     * A `Number` that defines the scaling in the x-axis for the sprite, if any.\n     *\n     * @property render.sprite.xScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A `Number` that defines the scaling in the y-axis for the sprite, if any.\n     *\n     * @property render.sprite.yScale\n     * @type number\n     * @default 1\n     */\n\n     /**\n      * A `Number` that defines the offset in the x-axis for the sprite (normalised by texture width).\n      *\n      * @property render.sprite.xOffset\n      * @type number\n      * @default 0\n      */\n\n     /**\n      * A `Number` that defines the offset in the y-axis for the sprite (normalised by texture height).\n      *\n      * @property render.sprite.yOffset\n      * @type number\n      * @default 0\n      */\n\n    /**\n     * A `Number` that defines the line width to use when rendering the body outline (if a sprite is not defined).\n     * A value of `0` means no outline will be rendered.\n     *\n     * @property render.lineWidth\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `String` that defines the fill style to use when rendering the body (if a sprite is not defined).\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.fillStyle\n     * @type string\n     * @default a random colour\n     */\n\n    /**\n     * A `String` that defines the stroke style to use when rendering the body outline (if a sprite is not defined).\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.strokeStyle\n     * @type string\n     * @default a random colour\n     */\n\n    /**\n     * An array of unique axis vectors (edge normals) used for collision detection.\n     * These are automatically calculated from the given convex hull (`vertices` array) in `Body.create`.\n     * They are constantly updated by `Body.update` during the simulation.\n     *\n     * @property axes\n     * @type vector[]\n     */\n     \n    /**\n     * A `Number` that _measures_ the area of the body's convex hull, calculated at creation by `Body.create`.\n     *\n     * @property area\n     * @type string\n     * @default \n     */\n\n    /**\n     * A `Bounds` object that defines the AABB region for the body.\n     * It is automatically calculated from the given convex hull (`vertices` array) in `Body.create` and constantly updated by `Body.update` during simulation.\n     *\n     * @property bounds\n     * @type bounds\n     */\n\n})();\n\n},{\"../core/Common\":14,\"../core/Sleeping\":22,\"../geometry/Axes\":25,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29,\"../render/Render\":31}],2:[function(_dereq_,module,exports){\n/**\n* The `Matter.Composite` module contains methods for creating and manipulating composite bodies.\n* A composite body is a collection of `Matter.Body`, `Matter.Constraint` and other `Matter.Composite`, therefore composites form a tree structure.\n* It is important to use the functions in this module to modify composites, rather than directly modifying their properties.\n* Note that the `Matter.World` object is also a type of `Matter.Composite` and as such all composite methods here can also operate on a `Matter.World`.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Composite\n*/\n\nvar Composite = {};\n\nmodule.exports = Composite;\n\nvar Events = _dereq_('../core/Events');\nvar Common = _dereq_('../core/Common');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Body = _dereq_('./Body');\n\n(function() {\n\n    /**\n     * Creates a new composite. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properites section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} [options]\n     * @return {composite} A new composite\n     */\n    Composite.create = function(options) {\n        return Common.extend({ \n            id: Common.nextId(),\n            type: 'composite',\n            parent: null,\n            isModified: false,\n            bodies: [], \n            constraints: [], \n            composites: [],\n            label: 'Composite',\n            plugin: {}\n        }, options);\n    };\n\n    /**\n     * Sets the composite's `isModified` flag. \n     * If `updateParents` is true, all parents will be set (default: false).\n     * If `updateChildren` is true, all children will be set (default: false).\n     * @method setModified\n     * @param {composite} composite\n     * @param {boolean} isModified\n     * @param {boolean} [updateParents=false]\n     * @param {boolean} [updateChildren=false]\n     */\n    Composite.setModified = function(composite, isModified, updateParents, updateChildren) {\n        composite.isModified = isModified;\n\n        if (updateParents && composite.parent) {\n            Composite.setModified(composite.parent, isModified, updateParents, updateChildren);\n        }\n\n        if (updateChildren) {\n            for(var i = 0; i < composite.composites.length; i++) {\n                var childComposite = composite.composites[i];\n                Composite.setModified(childComposite, isModified, updateParents, updateChildren);\n            }\n        }\n    };\n\n    /**\n     * Generic add function. Adds one or many body(s), constraint(s) or a composite(s) to the given composite.\n     * Triggers `beforeAdd` and `afterAdd` events on the `composite`.\n     * @method add\n     * @param {composite} composite\n     * @param {} object\n     * @return {composite} The original composite with the objects added\n     */\n    Composite.add = function(composite, object) {\n        var objects = [].concat(object);\n\n        Events.trigger(composite, 'beforeAdd', { object: object });\n\n        for (var i = 0; i < objects.length; i++) {\n            var obj = objects[i];\n\n            switch (obj.type) {\n\n            case 'body':\n                // skip adding compound parts\n                if (obj.parent !== obj) {\n                    Common.warn('Composite.add: skipped adding a compound body part (you must add its parent instead)');\n                    break;\n                }\n\n                Composite.addBody(composite, obj);\n                break;\n            case 'constraint':\n                Composite.addConstraint(composite, obj);\n                break;\n            case 'composite':\n                Composite.addComposite(composite, obj);\n                break;\n            case 'mouseConstraint':\n                Composite.addConstraint(composite, obj.constraint);\n                break;\n\n            }\n        }\n\n        Events.trigger(composite, 'afterAdd', { object: object });\n\n        return composite;\n    };\n\n    /**\n     * Generic remove function. Removes one or many body(s), constraint(s) or a composite(s) to the given composite.\n     * Optionally searching its children recursively.\n     * Triggers `beforeRemove` and `afterRemove` events on the `composite`.\n     * @method remove\n     * @param {composite} composite\n     * @param {} object\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the objects removed\n     */\n    Composite.remove = function(composite, object, deep) {\n        var objects = [].concat(object);\n\n        Events.trigger(composite, 'beforeRemove', { object: object });\n\n        for (var i = 0; i < objects.length; i++) {\n            var obj = objects[i];\n\n            switch (obj.type) {\n\n            case 'body':\n                Composite.removeBody(composite, obj, deep);\n                break;\n            case 'constraint':\n                Composite.removeConstraint(composite, obj, deep);\n                break;\n            case 'composite':\n                Composite.removeComposite(composite, obj, deep);\n                break;\n            case 'mouseConstraint':\n                Composite.removeConstraint(composite, obj.constraint);\n                break;\n\n            }\n        }\n\n        Events.trigger(composite, 'afterRemove', { object: object });\n\n        return composite;\n    };\n\n    /**\n     * Adds a composite to the given composite.\n     * @private\n     * @method addComposite\n     * @param {composite} compositeA\n     * @param {composite} compositeB\n     * @return {composite} The original compositeA with the objects from compositeB added\n     */\n    Composite.addComposite = function(compositeA, compositeB) {\n        compositeA.composites.push(compositeB);\n        compositeB.parent = compositeA;\n        Composite.setModified(compositeA, true, true, false);\n        return compositeA;\n    };\n\n    /**\n     * Removes a composite from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeComposite\n     * @param {composite} compositeA\n     * @param {composite} compositeB\n     * @param {boolean} [deep=false]\n     * @return {composite} The original compositeA with the composite removed\n     */\n    Composite.removeComposite = function(compositeA, compositeB, deep) {\n        var position = Common.indexOf(compositeA.composites, compositeB);\n        if (position !== -1) {\n            Composite.removeCompositeAt(compositeA, position);\n            Composite.setModified(compositeA, true, true, false);\n        }\n\n        if (deep) {\n            for (var i = 0; i < compositeA.composites.length; i++){\n                Composite.removeComposite(compositeA.composites[i], compositeB, true);\n            }\n        }\n\n        return compositeA;\n    };\n\n    /**\n     * Removes a composite from the given composite.\n     * @private\n     * @method removeCompositeAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the composite removed\n     */\n    Composite.removeCompositeAt = function(composite, position) {\n        composite.composites.splice(position, 1);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Adds a body to the given composite.\n     * @private\n     * @method addBody\n     * @param {composite} composite\n     * @param {body} body\n     * @return {composite} The original composite with the body added\n     */\n    Composite.addBody = function(composite, body) {\n        composite.bodies.push(body);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Removes a body from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeBody\n     * @param {composite} composite\n     * @param {body} body\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the body removed\n     */\n    Composite.removeBody = function(composite, body, deep) {\n        var position = Common.indexOf(composite.bodies, body);\n        if (position !== -1) {\n            Composite.removeBodyAt(composite, position);\n            Composite.setModified(composite, true, true, false);\n        }\n\n        if (deep) {\n            for (var i = 0; i < composite.composites.length; i++){\n                Composite.removeBody(composite.composites[i], body, true);\n            }\n        }\n\n        return composite;\n    };\n\n    /**\n     * Removes a body from the given composite.\n     * @private\n     * @method removeBodyAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the body removed\n     */\n    Composite.removeBodyAt = function(composite, position) {\n        composite.bodies.splice(position, 1);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Adds a constraint to the given composite.\n     * @private\n     * @method addConstraint\n     * @param {composite} composite\n     * @param {constraint} constraint\n     * @return {composite} The original composite with the constraint added\n     */\n    Composite.addConstraint = function(composite, constraint) {\n        composite.constraints.push(constraint);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Removes a constraint from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeConstraint\n     * @param {composite} composite\n     * @param {constraint} constraint\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the constraint removed\n     */\n    Composite.removeConstraint = function(composite, constraint, deep) {\n        var position = Common.indexOf(composite.constraints, constraint);\n        if (position !== -1) {\n            Composite.removeConstraintAt(composite, position);\n        }\n\n        if (deep) {\n            for (var i = 0; i < composite.composites.length; i++){\n                Composite.removeConstraint(composite.composites[i], constraint, true);\n            }\n        }\n\n        return composite;\n    };\n\n    /**\n     * Removes a body from the given composite.\n     * @private\n     * @method removeConstraintAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the constraint removed\n     */\n    Composite.removeConstraintAt = function(composite, position) {\n        composite.constraints.splice(position, 1);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Removes all bodies, constraints and composites from the given composite.\n     * Optionally clearing its children recursively.\n     * @method clear\n     * @param {composite} composite\n     * @param {boolean} keepStatic\n     * @param {boolean} [deep=false]\n     */\n    Composite.clear = function(composite, keepStatic, deep) {\n        if (deep) {\n            for (var i = 0; i < composite.composites.length; i++){\n                Composite.clear(composite.composites[i], keepStatic, true);\n            }\n        }\n        \n        if (keepStatic) {\n            composite.bodies = composite.bodies.filter(function(body) { return body.isStatic; });\n        } else {\n            composite.bodies.length = 0;\n        }\n\n        composite.constraints.length = 0;\n        composite.composites.length = 0;\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Returns all bodies in the given composite, including all bodies in its children, recursively.\n     * @method allBodies\n     * @param {composite} composite\n     * @return {body[]} All the bodies\n     */\n    Composite.allBodies = function(composite) {\n        var bodies = [].concat(composite.bodies);\n\n        for (var i = 0; i < composite.composites.length; i++)\n            bodies = bodies.concat(Composite.allBodies(composite.composites[i]));\n\n        return bodies;\n    };\n\n    /**\n     * Returns all constraints in the given composite, including all constraints in its children, recursively.\n     * @method allConstraints\n     * @param {composite} composite\n     * @return {constraint[]} All the constraints\n     */\n    Composite.allConstraints = function(composite) {\n        var constraints = [].concat(composite.constraints);\n\n        for (var i = 0; i < composite.composites.length; i++)\n            constraints = constraints.concat(Composite.allConstraints(composite.composites[i]));\n\n        return constraints;\n    };\n\n    /**\n     * Returns all composites in the given composite, including all composites in its children, recursively.\n     * @method allComposites\n     * @param {composite} composite\n     * @return {composite[]} All the composites\n     */\n    Composite.allComposites = function(composite) {\n        var composites = [].concat(composite.composites);\n\n        for (var i = 0; i < composite.composites.length; i++)\n            composites = composites.concat(Composite.allComposites(composite.composites[i]));\n\n        return composites;\n    };\n\n    /**\n     * Searches the composite recursively for an object matching the type and id supplied, null if not found.\n     * @method get\n     * @param {composite} composite\n     * @param {number} id\n     * @param {string} type\n     * @return {object} The requested object, if found\n     */\n    Composite.get = function(composite, id, type) {\n        var objects,\n            object;\n\n        switch (type) {\n        case 'body':\n            objects = Composite.allBodies(composite);\n            break;\n        case 'constraint':\n            objects = Composite.allConstraints(composite);\n            break;\n        case 'composite':\n            objects = Composite.allComposites(composite).concat(composite);\n            break;\n        }\n\n        if (!objects)\n            return null;\n\n        object = objects.filter(function(object) { \n            return object.id.toString() === id.toString(); \n        });\n\n        return object.length === 0 ? null : object[0];\n    };\n\n    /**\n     * Moves the given object(s) from compositeA to compositeB (equal to a remove followed by an add).\n     * @method move\n     * @param {compositeA} compositeA\n     * @param {object[]} objects\n     * @param {compositeB} compositeB\n     * @return {composite} Returns compositeA\n     */\n    Composite.move = function(compositeA, objects, compositeB) {\n        Composite.remove(compositeA, objects);\n        Composite.add(compositeB, objects);\n        return compositeA;\n    };\n\n    /**\n     * Assigns new ids for all objects in the composite, recursively.\n     * @method rebase\n     * @param {composite} composite\n     * @return {composite} Returns composite\n     */\n    Composite.rebase = function(composite) {\n        var objects = Composite.allBodies(composite)\n                        .concat(Composite.allConstraints(composite))\n                        .concat(Composite.allComposites(composite));\n\n        for (var i = 0; i < objects.length; i++) {\n            objects[i].id = Common.nextId();\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Translates all children in the composite by a given vector relative to their current positions, \n     * without imparting any velocity.\n     * @method translate\n     * @param {composite} composite\n     * @param {vector} translation\n     * @param {bool} [recursive=true]\n     */\n    Composite.translate = function(composite, translation, recursive) {\n        var bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\n        for (var i = 0; i < bodies.length; i++) {\n            Body.translate(bodies[i], translation);\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Rotates all children in the composite by a given angle about the given point, without imparting any angular velocity.\n     * @method rotate\n     * @param {composite} composite\n     * @param {number} rotation\n     * @param {vector} point\n     * @param {bool} [recursive=true]\n     */\n    Composite.rotate = function(composite, rotation, point, recursive) {\n        var cos = Math.cos(rotation),\n            sin = Math.sin(rotation),\n            bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                dx = body.position.x - point.x,\n                dy = body.position.y - point.y;\n                \n            Body.setPosition(body, {\n                x: point.x + (dx * cos - dy * sin),\n                y: point.y + (dx * sin + dy * cos)\n            });\n\n            Body.rotate(body, rotation);\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Scales all children in the composite, including updating physical properties (mass, area, axes, inertia), from a world-space point.\n     * @method scale\n     * @param {composite} composite\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} point\n     * @param {bool} [recursive=true]\n     */\n    Composite.scale = function(composite, scaleX, scaleY, point, recursive) {\n        var bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                dx = body.position.x - point.x,\n                dy = body.position.y - point.y;\n                \n            Body.setPosition(body, {\n                x: point.x + dx * scaleX,\n                y: point.y + dy * scaleY\n            });\n\n            Body.scale(body, scaleX, scaleY);\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Returns the union of the bounds of all of the composite's bodies.\n     * @method bounds\n     * @param {composite} composite The composite.\n     * @returns {bounds} The composite bounds.\n     */\n    Composite.bounds = function(composite) {\n        var bodies = Composite.allBodies(composite),\n            vertices = [];\n\n        for (var i = 0; i < bodies.length; i += 1) {\n            var body = bodies[i];\n            vertices.push(body.bounds.min, body.bounds.max);\n        }\n\n        return Bounds.create(vertices);\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired when a call to `Composite.add` is made, before objects have been added.\n    *\n    * @event beforeAdd\n    * @param {} event An event object\n    * @param {} event.object The object(s) to be added (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a call to `Composite.add` is made, after objects have been added.\n    *\n    * @event afterAdd\n    * @param {} event An event object\n    * @param {} event.object The object(s) that have been added (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a call to `Composite.remove` is made, before objects have been removed.\n    *\n    * @event beforeRemove\n    * @param {} event An event object\n    * @param {} event.object The object(s) to be removed (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a call to `Composite.remove` is made, after objects have been removed.\n    *\n    * @event afterRemove\n    * @param {} event An event object\n    * @param {} event.object The object(s) that have been removed (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` uniquely identifying number generated in `Composite.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"composite\"\n     * @readOnly\n     */\n\n    /**\n     * An arbitrary `String` name to help the user identify and manage composites.\n     *\n     * @property label\n     * @type string\n     * @default \"Composite\"\n     */\n\n    /**\n     * A flag that specifies whether the composite has been modified during the current step.\n     * Most `Matter.Composite` methods will automatically set this flag to `true` to inform the engine of changes to be handled.\n     * If you need to change it manually, you should use the `Composite.setModified` method.\n     *\n     * @property isModified\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * The `Composite` that is the parent of this composite. It is automatically managed by the `Matter.Composite` methods.\n     *\n     * @property parent\n     * @type composite\n     * @default null\n     */\n\n    /**\n     * An array of `Body` that are _direct_ children of this composite.\n     * To add or remove bodies you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allBodies` method.\n     *\n     * @property bodies\n     * @type body[]\n     * @default []\n     */\n\n    /**\n     * An array of `Constraint` that are _direct_ children of this composite.\n     * To add or remove constraints you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allConstraints` method.\n     *\n     * @property constraints\n     * @type constraint[]\n     * @default []\n     */\n\n    /**\n     * An array of `Composite` that are _direct_ children of this composite.\n     * To add or remove composites you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allComposites` method.\n     *\n     * @property composites\n     * @type composite[]\n     * @default []\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n})();\n\n},{\"../core/Common\":14,\"../core/Events\":16,\"../geometry/Bounds\":26,\"./Body\":1}],3:[function(_dereq_,module,exports){\n/**\n* The `Matter.World` module contains methods for creating and manipulating the world composite.\n* A `Matter.World` is a `Matter.Composite` body, which is a collection of `Matter.Body`, `Matter.Constraint` and other `Matter.Composite`.\n* A `Matter.World` has a few additional properties including `gravity` and `bounds`.\n* It is important to use the functions in the `Matter.Composite` module to modify the world composite, rather than directly modifying its properties.\n* There are also a few methods here that alias those in `Matter.Composite` for easier readability.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class World\n* @extends Composite\n*/\n\nvar World = {};\n\nmodule.exports = World;\n\nvar Composite = _dereq_('./Composite');\nvar Constraint = _dereq_('../constraint/Constraint');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a new world composite. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @constructor\n     * @param {} options\n     * @return {world} A new world\n     */\n    World.create = function(options) {\n        var composite = Composite.create();\n\n        var defaults = {\n            label: 'World',\n            gravity: {\n                x: 0,\n                y: 1,\n                scale: 0.001\n            },\n            bounds: { \n                min: { x: -Infinity, y: -Infinity }, \n                max: { x: Infinity, y: Infinity } \n            }\n        };\n        \n        return Common.extend(composite, defaults, options);\n    };\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * The gravity to apply on the world.\n     *\n     * @property gravity\n     * @type object\n     */\n\n    /**\n     * The gravity x component.\n     *\n     * @property gravity.x\n     * @type object\n     * @default 0\n     */\n\n    /**\n     * The gravity y component.\n     *\n     * @property gravity.y\n     * @type object\n     * @default 1\n     */\n\n    /**\n     * The gravity scale factor.\n     *\n     * @property gravity.scale\n     * @type object\n     * @default 0.001\n     */\n\n    /**\n     * A `Bounds` object that defines the world bounds for collision detection.\n     *\n     * @property bounds\n     * @type bounds\n     * @default { min: { x: -Infinity, y: -Infinity }, max: { x: Infinity, y: Infinity } }\n     */\n\n    // World is a Composite body\n    // see src/module/Outro.js for these aliases:\n    \n    /**\n     * An alias for Composite.add\n     * @method add\n     * @param {world} world\n     * @param {} object\n     * @return {composite} The original world with the objects added\n     */\n\n    /**\n     * An alias for Composite.remove\n     * @method remove\n     * @param {world} world\n     * @param {} object\n     * @param {boolean} [deep=false]\n     * @return {composite} The original world with the objects removed\n     */\n\n    /**\n     * An alias for Composite.clear\n     * @method clear\n     * @param {world} world\n     * @param {boolean} keepStatic\n     */\n\n    /**\n     * An alias for Composite.addComposite\n     * @method addComposite\n     * @param {world} world\n     * @param {composite} composite\n     * @return {world} The original world with the objects from composite added\n     */\n    \n     /**\n      * An alias for Composite.addBody\n      * @method addBody\n      * @param {world} world\n      * @param {body} body\n      * @return {world} The original world with the body added\n      */\n\n     /**\n      * An alias for Composite.addConstraint\n      * @method addConstraint\n      * @param {world} world\n      * @param {constraint} constraint\n      * @return {world} The original world with the constraint added\n      */\n\n})();\n\n},{\"../constraint/Constraint\":12,\"../core/Common\":14,\"./Composite\":2}],4:[function(_dereq_,module,exports){\n/**\n* The `Matter.Contact` module contains methods for creating and manipulating collision contacts.\n*\n* @class Contact\n*/\n\nvar Contact = {};\n\nmodule.exports = Contact;\n\n(function() {\n\n    /**\n     * Creates a new contact.\n     * @method create\n     * @param {vertex} vertex\n     * @return {contact} A new contact\n     */\n    Contact.create = function(vertex) {\n        return {\n            id: Contact.id(vertex),\n            vertex: vertex,\n            normalImpulse: 0,\n            tangentImpulse: 0\n        };\n    };\n    \n    /**\n     * Generates a contact id.\n     * @method id\n     * @param {vertex} vertex\n     * @return {string} Unique contactID\n     */\n    Contact.id = function(vertex) {\n        return vertex.body.id + '_' + vertex.index;\n    };\n\n})();\n\n},{}],5:[function(_dereq_,module,exports){\n/**\n* The `Matter.Detector` module contains methods for detecting collisions given a set of pairs.\n*\n* @class Detector\n*/\n\n// TODO: speculative contacts\n\nvar Detector = {};\n\nmodule.exports = Detector;\n\nvar SAT = _dereq_('./SAT');\nvar Pair = _dereq_('./Pair');\nvar Bounds = _dereq_('../geometry/Bounds');\n\n(function() {\n\n    /**\n     * Finds all collisions given a list of pairs.\n     * @method collisions\n     * @param {pair[]} broadphasePairs\n     * @param {engine} engine\n     * @return {array} collisions\n     */\n    Detector.collisions = function(broadphasePairs, engine) {\n        var collisions = [],\n            pairsTable = engine.pairs.table;\n\n        \n        for (var i = 0; i < broadphasePairs.length; i++) {\n            var bodyA = broadphasePairs[i][0], \n                bodyB = broadphasePairs[i][1];\n\n            if ((bodyA.isStatic || bodyA.isSleeping) && (bodyB.isStatic || bodyB.isSleeping))\n                continue;\n            \n            if (!Detector.canCollide(bodyA.collisionFilter, bodyB.collisionFilter))\n                continue;\n\n\n            // mid phase\n            if (Bounds.overlaps(bodyA.bounds, bodyB.bounds)) {\n                for (var j = bodyA.parts.length > 1 ? 1 : 0; j < bodyA.parts.length; j++) {\n                    var partA = bodyA.parts[j];\n\n                    for (var k = bodyB.parts.length > 1 ? 1 : 0; k < bodyB.parts.length; k++) {\n                        var partB = bodyB.parts[k];\n\n                        if ((partA === bodyA && partB === bodyB) || Bounds.overlaps(partA.bounds, partB.bounds)) {\n                            // find a previous collision we could reuse\n                            var pairId = Pair.id(partA, partB),\n                                pair = pairsTable[pairId],\n                                previousCollision;\n\n                            if (pair && pair.isActive) {\n                                previousCollision = pair.collision;\n                            } else {\n                                previousCollision = null;\n                            }\n\n                            // narrow phase\n                            var collision = SAT.collides(partA, partB, previousCollision);\n\n\n                            if (collision.collided) {\n                                collisions.push(collision);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return collisions;\n    };\n\n    /**\n     * Returns `true` if both supplied collision filters will allow a collision to occur.\n     * See `body.collisionFilter` for more information.\n     * @method canCollide\n     * @param {} filterA\n     * @param {} filterB\n     * @return {bool} `true` if collision can occur\n     */\n    Detector.canCollide = function(filterA, filterB) {\n        if (filterA.group === filterB.group && filterA.group !== 0)\n            return filterA.group > 0;\n\n        return (filterA.mask & filterB.category) !== 0 && (filterB.mask & filterA.category) !== 0;\n    };\n\n})();\n\n},{\"../geometry/Bounds\":26,\"./Pair\":7,\"./SAT\":11}],6:[function(_dereq_,module,exports){\n/**\n* The `Matter.Grid` module contains methods for creating and manipulating collision broadphase grid structures.\n*\n* @class Grid\n*/\n\nvar Grid = {};\n\nmodule.exports = Grid;\n\nvar Pair = _dereq_('./Pair');\nvar Detector = _dereq_('./Detector');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a new grid.\n     * @method create\n     * @param {} options\n     * @return {grid} A new grid\n     */\n    Grid.create = function(options) {\n        var defaults = {\n            controller: Grid,\n            detector: Detector.collisions,\n            buckets: {},\n            pairs: {},\n            pairsList: [],\n            bucketWidth: 48,\n            bucketHeight: 48\n        };\n\n        return Common.extend(defaults, options);\n    };\n\n    /**\n     * The width of a single grid bucket.\n     *\n     * @property bucketWidth\n     * @type number\n     * @default 48\n     */\n\n    /**\n     * The height of a single grid bucket.\n     *\n     * @property bucketHeight\n     * @type number\n     * @default 48\n     */\n\n    /**\n     * Updates the grid.\n     * @method update\n     * @param {grid} grid\n     * @param {body[]} bodies\n     * @param {engine} engine\n     * @param {boolean} forceUpdate\n     */\n    Grid.update = function(grid, bodies, engine, forceUpdate) {\n        var i, col, row,\n            world = engine.world,\n            buckets = grid.buckets,\n            bucket,\n            bucketId,\n            gridChanged = false;\n\n\n        for (i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.isSleeping && !forceUpdate)\n                continue;\n\n            // don't update out of world bodies\n            if (body.bounds.max.x < world.bounds.min.x || body.bounds.min.x > world.bounds.max.x\n                || body.bounds.max.y < world.bounds.min.y || body.bounds.min.y > world.bounds.max.y)\n                continue;\n\n            var newRegion = Grid._getRegion(grid, body);\n\n            // if the body has changed grid region\n            if (!body.region || newRegion.id !== body.region.id || forceUpdate) {\n\n\n                if (!body.region || forceUpdate)\n                    body.region = newRegion;\n\n                var union = Grid._regionUnion(newRegion, body.region);\n\n                // update grid buckets affected by region change\n                // iterate over the union of both regions\n                for (col = union.startCol; col <= union.endCol; col++) {\n                    for (row = union.startRow; row <= union.endRow; row++) {\n                        bucketId = Grid._getBucketId(col, row);\n                        bucket = buckets[bucketId];\n\n                        var isInsideNewRegion = (col >= newRegion.startCol && col <= newRegion.endCol\n                                                && row >= newRegion.startRow && row <= newRegion.endRow);\n\n                        var isInsideOldRegion = (col >= body.region.startCol && col <= body.region.endCol\n                                                && row >= body.region.startRow && row <= body.region.endRow);\n\n                        // remove from old region buckets\n                        if (!isInsideNewRegion && isInsideOldRegion) {\n                            if (isInsideOldRegion) {\n                                if (bucket)\n                                    Grid._bucketRemoveBody(grid, bucket, body);\n                            }\n                        }\n\n                        // add to new region buckets\n                        if (body.region === newRegion || (isInsideNewRegion && !isInsideOldRegion) || forceUpdate) {\n                            if (!bucket)\n                                bucket = Grid._createBucket(buckets, bucketId);\n                            Grid._bucketAddBody(grid, bucket, body);\n                        }\n                    }\n                }\n\n                // set the new region\n                body.region = newRegion;\n\n                // flag changes so we can update pairs\n                gridChanged = true;\n            }\n        }\n\n        // update pairs list only if pairs changed (i.e. a body changed region)\n        if (gridChanged)\n            grid.pairsList = Grid._createActivePairsList(grid);\n    };\n\n    /**\n     * Clears the grid.\n     * @method clear\n     * @param {grid} grid\n     */\n    Grid.clear = function(grid) {\n        grid.buckets = {};\n        grid.pairs = {};\n        grid.pairsList = [];\n    };\n\n    /**\n     * Finds the union of two regions.\n     * @method _regionUnion\n     * @private\n     * @param {} regionA\n     * @param {} regionB\n     * @return {} region\n     */\n    Grid._regionUnion = function(regionA, regionB) {\n        var startCol = Math.min(regionA.startCol, regionB.startCol),\n            endCol = Math.max(regionA.endCol, regionB.endCol),\n            startRow = Math.min(regionA.startRow, regionB.startRow),\n            endRow = Math.max(regionA.endRow, regionB.endRow);\n\n        return Grid._createRegion(startCol, endCol, startRow, endRow);\n    };\n\n    /**\n     * Gets the region a given body falls in for a given grid.\n     * @method _getRegion\n     * @private\n     * @param {} grid\n     * @param {} body\n     * @return {} region\n     */\n    Grid._getRegion = function(grid, body) {\n        var bounds = body.bounds,\n            startCol = Math.floor(bounds.min.x / grid.bucketWidth),\n            endCol = Math.floor(bounds.max.x / grid.bucketWidth),\n            startRow = Math.floor(bounds.min.y / grid.bucketHeight),\n            endRow = Math.floor(bounds.max.y / grid.bucketHeight);\n\n        return Grid._createRegion(startCol, endCol, startRow, endRow);\n    };\n\n    /**\n     * Creates a region.\n     * @method _createRegion\n     * @private\n     * @param {} startCol\n     * @param {} endCol\n     * @param {} startRow\n     * @param {} endRow\n     * @return {} region\n     */\n    Grid._createRegion = function(startCol, endCol, startRow, endRow) {\n        return { \n            id: startCol + ',' + endCol + ',' + startRow + ',' + endRow,\n            startCol: startCol, \n            endCol: endCol, \n            startRow: startRow, \n            endRow: endRow \n        };\n    };\n\n    /**\n     * Gets the bucket id at the given position.\n     * @method _getBucketId\n     * @private\n     * @param {} column\n     * @param {} row\n     * @return {string} bucket id\n     */\n    Grid._getBucketId = function(column, row) {\n        return 'C' + column + 'R' + row;\n    };\n\n    /**\n     * Creates a bucket.\n     * @method _createBucket\n     * @private\n     * @param {} buckets\n     * @param {} bucketId\n     * @return {} bucket\n     */\n    Grid._createBucket = function(buckets, bucketId) {\n        var bucket = buckets[bucketId] = [];\n        return bucket;\n    };\n\n    /**\n     * Adds a body to a bucket.\n     * @method _bucketAddBody\n     * @private\n     * @param {} grid\n     * @param {} bucket\n     * @param {} body\n     */\n    Grid._bucketAddBody = function(grid, bucket, body) {\n        // add new pairs\n        for (var i = 0; i < bucket.length; i++) {\n            var bodyB = bucket[i];\n\n            if (body.id === bodyB.id || (body.isStatic && bodyB.isStatic))\n                continue;\n\n            // keep track of the number of buckets the pair exists in\n            // important for Grid.update to work\n            var pairId = Pair.id(body, bodyB),\n                pair = grid.pairs[pairId];\n\n            if (pair) {\n                pair[2] += 1;\n            } else {\n                grid.pairs[pairId] = [body, bodyB, 1];\n            }\n        }\n\n        // add to bodies (after pairs, otherwise pairs with self)\n        bucket.push(body);\n    };\n\n    /**\n     * Removes a body from a bucket.\n     * @method _bucketRemoveBody\n     * @private\n     * @param {} grid\n     * @param {} bucket\n     * @param {} body\n     */\n    Grid._bucketRemoveBody = function(grid, bucket, body) {\n        // remove from bucket\n        bucket.splice(Common.indexOf(bucket, body), 1);\n\n        // update pair counts\n        for (var i = 0; i < bucket.length; i++) {\n            // keep track of the number of buckets the pair exists in\n            // important for _createActivePairsList to work\n            var bodyB = bucket[i],\n                pairId = Pair.id(body, bodyB),\n                pair = grid.pairs[pairId];\n\n            if (pair)\n                pair[2] -= 1;\n        }\n    };\n\n    /**\n     * Generates a list of the active pairs in the grid.\n     * @method _createActivePairsList\n     * @private\n     * @param {} grid\n     * @return [] pairs\n     */\n    Grid._createActivePairsList = function(grid) {\n        var pairKeys,\n            pair,\n            pairs = [];\n\n        // grid.pairs is used as a hashmap\n        pairKeys = Common.keys(grid.pairs);\n\n        // iterate over grid.pairs\n        for (var k = 0; k < pairKeys.length; k++) {\n            pair = grid.pairs[pairKeys[k]];\n\n            // if pair exists in at least one bucket\n            // it is a pair that needs further collision testing so push it\n            if (pair[2] > 0) {\n                pairs.push(pair);\n            } else {\n                delete grid.pairs[pairKeys[k]];\n            }\n        }\n\n        return pairs;\n    };\n    \n})();\n\n},{\"../core/Common\":14,\"./Detector\":5,\"./Pair\":7}],7:[function(_dereq_,module,exports){\n/**\n* The `Matter.Pair` module contains methods for creating and manipulating collision pairs.\n*\n* @class Pair\n*/\n\nvar Pair = {};\n\nmodule.exports = Pair;\n\nvar Contact = _dereq_('./Contact');\n\n(function() {\n    \n    /**\n     * Creates a pair.\n     * @method create\n     * @param {collision} collision\n     * @param {number} timestamp\n     * @return {pair} A new pair\n     */\n    Pair.create = function(collision, timestamp) {\n        var bodyA = collision.bodyA,\n            bodyB = collision.bodyB,\n            parentA = collision.parentA,\n            parentB = collision.parentB;\n\n        var pair = {\n            id: Pair.id(bodyA, bodyB),\n            bodyA: bodyA,\n            bodyB: bodyB,\n            contacts: {},\n            activeContacts: [],\n            separation: 0,\n            isActive: true,\n            isSensor: bodyA.isSensor || bodyB.isSensor,\n            timeCreated: timestamp,\n            timeUpdated: timestamp,\n            inverseMass: parentA.inverseMass + parentB.inverseMass,\n            friction: Math.min(parentA.friction, parentB.friction),\n            frictionStatic: Math.max(parentA.frictionStatic, parentB.frictionStatic),\n            restitution: Math.max(parentA.restitution, parentB.restitution),\n            slop: Math.max(parentA.slop, parentB.slop)\n        };\n\n        Pair.update(pair, collision, timestamp);\n\n        return pair;\n    };\n\n    /**\n     * Updates a pair given a collision.\n     * @method update\n     * @param {pair} pair\n     * @param {collision} collision\n     * @param {number} timestamp\n     */\n    Pair.update = function(pair, collision, timestamp) {\n        var contacts = pair.contacts,\n            supports = collision.supports,\n            activeContacts = pair.activeContacts,\n            parentA = collision.parentA,\n            parentB = collision.parentB;\n        \n        pair.collision = collision;\n        pair.inverseMass = parentA.inverseMass + parentB.inverseMass;\n        pair.friction = Math.min(parentA.friction, parentB.friction);\n        pair.frictionStatic = Math.max(parentA.frictionStatic, parentB.frictionStatic);\n        pair.restitution = Math.max(parentA.restitution, parentB.restitution);\n        pair.slop = Math.max(parentA.slop, parentB.slop);\n        activeContacts.length = 0;\n        \n        if (collision.collided) {\n            for (var i = 0; i < supports.length; i++) {\n                var support = supports[i],\n                    contactId = Contact.id(support),\n                    contact = contacts[contactId];\n\n                if (contact) {\n                    activeContacts.push(contact);\n                } else {\n                    activeContacts.push(contacts[contactId] = Contact.create(support));\n                }\n            }\n\n            pair.separation = collision.depth;\n            Pair.setActive(pair, true, timestamp);\n        } else {\n            if (pair.isActive === true)\n                Pair.setActive(pair, false, timestamp);\n        }\n    };\n    \n    /**\n     * Set a pair as active or inactive.\n     * @method setActive\n     * @param {pair} pair\n     * @param {bool} isActive\n     * @param {number} timestamp\n     */\n    Pair.setActive = function(pair, isActive, timestamp) {\n        if (isActive) {\n            pair.isActive = true;\n            pair.timeUpdated = timestamp;\n        } else {\n            pair.isActive = false;\n            pair.activeContacts.length = 0;\n        }\n    };\n\n    /**\n     * Get the id for the given pair.\n     * @method id\n     * @param {body} bodyA\n     * @param {body} bodyB\n     * @return {string} Unique pairId\n     */\n    Pair.id = function(bodyA, bodyB) {\n        if (bodyA.id < bodyB.id) {\n            return 'A' + bodyA.id + 'B' + bodyB.id;\n        } else {\n            return 'A' + bodyB.id + 'B' + bodyA.id;\n        }\n    };\n\n})();\n\n},{\"./Contact\":4}],8:[function(_dereq_,module,exports){\n/**\n* The `Matter.Pairs` module contains methods for creating and manipulating collision pair sets.\n*\n* @class Pairs\n*/\n\nvar Pairs = {};\n\nmodule.exports = Pairs;\n\nvar Pair = _dereq_('./Pair');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n    \n    Pairs._pairMaxIdleLife = 1000;\n\n    /**\n     * Creates a new pairs structure.\n     * @method create\n     * @param {object} options\n     * @return {pairs} A new pairs structure\n     */\n    Pairs.create = function(options) {\n        return Common.extend({ \n            table: {},\n            list: [],\n            collisionStart: [],\n            collisionActive: [],\n            collisionEnd: []\n        }, options);\n    };\n\n    /**\n     * Updates pairs given a list of collisions.\n     * @method update\n     * @param {object} pairs\n     * @param {collision[]} collisions\n     * @param {number} timestamp\n     */\n    Pairs.update = function(pairs, collisions, timestamp) {\n        var pairsList = pairs.list,\n            pairsTable = pairs.table,\n            collisionStart = pairs.collisionStart,\n            collisionEnd = pairs.collisionEnd,\n            collisionActive = pairs.collisionActive,\n            activePairIds = [],\n            collision,\n            pairId,\n            pair,\n            i;\n\n        // clear collision state arrays, but maintain old reference\n        collisionStart.length = 0;\n        collisionEnd.length = 0;\n        collisionActive.length = 0;\n\n        for (i = 0; i < collisions.length; i++) {\n            collision = collisions[i];\n\n            if (collision.collided) {\n                pairId = Pair.id(collision.bodyA, collision.bodyB);\n                activePairIds.push(pairId);\n\n                pair = pairsTable[pairId];\n                \n                if (pair) {\n                    // pair already exists (but may or may not be active)\n                    if (pair.isActive) {\n                        // pair exists and is active\n                        collisionActive.push(pair);\n                    } else {\n                        // pair exists but was inactive, so a collision has just started again\n                        collisionStart.push(pair);\n                    }\n\n                    // update the pair\n                    Pair.update(pair, collision, timestamp);\n                } else {\n                    // pair did not exist, create a new pair\n                    pair = Pair.create(collision, timestamp);\n                    pairsTable[pairId] = pair;\n\n                    // push the new pair\n                    collisionStart.push(pair);\n                    pairsList.push(pair);\n                }\n            }\n        }\n\n        // deactivate previously active pairs that are now inactive\n        for (i = 0; i < pairsList.length; i++) {\n            pair = pairsList[i];\n            if (pair.isActive && Common.indexOf(activePairIds, pair.id) === -1) {\n                Pair.setActive(pair, false, timestamp);\n                collisionEnd.push(pair);\n            }\n        }\n    };\n    \n    /**\n     * Finds and removes pairs that have been inactive for a set amount of time.\n     * @method removeOld\n     * @param {object} pairs\n     * @param {number} timestamp\n     */\n    Pairs.removeOld = function(pairs, timestamp) {\n        var pairsList = pairs.list,\n            pairsTable = pairs.table,\n            indexesToRemove = [],\n            pair,\n            collision,\n            pairIndex,\n            i;\n\n        for (i = 0; i < pairsList.length; i++) {\n            pair = pairsList[i];\n            collision = pair.collision;\n            \n            // never remove sleeping pairs\n            if (collision.bodyA.isSleeping || collision.bodyB.isSleeping) {\n                pair.timeUpdated = timestamp;\n                continue;\n            }\n\n            // if pair is inactive for too long, mark it to be removed\n            if (timestamp - pair.timeUpdated > Pairs._pairMaxIdleLife) {\n                indexesToRemove.push(i);\n            }\n        }\n\n        // remove marked pairs\n        for (i = 0; i < indexesToRemove.length; i++) {\n            pairIndex = indexesToRemove[i] - i;\n            pair = pairsList[pairIndex];\n            delete pairsTable[pair.id];\n            pairsList.splice(pairIndex, 1);\n        }\n    };\n\n    /**\n     * Clears the given pairs structure.\n     * @method clear\n     * @param {pairs} pairs\n     * @return {pairs} pairs\n     */\n    Pairs.clear = function(pairs) {\n        pairs.table = {};\n        pairs.list.length = 0;\n        pairs.collisionStart.length = 0;\n        pairs.collisionActive.length = 0;\n        pairs.collisionEnd.length = 0;\n        return pairs;\n    };\n\n})();\n\n},{\"../core/Common\":14,\"./Pair\":7}],9:[function(_dereq_,module,exports){\n/**\n* The `Matter.Query` module contains methods for performing collision queries.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Query\n*/\n\nvar Query = {};\n\nmodule.exports = Query;\n\nvar Vector = _dereq_('../geometry/Vector');\nvar SAT = _dereq_('./SAT');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Bodies = _dereq_('../factory/Bodies');\nvar Vertices = _dereq_('../geometry/Vertices');\n\n(function() {\n\n    /**\n     * Returns a list of collisions between `body` and `bodies`.\n     * @method collides\n     * @param {body} body\n     * @param {body[]} bodies\n     * @return {object[]} Collisions\n     */\n    Query.collides = function(body, bodies) {\n        var collisions = [];\n\n        for (var i = 0; i < bodies.length; i++) {\n            var bodyA = bodies[i];\n            \n            if (Bounds.overlaps(bodyA.bounds, body.bounds)) {\n                for (var j = bodyA.parts.length === 1 ? 0 : 1; j < bodyA.parts.length; j++) {\n                    var part = bodyA.parts[j];\n\n                    if (Bounds.overlaps(part.bounds, body.bounds)) {\n                        var collision = SAT.collides(part, body);\n\n                        if (collision.collided) {\n                            collisions.push(collision);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n\n        return collisions;\n    };\n\n    /**\n     * Casts a ray segment against a set of bodies and returns all collisions, ray width is optional. Intersection points are not provided.\n     * @method ray\n     * @param {body[]} bodies\n     * @param {vector} startPoint\n     * @param {vector} endPoint\n     * @param {number} [rayWidth]\n     * @return {object[]} Collisions\n     */\n    Query.ray = function(bodies, startPoint, endPoint, rayWidth) {\n        rayWidth = rayWidth || 1e-100;\n\n        var rayAngle = Vector.angle(startPoint, endPoint),\n            rayLength = Vector.magnitude(Vector.sub(startPoint, endPoint)),\n            rayX = (endPoint.x + startPoint.x) * 0.5,\n            rayY = (endPoint.y + startPoint.y) * 0.5,\n            ray = Bodies.rectangle(rayX, rayY, rayLength, rayWidth, { angle: rayAngle }),\n            collisions = Query.collides(ray, bodies);\n\n        for (var i = 0; i < collisions.length; i += 1) {\n            var collision = collisions[i];\n            collision.body = collision.bodyB = collision.bodyA;            \n        }\n\n        return collisions;\n    };\n\n    /**\n     * Returns all bodies whose bounds are inside (or outside if set) the given set of bounds, from the given set of bodies.\n     * @method region\n     * @param {body[]} bodies\n     * @param {bounds} bounds\n     * @param {bool} [outside=false]\n     * @return {body[]} The bodies matching the query\n     */\n    Query.region = function(bodies, bounds, outside) {\n        var result = [];\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                overlaps = Bounds.overlaps(body.bounds, bounds);\n            if ((overlaps && !outside) || (!overlaps && outside))\n                result.push(body);\n        }\n\n        return result;\n    };\n\n    /**\n     * Returns all bodies whose vertices contain the given point, from the given set of bodies.\n     * @method point\n     * @param {body[]} bodies\n     * @param {vector} point\n     * @return {body[]} The bodies matching the query\n     */\n    Query.point = function(bodies, point) {\n        var result = [];\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n            \n            if (Bounds.contains(body.bounds, point)) {\n                for (var j = body.parts.length === 1 ? 0 : 1; j < body.parts.length; j++) {\n                    var part = body.parts[j];\n\n                    if (Bounds.contains(part.bounds, point)\n                        && Vertices.contains(part.vertices, point)) {\n                        result.push(body);\n                        break;\n                    }\n                }\n            }\n        }\n\n        return result;\n    };\n\n})();\n\n},{\"../factory/Bodies\":23,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29,\"./SAT\":11}],10:[function(_dereq_,module,exports){\n/**\n* The `Matter.Resolver` module contains methods for resolving collision pairs.\n*\n* @class Resolver\n*/\n\nvar Resolver = {};\n\nmodule.exports = Resolver;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Vector = _dereq_('../geometry/Vector');\nvar Common = _dereq_('../core/Common');\nvar Bounds = _dereq_('../geometry/Bounds');\n\n(function() {\n\n    Resolver._restingThresh = 4;\n    Resolver._restingThreshTangent = 6;\n    Resolver._positionDampen = 0.9;\n    Resolver._positionWarming = 0.8;\n    Resolver._frictionNormalMultiplier = 5;\n\n    /**\n     * Prepare pairs for position solving.\n     * @method preSolvePosition\n     * @param {pair[]} pairs\n     */\n    Resolver.preSolvePosition = function(pairs) {\n        var i,\n            pair,\n            activeCount;\n\n        // find total contacts on each body\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n            \n            if (!pair.isActive)\n                continue;\n            \n            activeCount = pair.activeContacts.length;\n            pair.collision.parentA.totalContacts += activeCount;\n            pair.collision.parentB.totalContacts += activeCount;\n        }\n    };\n\n    /**\n     * Find a solution for pair positions.\n     * @method solvePosition\n     * @param {pair[]} pairs\n     * @param {number} timeScale\n     */\n    Resolver.solvePosition = function(pairs, timeScale) {\n        var i,\n            pair,\n            collision,\n            bodyA,\n            bodyB,\n            normal,\n            bodyBtoA,\n            contactShare,\n            positionImpulse,\n            contactCount = {},\n            tempA = Vector._temp[0],\n            tempB = Vector._temp[1],\n            tempC = Vector._temp[2],\n            tempD = Vector._temp[3];\n\n        // find impulses required to resolve penetration\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n            \n            if (!pair.isActive || pair.isSensor)\n                continue;\n\n            collision = pair.collision;\n            bodyA = collision.parentA;\n            bodyB = collision.parentB;\n            normal = collision.normal;\n\n            // get current separation between body edges involved in collision\n            bodyBtoA = Vector.sub(Vector.add(bodyB.positionImpulse, bodyB.position, tempA), \n                                    Vector.add(bodyA.positionImpulse, \n                                        Vector.sub(bodyB.position, collision.penetration, tempB), tempC), tempD);\n\n            pair.separation = Vector.dot(normal, bodyBtoA);\n        }\n        \n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive || pair.isSensor)\n                continue;\n            \n            collision = pair.collision;\n            bodyA = collision.parentA;\n            bodyB = collision.parentB;\n            normal = collision.normal;\n            positionImpulse = (pair.separation - pair.slop) * timeScale;\n\n            if (bodyA.isStatic || bodyB.isStatic)\n                positionImpulse *= 2;\n            \n            if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                contactShare = Resolver._positionDampen / bodyA.totalContacts;\n                bodyA.positionImpulse.x += normal.x * positionImpulse * contactShare;\n                bodyA.positionImpulse.y += normal.y * positionImpulse * contactShare;\n            }\n\n            if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                contactShare = Resolver._positionDampen / bodyB.totalContacts;\n                bodyB.positionImpulse.x -= normal.x * positionImpulse * contactShare;\n                bodyB.positionImpulse.y -= normal.y * positionImpulse * contactShare;\n            }\n        }\n    };\n\n    /**\n     * Apply position resolution.\n     * @method postSolvePosition\n     * @param {body[]} bodies\n     */\n    Resolver.postSolvePosition = function(bodies) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            // reset contact count\n            body.totalContacts = 0;\n\n            if (body.positionImpulse.x !== 0 || body.positionImpulse.y !== 0) {\n                // update body geometry\n                for (var j = 0; j < body.parts.length; j++) {\n                    var part = body.parts[j];\n                    Vertices.translate(part.vertices, body.positionImpulse);\n                    Bounds.update(part.bounds, part.vertices, body.velocity);\n                    part.position.x += body.positionImpulse.x;\n                    part.position.y += body.positionImpulse.y;\n                }\n\n                // move the body without changing velocity\n                body.positionPrev.x += body.positionImpulse.x;\n                body.positionPrev.y += body.positionImpulse.y;\n\n                if (Vector.dot(body.positionImpulse, body.velocity) < 0) {\n                    // reset cached impulse if the body has velocity along it\n                    body.positionImpulse.x = 0;\n                    body.positionImpulse.y = 0;\n                } else {\n                    // warm the next iteration\n                    body.positionImpulse.x *= Resolver._positionWarming;\n                    body.positionImpulse.y *= Resolver._positionWarming;\n                }\n            }\n        }\n    };\n\n    /**\n     * Prepare pairs for velocity solving.\n     * @method preSolveVelocity\n     * @param {pair[]} pairs\n     */\n    Resolver.preSolveVelocity = function(pairs) {\n        var i,\n            j,\n            pair,\n            contacts,\n            collision,\n            bodyA,\n            bodyB,\n            normal,\n            tangent,\n            contact,\n            contactVertex,\n            normalImpulse,\n            tangentImpulse,\n            offset,\n            impulse = Vector._temp[0],\n            tempA = Vector._temp[1];\n        \n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n            \n            if (!pair.isActive || pair.isSensor)\n                continue;\n            \n            contacts = pair.activeContacts;\n            collision = pair.collision;\n            bodyA = collision.parentA;\n            bodyB = collision.parentB;\n            normal = collision.normal;\n            tangent = collision.tangent;\n\n            // resolve each contact\n            for (j = 0; j < contacts.length; j++) {\n                contact = contacts[j];\n                contactVertex = contact.vertex;\n                normalImpulse = contact.normalImpulse;\n                tangentImpulse = contact.tangentImpulse;\n\n                if (normalImpulse !== 0 || tangentImpulse !== 0) {\n                    // total impulse from contact\n                    impulse.x = (normal.x * normalImpulse) + (tangent.x * tangentImpulse);\n                    impulse.y = (normal.y * normalImpulse) + (tangent.y * tangentImpulse);\n                    \n                    // apply impulse from contact\n                    if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                        offset = Vector.sub(contactVertex, bodyA.position, tempA);\n                        bodyA.positionPrev.x += impulse.x * bodyA.inverseMass;\n                        bodyA.positionPrev.y += impulse.y * bodyA.inverseMass;\n                        bodyA.anglePrev += Vector.cross(offset, impulse) * bodyA.inverseInertia;\n                    }\n\n                    if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                        offset = Vector.sub(contactVertex, bodyB.position, tempA);\n                        bodyB.positionPrev.x -= impulse.x * bodyB.inverseMass;\n                        bodyB.positionPrev.y -= impulse.y * bodyB.inverseMass;\n                        bodyB.anglePrev -= Vector.cross(offset, impulse) * bodyB.inverseInertia;\n                    }\n                }\n            }\n        }\n    };\n\n    /**\n     * Find a solution for pair velocities.\n     * @method solveVelocity\n     * @param {pair[]} pairs\n     * @param {number} timeScale\n     */\n    Resolver.solveVelocity = function(pairs, timeScale) {\n        var timeScaleSquared = timeScale * timeScale,\n            impulse = Vector._temp[0],\n            tempA = Vector._temp[1],\n            tempB = Vector._temp[2],\n            tempC = Vector._temp[3],\n            tempD = Vector._temp[4],\n            tempE = Vector._temp[5];\n        \n        for (var i = 0; i < pairs.length; i++) {\n            var pair = pairs[i];\n            \n            if (!pair.isActive || pair.isSensor)\n                continue;\n            \n            var collision = pair.collision,\n                bodyA = collision.parentA,\n                bodyB = collision.parentB,\n                normal = collision.normal,\n                tangent = collision.tangent,\n                contacts = pair.activeContacts,\n                contactShare = 1 / contacts.length;\n\n            // update body velocities\n            bodyA.velocity.x = bodyA.position.x - bodyA.positionPrev.x;\n            bodyA.velocity.y = bodyA.position.y - bodyA.positionPrev.y;\n            bodyB.velocity.x = bodyB.position.x - bodyB.positionPrev.x;\n            bodyB.velocity.y = bodyB.position.y - bodyB.positionPrev.y;\n            bodyA.angularVelocity = bodyA.angle - bodyA.anglePrev;\n            bodyB.angularVelocity = bodyB.angle - bodyB.anglePrev;\n\n            // resolve each contact\n            for (var j = 0; j < contacts.length; j++) {\n                var contact = contacts[j],\n                    contactVertex = contact.vertex,\n                    offsetA = Vector.sub(contactVertex, bodyA.position, tempA),\n                    offsetB = Vector.sub(contactVertex, bodyB.position, tempB),\n                    velocityPointA = Vector.add(bodyA.velocity, Vector.mult(Vector.perp(offsetA), bodyA.angularVelocity), tempC),\n                    velocityPointB = Vector.add(bodyB.velocity, Vector.mult(Vector.perp(offsetB), bodyB.angularVelocity), tempD), \n                    relativeVelocity = Vector.sub(velocityPointA, velocityPointB, tempE),\n                    normalVelocity = Vector.dot(normal, relativeVelocity);\n\n                var tangentVelocity = Vector.dot(tangent, relativeVelocity),\n                    tangentSpeed = Math.abs(tangentVelocity),\n                    tangentVelocityDirection = Common.sign(tangentVelocity);\n\n                // raw impulses\n                var normalImpulse = (1 + pair.restitution) * normalVelocity,\n                    normalForce = Common.clamp(pair.separation + normalVelocity, 0, 1) * Resolver._frictionNormalMultiplier;\n\n                // coulomb friction\n                var tangentImpulse = tangentVelocity,\n                    maxFriction = Infinity;\n\n                if (tangentSpeed > pair.friction * pair.frictionStatic * normalForce * timeScaleSquared) {\n                    maxFriction = tangentSpeed;\n                    tangentImpulse = Common.clamp(\n                        pair.friction * tangentVelocityDirection * timeScaleSquared,\n                        -maxFriction, maxFriction\n                    );\n                }\n\n                // modify impulses accounting for mass, inertia and offset\n                var oAcN = Vector.cross(offsetA, normal),\n                    oBcN = Vector.cross(offsetB, normal),\n                    share = contactShare / (bodyA.inverseMass + bodyB.inverseMass + bodyA.inverseInertia * oAcN * oAcN  + bodyB.inverseInertia * oBcN * oBcN);\n\n                normalImpulse *= share;\n                tangentImpulse *= share;\n\n                // handle high velocity and resting collisions separately\n                if (normalVelocity < 0 && normalVelocity * normalVelocity > Resolver._restingThresh * timeScaleSquared) {\n                    // high normal velocity so clear cached contact normal impulse\n                    contact.normalImpulse = 0;\n                } else {\n                    // solve resting collision constraints using Erin Catto's method (GDC08)\n                    // impulse constraint tends to 0\n                    var contactNormalImpulse = contact.normalImpulse;\n                    contact.normalImpulse = Math.min(contact.normalImpulse + normalImpulse, 0);\n                    normalImpulse = contact.normalImpulse - contactNormalImpulse;\n                }\n\n                // handle high velocity and resting collisions separately\n                if (tangentVelocity * tangentVelocity > Resolver._restingThreshTangent * timeScaleSquared) {\n                    // high tangent velocity so clear cached contact tangent impulse\n                    contact.tangentImpulse = 0;\n                } else {\n                    // solve resting collision constraints using Erin Catto's method (GDC08)\n                    // tangent impulse tends to -tangentSpeed or +tangentSpeed\n                    var contactTangentImpulse = contact.tangentImpulse;\n                    contact.tangentImpulse = Common.clamp(contact.tangentImpulse + tangentImpulse, -maxFriction, maxFriction);\n                    tangentImpulse = contact.tangentImpulse - contactTangentImpulse;\n                }\n\n                // total impulse from contact\n                impulse.x = (normal.x * normalImpulse) + (tangent.x * tangentImpulse);\n                impulse.y = (normal.y * normalImpulse) + (tangent.y * tangentImpulse);\n                \n                // apply impulse from contact\n                if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                    bodyA.positionPrev.x += impulse.x * bodyA.inverseMass;\n                    bodyA.positionPrev.y += impulse.y * bodyA.inverseMass;\n                    bodyA.anglePrev += Vector.cross(offsetA, impulse) * bodyA.inverseInertia;\n                }\n\n                if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                    bodyB.positionPrev.x -= impulse.x * bodyB.inverseMass;\n                    bodyB.positionPrev.y -= impulse.y * bodyB.inverseMass;\n                    bodyB.anglePrev -= Vector.cross(offsetB, impulse) * bodyB.inverseInertia;\n                }\n            }\n        }\n    };\n\n})();\n\n},{\"../core/Common\":14,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29}],11:[function(_dereq_,module,exports){\n/**\n* The `Matter.SAT` module contains methods for detecting collisions using the Separating Axis Theorem.\n*\n* @class SAT\n*/\n\n// TODO: true circles and curves\n\nvar SAT = {};\n\nmodule.exports = SAT;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Vector = _dereq_('../geometry/Vector');\n\n(function() {\n\n    /**\n     * Detect collision between two bodies using the Separating Axis Theorem.\n     * @method collides\n     * @param {body} bodyA\n     * @param {body} bodyB\n     * @param {collision} previousCollision\n     * @return {collision} collision\n     */\n    SAT.collides = function(bodyA, bodyB, previousCollision) {\n        var overlapAB,\n            overlapBA, \n            minOverlap,\n            collision,\n            canReusePrevCol = false;\n\n        if (previousCollision) {\n            // estimate total motion\n            var parentA = bodyA.parent,\n                parentB = bodyB.parent,\n                motion = parentA.speed * parentA.speed + parentA.angularSpeed * parentA.angularSpeed\n                       + parentB.speed * parentB.speed + parentB.angularSpeed * parentB.angularSpeed;\n\n            // we may be able to (partially) reuse collision result \n            // but only safe if collision was resting\n            canReusePrevCol = previousCollision && previousCollision.collided && motion < 0.2;\n\n            // reuse collision object\n            collision = previousCollision;\n        } else {\n            collision = { collided: false, bodyA: bodyA, bodyB: bodyB };\n        }\n\n        if (previousCollision && canReusePrevCol) {\n            // if we can reuse the collision result\n            // we only need to test the previously found axis\n            var axisBodyA = collision.axisBody,\n                axisBodyB = axisBodyA === bodyA ? bodyB : bodyA,\n                axes = [axisBodyA.axes[previousCollision.axisNumber]];\n\n            minOverlap = SAT._overlapAxes(axisBodyA.vertices, axisBodyB.vertices, axes);\n            collision.reused = true;\n\n            if (minOverlap.overlap <= 0) {\n                collision.collided = false;\n                return collision;\n            }\n        } else {\n            // if we can't reuse a result, perform a full SAT test\n\n            overlapAB = SAT._overlapAxes(bodyA.vertices, bodyB.vertices, bodyA.axes);\n\n            if (overlapAB.overlap <= 0) {\n                collision.collided = false;\n                return collision;\n            }\n\n            overlapBA = SAT._overlapAxes(bodyB.vertices, bodyA.vertices, bodyB.axes);\n\n            if (overlapBA.overlap <= 0) {\n                collision.collided = false;\n                return collision;\n            }\n\n            if (overlapAB.overlap < overlapBA.overlap) {\n                minOverlap = overlapAB;\n                collision.axisBody = bodyA;\n            } else {\n                minOverlap = overlapBA;\n                collision.axisBody = bodyB;\n            }\n\n            // important for reuse later\n            collision.axisNumber = minOverlap.axisNumber;\n        }\n\n        collision.bodyA = bodyA.id < bodyB.id ? bodyA : bodyB;\n        collision.bodyB = bodyA.id < bodyB.id ? bodyB : bodyA;\n        collision.collided = true;\n        collision.depth = minOverlap.overlap;\n        collision.parentA = collision.bodyA.parent;\n        collision.parentB = collision.bodyB.parent;\n        \n        bodyA = collision.bodyA;\n        bodyB = collision.bodyB;\n\n        // ensure normal is facing away from bodyA\n        if (Vector.dot(minOverlap.axis, Vector.sub(bodyB.position, bodyA.position)) < 0) {\n            collision.normal = {\n                x: minOverlap.axis.x,\n                y: minOverlap.axis.y\n            };\n        } else {\n            collision.normal = {\n                x: -minOverlap.axis.x,\n                y: -minOverlap.axis.y\n            };\n        }\n\n        collision.tangent = Vector.perp(collision.normal);\n\n        collision.penetration = collision.penetration || {};\n        collision.penetration.x = collision.normal.x * collision.depth;\n        collision.penetration.y = collision.normal.y * collision.depth; \n\n        // find support points, there is always either exactly one or two\n        var verticesB = SAT._findSupports(bodyA, bodyB, collision.normal),\n            supports = [];\n\n        // find the supports from bodyB that are inside bodyA\n        if (Vertices.contains(bodyA.vertices, verticesB[0]))\n            supports.push(verticesB[0]);\n\n        if (Vertices.contains(bodyA.vertices, verticesB[1]))\n            supports.push(verticesB[1]);\n\n        // find the supports from bodyA that are inside bodyB\n        if (supports.length < 2) {\n            var verticesA = SAT._findSupports(bodyB, bodyA, Vector.neg(collision.normal));\n                \n            if (Vertices.contains(bodyB.vertices, verticesA[0]))\n                supports.push(verticesA[0]);\n\n            if (supports.length < 2 && Vertices.contains(bodyB.vertices, verticesA[1]))\n                supports.push(verticesA[1]);\n        }\n\n        // account for the edge case of overlapping but no vertex containment\n        if (supports.length < 1)\n            supports = [verticesB[0]];\n        \n        collision.supports = supports;\n\n        return collision;\n    };\n\n    /**\n     * Find the overlap between two sets of vertices.\n     * @method _overlapAxes\n     * @private\n     * @param {} verticesA\n     * @param {} verticesB\n     * @param {} axes\n     * @return result\n     */\n    SAT._overlapAxes = function(verticesA, verticesB, axes) {\n        var projectionA = Vector._temp[0], \n            projectionB = Vector._temp[1],\n            result = { overlap: Number.MAX_VALUE },\n            overlap,\n            axis;\n\n        for (var i = 0; i < axes.length; i++) {\n            axis = axes[i];\n\n            SAT._projectToAxis(projectionA, verticesA, axis);\n            SAT._projectToAxis(projectionB, verticesB, axis);\n\n            overlap = Math.min(projectionA.max - projectionB.min, projectionB.max - projectionA.min);\n\n            if (overlap <= 0) {\n                result.overlap = overlap;\n                return result;\n            }\n\n            if (overlap < result.overlap) {\n                result.overlap = overlap;\n                result.axis = axis;\n                result.axisNumber = i;\n            }\n        }\n\n        return result;\n    };\n\n    /**\n     * Projects vertices on an axis and returns an interval.\n     * @method _projectToAxis\n     * @private\n     * @param {} projection\n     * @param {} vertices\n     * @param {} axis\n     */\n    SAT._projectToAxis = function(projection, vertices, axis) {\n        var min = Vector.dot(vertices[0], axis),\n            max = min;\n\n        for (var i = 1; i < vertices.length; i += 1) {\n            var dot = Vector.dot(vertices[i], axis);\n\n            if (dot > max) { \n                max = dot; \n            } else if (dot < min) { \n                min = dot; \n            }\n        }\n\n        projection.min = min;\n        projection.max = max;\n    };\n    \n    /**\n     * Finds supporting vertices given two bodies along a given direction using hill-climbing.\n     * @method _findSupports\n     * @private\n     * @param {} bodyA\n     * @param {} bodyB\n     * @param {} normal\n     * @return [vector]\n     */\n    SAT._findSupports = function(bodyA, bodyB, normal) {\n        var nearestDistance = Number.MAX_VALUE,\n            vertexToBody = Vector._temp[0],\n            vertices = bodyB.vertices,\n            bodyAPosition = bodyA.position,\n            distance,\n            vertex,\n            vertexA,\n            vertexB;\n\n        // find closest vertex on bodyB\n        for (var i = 0; i < vertices.length; i++) {\n            vertex = vertices[i];\n            vertexToBody.x = vertex.x - bodyAPosition.x;\n            vertexToBody.y = vertex.y - bodyAPosition.y;\n            distance = -Vector.dot(normal, vertexToBody);\n\n            if (distance < nearestDistance) {\n                nearestDistance = distance;\n                vertexA = vertex;\n            }\n        }\n\n        // find next closest vertex using the two connected to it\n        var prevIndex = vertexA.index - 1 >= 0 ? vertexA.index - 1 : vertices.length - 1;\n        vertex = vertices[prevIndex];\n        vertexToBody.x = vertex.x - bodyAPosition.x;\n        vertexToBody.y = vertex.y - bodyAPosition.y;\n        nearestDistance = -Vector.dot(normal, vertexToBody);\n        vertexB = vertex;\n\n        var nextIndex = (vertexA.index + 1) % vertices.length;\n        vertex = vertices[nextIndex];\n        vertexToBody.x = vertex.x - bodyAPosition.x;\n        vertexToBody.y = vertex.y - bodyAPosition.y;\n        distance = -Vector.dot(normal, vertexToBody);\n        if (distance < nearestDistance) {\n            vertexB = vertex;\n        }\n\n        return [vertexA, vertexB];\n    };\n\n})();\n\n},{\"../geometry/Vector\":28,\"../geometry/Vertices\":29}],12:[function(_dereq_,module,exports){\n/**\n* The `Matter.Constraint` module contains methods for creating and manipulating constraints.\n* Constraints are used for specifying that a fixed distance must be maintained between two bodies (or a body and a fixed world-space position).\n* The stiffness of constraints can be modified to create springs or elastic.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Constraint\n*/\n\nvar Constraint = {};\n\nmodule.exports = Constraint;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Vector = _dereq_('../geometry/Vector');\nvar Sleeping = _dereq_('../core/Sleeping');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Axes = _dereq_('../geometry/Axes');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    Constraint._warming = 0.4;\n    Constraint._torqueDampen = 1;\n    Constraint._minLength = 0.000001;\n\n    /**\n     * Creates a new constraint.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * To simulate a revolute constraint (or pin joint) set `length: 0` and a high `stiffness` value (e.g. `0.7` or above).\n     * If the constraint is unstable, try lowering the `stiffness` value and / or increasing `engine.constraintIterations`.\n     * For compound bodies, constraints must be applied to the parent body (not one of its parts).\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} options\n     * @return {constraint} constraint\n     */\n    Constraint.create = function(options) {\n        var constraint = options;\n\n        // if bodies defined but no points, use body centre\n        if (constraint.bodyA && !constraint.pointA)\n            constraint.pointA = { x: 0, y: 0 };\n        if (constraint.bodyB && !constraint.pointB)\n            constraint.pointB = { x: 0, y: 0 };\n\n        // calculate static length using initial world space points\n        var initialPointA = constraint.bodyA ? Vector.add(constraint.bodyA.position, constraint.pointA) : constraint.pointA,\n            initialPointB = constraint.bodyB ? Vector.add(constraint.bodyB.position, constraint.pointB) : constraint.pointB,\n            length = Vector.magnitude(Vector.sub(initialPointA, initialPointB));\n    \n        constraint.length = typeof constraint.length !== 'undefined' ? constraint.length : length;\n\n        // option defaults\n        constraint.id = constraint.id || Common.nextId();\n        constraint.label = constraint.label || 'Constraint';\n        constraint.type = 'constraint';\n        constraint.stiffness = constraint.stiffness || (constraint.length > 0 ? 1 : 0.7);\n        constraint.damping = constraint.damping || 0;\n        constraint.angularStiffness = constraint.angularStiffness || 0;\n        constraint.angleA = constraint.bodyA ? constraint.bodyA.angle : constraint.angleA;\n        constraint.angleB = constraint.bodyB ? constraint.bodyB.angle : constraint.angleB;\n        constraint.plugin = {};\n\n        // render\n        var render = {\n            visible: true,\n            lineWidth: 2,\n            strokeStyle: '#ffffff',\n            type: 'line',\n            anchors: true\n        };\n\n        if (constraint.length === 0 && constraint.stiffness > 0.1) {\n            render.type = 'pin';\n            render.anchors = false;\n        } else if (constraint.stiffness < 0.9) {\n            render.type = 'spring';\n        }\n\n        constraint.render = Common.extend(render, constraint.render);\n\n        return constraint;\n    };\n\n    /**\n     * Prepares for solving by constraint warming.\n     * @private\n     * @method preSolveAll\n     * @param {body[]} bodies\n     */\n    Constraint.preSolveAll = function(bodies) {\n        for (var i = 0; i < bodies.length; i += 1) {\n            var body = bodies[i],\n                impulse = body.constraintImpulse;\n\n            if (body.isStatic || (impulse.x === 0 && impulse.y === 0 && impulse.angle === 0)) {\n                continue;\n            }\n\n            body.position.x += impulse.x;\n            body.position.y += impulse.y;\n            body.angle += impulse.angle;\n        }\n    };\n\n    /**\n     * Solves all constraints in a list of collisions.\n     * @private\n     * @method solveAll\n     * @param {constraint[]} constraints\n     * @param {number} timeScale\n     */\n    Constraint.solveAll = function(constraints, timeScale) {\n        // Solve fixed constraints first.\n        for (var i = 0; i < constraints.length; i += 1) {\n            var constraint = constraints[i],\n                fixedA = !constraint.bodyA || (constraint.bodyA && constraint.bodyA.isStatic),\n                fixedB = !constraint.bodyB || (constraint.bodyB && constraint.bodyB.isStatic);\n\n            if (fixedA || fixedB) {\n                Constraint.solve(constraints[i], timeScale);\n            }\n        }\n\n        // Solve free constraints last.\n        for (i = 0; i < constraints.length; i += 1) {\n            constraint = constraints[i];\n            fixedA = !constraint.bodyA || (constraint.bodyA && constraint.bodyA.isStatic);\n            fixedB = !constraint.bodyB || (constraint.bodyB && constraint.bodyB.isStatic);\n\n            if (!fixedA && !fixedB) {\n                Constraint.solve(constraints[i], timeScale);\n            }\n        }\n    };\n\n    /**\n     * Solves a distance constraint with Gauss-Siedel method.\n     * @private\n     * @method solve\n     * @param {constraint} constraint\n     * @param {number} timeScale\n     */\n    Constraint.solve = function(constraint, timeScale) {\n        var bodyA = constraint.bodyA,\n            bodyB = constraint.bodyB,\n            pointA = constraint.pointA,\n            pointB = constraint.pointB;\n\n        if (!bodyA && !bodyB)\n            return;\n\n        // update reference angle\n        if (bodyA && !bodyA.isStatic) {\n            Vector.rotate(pointA, bodyA.angle - constraint.angleA, pointA);\n            constraint.angleA = bodyA.angle;\n        }\n        \n        // update reference angle\n        if (bodyB && !bodyB.isStatic) {\n            Vector.rotate(pointB, bodyB.angle - constraint.angleB, pointB);\n            constraint.angleB = bodyB.angle;\n        }\n\n        var pointAWorld = pointA,\n            pointBWorld = pointB;\n\n        if (bodyA) pointAWorld = Vector.add(bodyA.position, pointA);\n        if (bodyB) pointBWorld = Vector.add(bodyB.position, pointB);\n\n        if (!pointAWorld || !pointBWorld)\n            return;\n\n        var delta = Vector.sub(pointAWorld, pointBWorld),\n            currentLength = Vector.magnitude(delta);\n\n        // prevent singularity\n        if (currentLength < Constraint._minLength) {\n            currentLength = Constraint._minLength;\n        }\n\n        // solve distance constraint with Gauss-Siedel method\n        var difference = (currentLength - constraint.length) / currentLength,\n            stiffness = constraint.stiffness < 1 ? constraint.stiffness * timeScale : constraint.stiffness,\n            force = Vector.mult(delta, difference * stiffness),\n            massTotal = (bodyA ? bodyA.inverseMass : 0) + (bodyB ? bodyB.inverseMass : 0),\n            inertiaTotal = (bodyA ? bodyA.inverseInertia : 0) + (bodyB ? bodyB.inverseInertia : 0),\n            resistanceTotal = massTotal + inertiaTotal,\n            torque,\n            share,\n            normal,\n            normalVelocity,\n            relativeVelocity;\n\n        if (constraint.damping) {\n            var zero = Vector.create();\n            normal = Vector.div(delta, currentLength);\n\n            relativeVelocity = Vector.sub(\n                bodyB && Vector.sub(bodyB.position, bodyB.positionPrev) || zero,\n                bodyA && Vector.sub(bodyA.position, bodyA.positionPrev) || zero\n            );\n\n            normalVelocity = Vector.dot(normal, relativeVelocity);\n        }\n\n        if (bodyA && !bodyA.isStatic) {\n            share = bodyA.inverseMass / massTotal;\n\n            // keep track of applied impulses for post solving\n            bodyA.constraintImpulse.x -= force.x * share;\n            bodyA.constraintImpulse.y -= force.y * share;\n\n            // apply forces\n            bodyA.position.x -= force.x * share;\n            bodyA.position.y -= force.y * share;\n\n            // apply damping\n            if (constraint.damping) {\n                bodyA.positionPrev.x -= constraint.damping * normal.x * normalVelocity * share;\n                bodyA.positionPrev.y -= constraint.damping * normal.y * normalVelocity * share;\n            }\n\n            // apply torque\n            torque = (Vector.cross(pointA, force) / resistanceTotal) * Constraint._torqueDampen * bodyA.inverseInertia * (1 - constraint.angularStiffness);\n            bodyA.constraintImpulse.angle -= torque;\n            bodyA.angle -= torque;\n        }\n\n        if (bodyB && !bodyB.isStatic) {\n            share = bodyB.inverseMass / massTotal;\n\n            // keep track of applied impulses for post solving\n            bodyB.constraintImpulse.x += force.x * share;\n            bodyB.constraintImpulse.y += force.y * share;\n            \n            // apply forces\n            bodyB.position.x += force.x * share;\n            bodyB.position.y += force.y * share;\n\n            // apply damping\n            if (constraint.damping) {\n                bodyB.positionPrev.x += constraint.damping * normal.x * normalVelocity * share;\n                bodyB.positionPrev.y += constraint.damping * normal.y * normalVelocity * share;\n            }\n\n            // apply torque\n            torque = (Vector.cross(pointB, force) / resistanceTotal) * Constraint._torqueDampen * bodyB.inverseInertia * (1 - constraint.angularStiffness);\n            bodyB.constraintImpulse.angle += torque;\n            bodyB.angle += torque;\n        }\n\n    };\n\n    /**\n     * Performs body updates required after solving constraints.\n     * @private\n     * @method postSolveAll\n     * @param {body[]} bodies\n     */\n    Constraint.postSolveAll = function(bodies) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                impulse = body.constraintImpulse;\n\n            if (body.isStatic || (impulse.x === 0 && impulse.y === 0 && impulse.angle === 0)) {\n                continue;\n            }\n\n            Sleeping.set(body, false);\n\n            // update geometry and reset\n            for (var j = 0; j < body.parts.length; j++) {\n                var part = body.parts[j];\n                \n                Vertices.translate(part.vertices, impulse);\n\n                if (j > 0) {\n                    part.position.x += impulse.x;\n                    part.position.y += impulse.y;\n                }\n\n                if (impulse.angle !== 0) {\n                    Vertices.rotate(part.vertices, impulse.angle, body.position);\n                    Axes.rotate(part.axes, impulse.angle);\n                    if (j > 0) {\n                        Vector.rotateAbout(part.position, impulse.angle, body.position, part.position);\n                    }\n                }\n\n                Bounds.update(part.bounds, part.vertices, body.velocity);\n            }\n\n            // dampen the cached impulse for warming next step\n            impulse.angle *= Constraint._warming;\n            impulse.x *= Constraint._warming;\n            impulse.y *= Constraint._warming;\n        }\n    };\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` uniquely identifying number generated in `Composite.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"constraint\"\n     * @readOnly\n     */\n\n    /**\n     * An arbitrary `String` name to help the user identify and manage bodies.\n     *\n     * @property label\n     * @type string\n     * @default \"Constraint\"\n     */\n\n    /**\n     * An `Object` that defines the rendering properties to be consumed by the module `Matter.Render`.\n     *\n     * @property render\n     * @type object\n     */\n\n    /**\n     * A flag that indicates if the constraint should be rendered.\n     *\n     * @property render.visible\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * A `Number` that defines the line width to use when rendering the constraint outline.\n     * A value of `0` means no outline will be rendered.\n     *\n     * @property render.lineWidth\n     * @type number\n     * @default 2\n     */\n\n    /**\n     * A `String` that defines the stroke style to use when rendering the constraint outline.\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.strokeStyle\n     * @type string\n     * @default a random colour\n     */\n\n    /**\n     * A `String` that defines the constraint rendering type. \n     * The possible values are 'line', 'pin', 'spring'.\n     * An appropriate render type will be automatically chosen unless one is given in options.\n     *\n     * @property render.type\n     * @type string\n     * @default 'line'\n     */\n\n    /**\n     * A `Boolean` that defines if the constraint's anchor points should be rendered.\n     *\n     * @property render.anchors\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * The first possible `Body` that this constraint is attached to.\n     *\n     * @property bodyA\n     * @type body\n     * @default null\n     */\n\n    /**\n     * The second possible `Body` that this constraint is attached to.\n     *\n     * @property bodyB\n     * @type body\n     * @default null\n     */\n\n    /**\n     * A `Vector` that specifies the offset of the constraint from center of the `constraint.bodyA` if defined, otherwise a world-space position.\n     *\n     * @property pointA\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Vector` that specifies the offset of the constraint from center of the `constraint.bodyB` if defined, otherwise a world-space position.\n     *\n     * @property pointB\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Number` that specifies the stiffness of the constraint, i.e. the rate at which it returns to its resting `constraint.length`.\n     * A value of `1` means the constraint should be very stiff.\n     * A value of `0.2` means the constraint acts like a soft spring.\n     *\n     * @property stiffness\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A `Number` that specifies the damping of the constraint, \n     * i.e. the amount of resistance applied to each body based on their velocities to limit the amount of oscillation.\n     * Damping will only be apparent when the constraint also has a very low `stiffness`.\n     * A value of `0.1` means the constraint will apply heavy damping, resulting in little to no oscillation.\n     * A value of `0` means the constraint will apply no damping.\n     *\n     * @property damping\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that specifies the target resting length of the constraint. \n     * It is calculated automatically in `Constraint.create` from initial positions of the `constraint.bodyA` and `constraint.bodyB`.\n     *\n     * @property length\n     * @type number\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n})();\n\n},{\"../core/Common\":14,\"../core/Sleeping\":22,\"../geometry/Axes\":25,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29}],13:[function(_dereq_,module,exports){\n/**\n* The `Matter.MouseConstraint` module contains methods for creating mouse constraints.\n* Mouse constraints are used for allowing user interaction, providing the ability to move bodies via the mouse or touch.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class MouseConstraint\n*/\n\nvar MouseConstraint = {};\n\nmodule.exports = MouseConstraint;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Sleeping = _dereq_('../core/Sleeping');\nvar Mouse = _dereq_('../core/Mouse');\nvar Events = _dereq_('../core/Events');\nvar Detector = _dereq_('../collision/Detector');\nvar Constraint = _dereq_('./Constraint');\nvar Composite = _dereq_('../body/Composite');\nvar Common = _dereq_('../core/Common');\nvar Bounds = _dereq_('../geometry/Bounds');\n\n(function() {\n\n    /**\n     * Creates a new mouse constraint.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {engine} engine\n     * @param {} options\n     * @return {MouseConstraint} A new MouseConstraint\n     */\n    MouseConstraint.create = function(engine, options) {\n        var mouse = (engine ? engine.mouse : null) || (options ? options.mouse : null);\n\n        if (!mouse) {\n            if (engine && engine.render && engine.render.canvas) {\n                mouse = Mouse.create(engine.render.canvas);\n            } else if (options && options.element) {\n                mouse = Mouse.create(options.element);\n            } else {\n                mouse = Mouse.create();\n                Common.warn('MouseConstraint.create: options.mouse was undefined, options.element was undefined, may not function as expected');\n            }\n        }\n\n        var constraint = Constraint.create({ \n            label: 'Mouse Constraint',\n            pointA: mouse.position,\n            pointB: { x: 0, y: 0 },\n            length: 0.01, \n            stiffness: 0.1,\n            angularStiffness: 1,\n            render: {\n                strokeStyle: '#90EE90',\n                lineWidth: 3\n            }\n        });\n\n        var defaults = {\n            type: 'mouseConstraint',\n            mouse: mouse,\n            element: null,\n            body: null,\n            constraint: constraint,\n            collisionFilter: {\n                category: 0x0001,\n                mask: 0xFFFFFFFF,\n                group: 0\n            }\n        };\n\n        var mouseConstraint = Common.extend(defaults, options);\n\n        Events.on(engine, 'beforeUpdate', function() {\n            var allBodies = Composite.allBodies(engine.world);\n            MouseConstraint.update(mouseConstraint, allBodies);\n            MouseConstraint._triggerEvents(mouseConstraint);\n        });\n\n        return mouseConstraint;\n    };\n\n    /**\n     * Updates the given mouse constraint.\n     * @private\n     * @method update\n     * @param {MouseConstraint} mouseConstraint\n     * @param {body[]} bodies\n     */\n    MouseConstraint.update = function(mouseConstraint, bodies) {\n        var mouse = mouseConstraint.mouse,\n            constraint = mouseConstraint.constraint,\n            body = mouseConstraint.body;\n\n        if (mouse.button === 0) {\n            if (!constraint.bodyB) {\n                for (var i = 0; i < bodies.length; i++) {\n                    body = bodies[i];\n                    if (Bounds.contains(body.bounds, mouse.position) \n                            && Detector.canCollide(body.collisionFilter, mouseConstraint.collisionFilter)) {\n                        for (var j = body.parts.length > 1 ? 1 : 0; j < body.parts.length; j++) {\n                            var part = body.parts[j];\n                            if (Vertices.contains(part.vertices, mouse.position)) {\n                                constraint.pointA = mouse.position;\n                                constraint.bodyB = mouseConstraint.body = body;\n                                constraint.pointB = { x: mouse.position.x - body.position.x, y: mouse.position.y - body.position.y };\n                                constraint.angleB = body.angle;\n\n                                Sleeping.set(body, false);\n                                Events.trigger(mouseConstraint, 'startdrag', { mouse: mouse, body: body });\n\n                                break;\n                            }\n                        }\n                    }\n                }\n            } else {\n                Sleeping.set(constraint.bodyB, false);\n                constraint.pointA = mouse.position;\n            }\n        } else {\n            constraint.bodyB = mouseConstraint.body = null;\n            constraint.pointB = null;\n\n            if (body)\n                Events.trigger(mouseConstraint, 'enddrag', { mouse: mouse, body: body });\n        }\n    };\n\n    /**\n     * Triggers mouse constraint events.\n     * @method _triggerEvents\n     * @private\n     * @param {mouse} mouseConstraint\n     */\n    MouseConstraint._triggerEvents = function(mouseConstraint) {\n        var mouse = mouseConstraint.mouse,\n            mouseEvents = mouse.sourceEvents;\n\n        if (mouseEvents.mousemove)\n            Events.trigger(mouseConstraint, 'mousemove', { mouse: mouse });\n\n        if (mouseEvents.mousedown)\n            Events.trigger(mouseConstraint, 'mousedown', { mouse: mouse });\n\n        if (mouseEvents.mouseup)\n            Events.trigger(mouseConstraint, 'mouseup', { mouse: mouse });\n\n        // reset the mouse state ready for the next step\n        Mouse.clearSourceEvents(mouse);\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired when the mouse has moved (or a touch moves) during the last step\n    *\n    * @event mousemove\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the mouse is down (or a touch has started) during the last step\n    *\n    * @event mousedown\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the mouse is up (or a touch has ended) during the last step\n    *\n    * @event mouseup\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the user starts dragging a body\n    *\n    * @event startdrag\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {body} event.body The body being dragged\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the user ends dragging a body\n    *\n    * @event enddrag\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {body} event.body The body that has stopped being dragged\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"constraint\"\n     * @readOnly\n     */\n\n    /**\n     * The `Mouse` instance in use. If not supplied in `MouseConstraint.create`, one will be created.\n     *\n     * @property mouse\n     * @type mouse\n     * @default mouse\n     */\n\n    /**\n     * The `Body` that is currently being moved by the user, or `null` if no body.\n     *\n     * @property body\n     * @type body\n     * @default null\n     */\n\n    /**\n     * The `Constraint` object that is used to move the body during interaction.\n     *\n     * @property constraint\n     * @type constraint\n     */\n\n    /**\n     * An `Object` that specifies the collision filter properties.\n     * The collision filter allows the user to define which types of body this mouse constraint can interact with.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter\n     * @type object\n     */\n\n})();\n\n},{\"../body/Composite\":2,\"../collision/Detector\":5,\"../core/Common\":14,\"../core/Events\":16,\"../core/Mouse\":19,\"../core/Sleeping\":22,\"../geometry/Bounds\":26,\"../geometry/Vertices\":29,\"./Constraint\":12}],14:[function(_dereq_,module,exports){\n(function (global){\n/**\n* The `Matter.Common` module contains utility functions that are common to all modules.\n*\n* @class Common\n*/\n\nvar Common = {};\n\nmodule.exports = Common;\n\n(function() {\n\n    Common._nextId = 0;\n    Common._seed = 0;\n    Common._nowStartTime = +(new Date());\n\n    /**\n     * Extends the object in the first argument using the object in the second argument.\n     * @method extend\n     * @param {} obj\n     * @param {boolean} deep\n     * @return {} obj extended\n     */\n    Common.extend = function(obj, deep) {\n        var argsStart,\n            args,\n            deepClone;\n\n        if (typeof deep === 'boolean') {\n            argsStart = 2;\n            deepClone = deep;\n        } else {\n            argsStart = 1;\n            deepClone = true;\n        }\n\n        for (var i = argsStart; i < arguments.length; i++) {\n            var source = arguments[i];\n\n            if (source) {\n                for (var prop in source) {\n                    if (deepClone && source[prop] && source[prop].constructor === Object) {\n                        if (!obj[prop] || obj[prop].constructor === Object) {\n                            obj[prop] = obj[prop] || {};\n                            Common.extend(obj[prop], deepClone, source[prop]);\n                        } else {\n                            obj[prop] = source[prop];\n                        }\n                    } else {\n                        obj[prop] = source[prop];\n                    }\n                }\n            }\n        }\n        \n        return obj;\n    };\n\n    /**\n     * Creates a new clone of the object, if deep is true references will also be cloned.\n     * @method clone\n     * @param {} obj\n     * @param {bool} deep\n     * @return {} obj cloned\n     */\n    Common.clone = function(obj, deep) {\n        return Common.extend({}, deep, obj);\n    };\n\n    /**\n     * Returns the list of keys for the given object.\n     * @method keys\n     * @param {} obj\n     * @return {string[]} keys\n     */\n    Common.keys = function(obj) {\n        if (Object.keys)\n            return Object.keys(obj);\n\n        // avoid hasOwnProperty for performance\n        var keys = [];\n        for (var key in obj)\n            keys.push(key);\n        return keys;\n    };\n\n    /**\n     * Returns the list of values for the given object.\n     * @method values\n     * @param {} obj\n     * @return {array} Array of the objects property values\n     */\n    Common.values = function(obj) {\n        var values = [];\n        \n        if (Object.keys) {\n            var keys = Object.keys(obj);\n            for (var i = 0; i < keys.length; i++) {\n                values.push(obj[keys[i]]);\n            }\n            return values;\n        }\n        \n        // avoid hasOwnProperty for performance\n        for (var key in obj)\n            values.push(obj[key]);\n        return values;\n    };\n\n    /**\n     * Gets a value from `base` relative to the `path` string.\n     * @method get\n     * @param {} obj The base object\n     * @param {string} path The path relative to `base`, e.g. 'Foo.Bar.baz'\n     * @param {number} [begin] Path slice begin\n     * @param {number} [end] Path slice end\n     * @return {} The object at the given path\n     */\n    Common.get = function(obj, path, begin, end) {\n        path = path.split('.').slice(begin, end);\n\n        for (var i = 0; i < path.length; i += 1) {\n            obj = obj[path[i]];\n        }\n\n        return obj;\n    };\n\n    /**\n     * Sets a value on `base` relative to the given `path` string.\n     * @method set\n     * @param {} obj The base object\n     * @param {string} path The path relative to `base`, e.g. 'Foo.Bar.baz'\n     * @param {} val The value to set\n     * @param {number} [begin] Path slice begin\n     * @param {number} [end] Path slice end\n     * @return {} Pass through `val` for chaining\n     */\n    Common.set = function(obj, path, val, begin, end) {\n        var parts = path.split('.').slice(begin, end);\n        Common.get(obj, path, 0, -1)[parts[parts.length - 1]] = val;\n        return val;\n    };\n\n    /**\n     * Shuffles the given array in-place.\n     * The function uses a seeded random generator.\n     * @method shuffle\n     * @param {array} array\n     * @return {array} array shuffled randomly\n     */\n    Common.shuffle = function(array) {\n        for (var i = array.length - 1; i > 0; i--) {\n            var j = Math.floor(Common.random() * (i + 1));\n            var temp = array[i];\n            array[i] = array[j];\n            array[j] = temp;\n        }\n        return array;\n    };\n\n    /**\n     * Randomly chooses a value from a list with equal probability.\n     * The function uses a seeded random generator.\n     * @method choose\n     * @param {array} choices\n     * @return {object} A random choice object from the array\n     */\n    Common.choose = function(choices) {\n        return choices[Math.floor(Common.random() * choices.length)];\n    };\n\n    /**\n     * Returns true if the object is a HTMLElement, otherwise false.\n     * @method isElement\n     * @param {object} obj\n     * @return {boolean} True if the object is a HTMLElement, otherwise false\n     */\n    Common.isElement = function(obj) {\n        if (typeof HTMLElement !== 'undefined') {\n            return obj instanceof HTMLElement;\n        }\n\n        return !!(obj && obj.nodeType && obj.nodeName);\n    };\n\n    /**\n     * Returns true if the object is an array.\n     * @method isArray\n     * @param {object} obj\n     * @return {boolean} True if the object is an array, otherwise false\n     */\n    Common.isArray = function(obj) {\n        return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n\n    /**\n     * Returns true if the object is a function.\n     * @method isFunction\n     * @param {object} obj\n     * @return {boolean} True if the object is a function, otherwise false\n     */\n    Common.isFunction = function(obj) {\n        return typeof obj === \"function\";\n    };\n\n    /**\n     * Returns true if the object is a plain object.\n     * @method isPlainObject\n     * @param {object} obj\n     * @return {boolean} True if the object is a plain object, otherwise false\n     */\n    Common.isPlainObject = function(obj) {\n        return typeof obj === 'object' && obj.constructor === Object;\n    };\n\n    /**\n     * Returns true if the object is a string.\n     * @method isString\n     * @param {object} obj\n     * @return {boolean} True if the object is a string, otherwise false\n     */\n    Common.isString = function(obj) {\n        return toString.call(obj) === '[object String]';\n    };\n    \n    /**\n     * Returns the given value clamped between a minimum and maximum value.\n     * @method clamp\n     * @param {number} value\n     * @param {number} min\n     * @param {number} max\n     * @return {number} The value clamped between min and max inclusive\n     */\n    Common.clamp = function(value, min, max) {\n        if (value < min)\n            return min;\n        if (value > max)\n            return max;\n        return value;\n    };\n    \n    /**\n     * Returns the sign of the given value.\n     * @method sign\n     * @param {number} value\n     * @return {number} -1 if negative, +1 if 0 or positive\n     */\n    Common.sign = function(value) {\n        return value < 0 ? -1 : 1;\n    };\n    \n    /**\n     * Returns the current timestamp since the time origin (e.g. from page load).\n     * The result will be high-resolution including decimal places if available.\n     * @method now\n     * @return {number} the current timestamp\n     */\n    Common.now = function() {\n        if (window.performance) {\n            if (window.performance.now) {\n                return window.performance.now();\n            } else if (window.performance.webkitNow) {\n                return window.performance.webkitNow();\n            }\n        }\n\n        return (new Date()) - Common._nowStartTime;\n    };\n    \n    /**\n     * Returns a random value between a minimum and a maximum value inclusive.\n     * The function uses a seeded random generator.\n     * @method random\n     * @param {number} min\n     * @param {number} max\n     * @return {number} A random number between min and max inclusive\n     */\n    Common.random = function(min, max) {\n        min = (typeof min !== \"undefined\") ? min : 0;\n        max = (typeof max !== \"undefined\") ? max : 1;\n        return min + _seededRandom() * (max - min);\n    };\n\n    var _seededRandom = function() {\n        // https://en.wikipedia.org/wiki/Linear_congruential_generator\n        Common._seed = (Common._seed * 9301 + 49297) % 233280;\n        return Common._seed / 233280;\n    };\n\n    /**\n     * Converts a CSS hex colour string into an integer.\n     * @method colorToNumber\n     * @param {string} colorString\n     * @return {number} An integer representing the CSS hex string\n     */\n    Common.colorToNumber = function(colorString) {\n        colorString = colorString.replace('#','');\n\n        if (colorString.length == 3) {\n            colorString = colorString.charAt(0) + colorString.charAt(0)\n                        + colorString.charAt(1) + colorString.charAt(1)\n                        + colorString.charAt(2) + colorString.charAt(2);\n        }\n\n        return parseInt(colorString, 16);\n    };\n\n    /**\n     * The console logging level to use, where each level includes all levels above and excludes the levels below.\n     * The default level is 'debug' which shows all console messages.  \n     *\n     * Possible level values are:\n     * - 0 = None\n     * - 1 = Debug\n     * - 2 = Info\n     * - 3 = Warn\n     * - 4 = Error\n     * @property Common.logLevel\n     * @type {Number}\n     * @default 1\n     */\n    Common.logLevel = 1;\n\n    /**\n     * Shows a `console.log` message only if the current `Common.logLevel` allows it.\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\n     * @method log\n     * @param ...objs {} The objects to log.\n     */\n    Common.log = function() {\n        if (console && Common.logLevel > 0 && Common.logLevel <= 3) {\n            console.log.apply(console, ['matter-js:'].concat(Array.prototype.slice.call(arguments)));\n        }\n    };\n\n    /**\n     * Shows a `console.info` message only if the current `Common.logLevel` allows it.\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\n     * @method info\n     * @param ...objs {} The objects to log.\n     */\n    Common.info = function() {\n        if (console && Common.logLevel > 0 && Common.logLevel <= 2) {\n            console.info.apply(console, ['matter-js:'].concat(Array.prototype.slice.call(arguments)));\n        }\n    };\n\n    /**\n     * Shows a `console.warn` message only if the current `Common.logLevel` allows it.\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\n     * @method warn\n     * @param ...objs {} The objects to log.\n     */\n    Common.warn = function() {\n        if (console && Common.logLevel > 0 && Common.logLevel <= 3) {\n            console.warn.apply(console, ['matter-js:'].concat(Array.prototype.slice.call(arguments)));\n        }\n    };\n\n    /**\n     * Returns the next unique sequential ID.\n     * @method nextId\n     * @return {Number} Unique sequential ID\n     */\n    Common.nextId = function() {\n        return Common._nextId++;\n    };\n\n    /**\n     * A cross browser compatible indexOf implementation.\n     * @method indexOf\n     * @param {array} haystack\n     * @param {object} needle\n     * @return {number} The position of needle in haystack, otherwise -1.\n     */\n    Common.indexOf = function(haystack, needle) {\n        if (haystack.indexOf)\n            return haystack.indexOf(needle);\n\n        for (var i = 0; i < haystack.length; i++) {\n            if (haystack[i] === needle)\n                return i;\n        }\n\n        return -1;\n    };\n\n    /**\n     * A cross browser compatible array map implementation.\n     * @method map\n     * @param {array} list\n     * @param {function} func\n     * @return {array} Values from list transformed by func.\n     */\n    Common.map = function(list, func) {\n        if (list.map) {\n            return list.map(func);\n        }\n\n        var mapped = [];\n\n        for (var i = 0; i < list.length; i += 1) {\n            mapped.push(func(list[i]));\n        }\n\n        return mapped;\n    };\n\n    /**\n     * Takes a directed graph and returns the partially ordered set of vertices in topological order.\n     * Circular dependencies are allowed.\n     * @method topologicalSort\n     * @param {object} graph\n     * @return {array} Partially ordered set of vertices in topological order.\n     */\n    Common.topologicalSort = function(graph) {\n        // https://github.com/mgechev/javascript-algorithms\n        // Copyright (c) Minko Gechev (MIT license)\n        // Modifications: tidy formatting and naming\n        var result = [],\n            visited = [],\n            temp = [];\n\n        for (var node in graph) {\n            if (!visited[node] && !temp[node]) {\n                Common._topologicalSort(node, visited, temp, graph, result);\n            }\n        }\n\n        return result;\n    };\n\n    Common._topologicalSort = function(node, visited, temp, graph, result) {\n        var neighbors = graph[node] || [];\n        temp[node] = true;\n\n        for (var i = 0; i < neighbors.length; i += 1) {\n            var neighbor = neighbors[i];\n\n            if (temp[neighbor]) {\n                // skip circular dependencies\n                continue;\n            }\n\n            if (!visited[neighbor]) {\n                Common._topologicalSort(neighbor, visited, temp, graph, result);\n            }\n        }\n\n        temp[node] = false;\n        visited[node] = true;\n\n        result.push(node);\n    };\n\n    /**\n     * Takes _n_ functions as arguments and returns a new function that calls them in order.\n     * The arguments applied when calling the new function will also be applied to every function passed.\n     * The value of `this` refers to the last value returned in the chain that was not `undefined`.\n     * Therefore if a passed function does not return a value, the previously returned value is maintained.\n     * After all passed functions have been called the new function returns the last returned value (if any).\n     * If any of the passed functions are a chain, then the chain will be flattened.\n     * @method chain\n     * @param ...funcs {function} The functions to chain.\n     * @return {function} A new function that calls the passed functions in order.\n     */\n    Common.chain = function() {\n        var funcs = [];\n\n        for (var i = 0; i < arguments.length; i += 1) {\n            var func = arguments[i];\n\n            if (func._chained) {\n                // flatten already chained functions\n                funcs.push.apply(funcs, func._chained);\n            } else {\n                funcs.push(func);\n            }\n        }\n\n        var chain = function() {\n            // https://github.com/GoogleChrome/devtools-docs/issues/53#issuecomment-51941358\n            var lastResult,\n                args = new Array(arguments.length);\n\n            for (var i = 0, l = arguments.length; i < l; i++) {\n                args[i] = arguments[i];\n            }\n\n            for (i = 0; i < funcs.length; i += 1) {\n                var result = funcs[i].apply(lastResult, args);\n\n                if (typeof result !== 'undefined') {\n                    lastResult = result;\n                }\n            }\n\n            return lastResult;\n        };\n\n        chain._chained = funcs;\n\n        return chain;\n    };\n\n    /**\n     * Chains a function to excute before the original function on the given `path` relative to `base`.\n     * See also docs for `Common.chain`.\n     * @method chainPathBefore\n     * @param {} base The base object\n     * @param {string} path The path relative to `base`\n     * @param {function} func The function to chain before the original\n     * @return {function} The chained function that replaced the original\n     */\n    Common.chainPathBefore = function(base, path, func) {\n        return Common.set(base, path, Common.chain(\n            func,\n            Common.get(base, path)\n        ));\n    };\n\n    /**\n     * Chains a function to excute after the original function on the given `path` relative to `base`.\n     * See also docs for `Common.chain`.\n     * @method chainPathAfter\n     * @param {} base The base object\n     * @param {string} path The path relative to `base`\n     * @param {function} func The function to chain after the original\n     * @return {function} The chained function that replaced the original\n     */\n    Common.chainPathAfter = function(base, path, func) {\n        return Common.set(base, path, Common.chain(\n            Common.get(base, path),\n            func\n        ));\n    };\n\n    /**\n     * Used to require external libraries outside of the bundle.\n     * It first looks for the `globalName` on the environment's global namespace.\n     * If the global is not found, it will fall back to using the standard `require` using the `moduleName`.\n     * @private\n     * @method _requireGlobal\n     * @param {string} globalName The global module name\n     * @param {string} moduleName The fallback CommonJS module name\n     * @return {} The loaded module\n     */\n    Common._requireGlobal = function(globalName, moduleName) {\n        var obj = (typeof window !== 'undefined' ? window[globalName] : typeof global !== 'undefined' ? global[globalName] : null);\n        return obj || _dereq_(moduleName);\n    };\n})();\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],15:[function(_dereq_,module,exports){\n/**\n* The `Matter.Engine` module contains methods for creating and manipulating engines.\n* An engine is a controller that manages updating the simulation of the world.\n* See `Matter.Runner` for an optional game loop utility.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Engine\n*/\n\nvar Engine = {};\n\nmodule.exports = Engine;\n\nvar World = _dereq_('../body/World');\nvar Sleeping = _dereq_('./Sleeping');\nvar Resolver = _dereq_('../collision/Resolver');\nvar Render = _dereq_('../render/Render');\nvar Pairs = _dereq_('../collision/Pairs');\nvar Metrics = _dereq_('./Metrics');\nvar Grid = _dereq_('../collision/Grid');\nvar Events = _dereq_('./Events');\nvar Composite = _dereq_('../body/Composite');\nvar Constraint = _dereq_('../constraint/Constraint');\nvar Common = _dereq_('./Common');\nvar Body = _dereq_('../body/Body');\n\n(function() {\n\n    /**\n     * Creates a new engine. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {object} [options]\n     * @return {engine} engine\n     */\n    Engine.create = function(element, options) {\n        // options may be passed as the first (and only) argument\n        options = Common.isElement(element) ? options : element;\n        element = Common.isElement(element) ? element : null;\n        options = options || {};\n\n        if (element || options.render) {\n            Common.warn('Engine.create: engine.render is deprecated (see docs)');\n        }\n\n        var defaults = {\n            positionIterations: 6,\n            velocityIterations: 4,\n            constraintIterations: 2,\n            enableSleeping: false,\n            events: [],\n            plugin: {},\n            timing: {\n                timestamp: 0,\n                timeScale: 1\n            },\n            broadphase: {\n                controller: Grid\n            }\n        };\n\n        var engine = Common.extend(defaults, options);\n\n        // @deprecated\n        if (element || engine.render) {\n            var renderDefaults = {\n                element: element,\n                controller: Render\n            };\n            \n            engine.render = Common.extend(renderDefaults, engine.render);\n        }\n\n        // @deprecated\n        if (engine.render && engine.render.controller) {\n            engine.render = engine.render.controller.create(engine.render);\n        }\n\n        // @deprecated\n        if (engine.render) {\n            engine.render.engine = engine;\n        }\n\n        engine.world = options.world || World.create(engine.world);\n        engine.pairs = Pairs.create();\n        engine.broadphase = engine.broadphase.controller.create(engine.broadphase);\n        engine.metrics = engine.metrics || { extended: false };\n\n\n        return engine;\n    };\n\n    /**\n     * Moves the simulation forward in time by `delta` ms.\n     * The `correction` argument is an optional `Number` that specifies the time correction factor to apply to the update.\n     * This can help improve the accuracy of the simulation in cases where `delta` is changing between updates.\n     * The value of `correction` is defined as `delta / lastDelta`, i.e. the percentage change of `delta` over the last step.\n     * Therefore the value is always `1` (no correction) when `delta` constant (or when no correction is desired, which is the default).\n     * See the paper on <a href=\"http://lonesock.net/article/verlet.html\">Time Corrected Verlet</a> for more information.\n     *\n     * Triggers `beforeUpdate` and `afterUpdate` events.\n     * Triggers `collisionStart`, `collisionActive` and `collisionEnd` events.\n     * @method update\n     * @param {engine} engine\n     * @param {number} [delta=16.666]\n     * @param {number} [correction=1]\n     */\n    Engine.update = function(engine, delta, correction) {\n        delta = delta || 1000 / 60;\n        correction = correction || 1;\n\n        var world = engine.world,\n            timing = engine.timing,\n            broadphase = engine.broadphase,\n            broadphasePairs = [],\n            i;\n\n        // increment timestamp\n        timing.timestamp += delta * timing.timeScale;\n\n        // create an event object\n        var event = {\n            timestamp: timing.timestamp\n        };\n\n        Events.trigger(engine, 'beforeUpdate', event);\n\n        // get lists of all bodies and constraints, no matter what composites they are in\n        var allBodies = Composite.allBodies(world),\n            allConstraints = Composite.allConstraints(world);\n\n\n        // if sleeping enabled, call the sleeping controller\n        if (engine.enableSleeping)\n            Sleeping.update(allBodies, timing.timeScale);\n\n        // applies gravity to all bodies\n        Engine._bodiesApplyGravity(allBodies, world.gravity);\n\n        // update all body position and rotation by integration\n        Engine._bodiesUpdate(allBodies, delta, timing.timeScale, correction, world.bounds);\n\n        // update all constraints (first pass)\n        Constraint.preSolveAll(allBodies);\n        for (i = 0; i < engine.constraintIterations; i++) {\n            Constraint.solveAll(allConstraints, timing.timeScale);\n        }\n        Constraint.postSolveAll(allBodies);\n\n        // broadphase pass: find potential collision pairs\n        if (broadphase.controller) {\n            // if world is dirty, we must flush the whole grid\n            if (world.isModified)\n                broadphase.controller.clear(broadphase);\n\n            // update the grid buckets based on current bodies\n            broadphase.controller.update(broadphase, allBodies, engine, world.isModified);\n            broadphasePairs = broadphase.pairsList;\n        } else {\n            // if no broadphase set, we just pass all bodies\n            broadphasePairs = allBodies;\n        }\n\n        // clear all composite modified flags\n        if (world.isModified) {\n            Composite.setModified(world, false, false, true);\n        }\n\n        // narrowphase pass: find actual collisions, then create or update collision pairs\n        var collisions = broadphase.detector(broadphasePairs, engine);\n\n        // update collision pairs\n        var pairs = engine.pairs,\n            timestamp = timing.timestamp;\n        Pairs.update(pairs, collisions, timestamp);\n        Pairs.removeOld(pairs, timestamp);\n\n        // wake up bodies involved in collisions\n        if (engine.enableSleeping)\n            Sleeping.afterCollisions(pairs.list, timing.timeScale);\n\n        // trigger collision events\n        if (pairs.collisionStart.length > 0)\n            Events.trigger(engine, 'collisionStart', { pairs: pairs.collisionStart });\n\n        // iteratively resolve position between collisions\n        Resolver.preSolvePosition(pairs.list);\n        for (i = 0; i < engine.positionIterations; i++) {\n            Resolver.solvePosition(pairs.list, timing.timeScale);\n        }\n        Resolver.postSolvePosition(allBodies);\n\n        // update all constraints (second pass)\n        Constraint.preSolveAll(allBodies);\n        for (i = 0; i < engine.constraintIterations; i++) {\n            Constraint.solveAll(allConstraints, timing.timeScale);\n        }\n        Constraint.postSolveAll(allBodies);\n\n        // iteratively resolve velocity between collisions\n        Resolver.preSolveVelocity(pairs.list);\n        for (i = 0; i < engine.velocityIterations; i++) {\n            Resolver.solveVelocity(pairs.list, timing.timeScale);\n        }\n\n        // trigger collision events\n        if (pairs.collisionActive.length > 0)\n            Events.trigger(engine, 'collisionActive', { pairs: pairs.collisionActive });\n\n        if (pairs.collisionEnd.length > 0)\n            Events.trigger(engine, 'collisionEnd', { pairs: pairs.collisionEnd });\n\n\n        // clear force buffers\n        Engine._bodiesClearForces(allBodies);\n\n        Events.trigger(engine, 'afterUpdate', event);\n\n        return engine;\n    };\n    \n    /**\n     * Merges two engines by keeping the configuration of `engineA` but replacing the world with the one from `engineB`.\n     * @method merge\n     * @param {engine} engineA\n     * @param {engine} engineB\n     */\n    Engine.merge = function(engineA, engineB) {\n        Common.extend(engineA, engineB);\n        \n        if (engineB.world) {\n            engineA.world = engineB.world;\n\n            Engine.clear(engineA);\n\n            var bodies = Composite.allBodies(engineA.world);\n\n            for (var i = 0; i < bodies.length; i++) {\n                var body = bodies[i];\n                Sleeping.set(body, false);\n                body.id = Common.nextId();\n            }\n        }\n    };\n\n    /**\n     * Clears the engine including the world, pairs and broadphase.\n     * @method clear\n     * @param {engine} engine\n     */\n    Engine.clear = function(engine) {\n        var world = engine.world;\n        \n        Pairs.clear(engine.pairs);\n\n        var broadphase = engine.broadphase;\n        if (broadphase.controller) {\n            var bodies = Composite.allBodies(world);\n            broadphase.controller.clear(broadphase);\n            broadphase.controller.update(broadphase, bodies, engine, true);\n        }\n    };\n\n    /**\n     * Zeroes the `body.force` and `body.torque` force buffers.\n     * @method _bodiesClearForces\n     * @private\n     * @param {body[]} bodies\n     */\n    Engine._bodiesClearForces = function(bodies) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            // reset force buffers\n            body.force.x = 0;\n            body.force.y = 0;\n            body.torque = 0;\n        }\n    };\n\n    /**\n     * Applys a mass dependant force to all given bodies.\n     * @method _bodiesApplyGravity\n     * @private\n     * @param {body[]} bodies\n     * @param {vector} gravity\n     */\n    Engine._bodiesApplyGravity = function(bodies, gravity) {\n        var gravityScale = typeof gravity.scale !== 'undefined' ? gravity.scale : 0.001;\n\n        if ((gravity.x === 0 && gravity.y === 0) || gravityScale === 0) {\n            return;\n        }\n        \n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.isStatic || body.isSleeping)\n                continue;\n\n            // apply gravity\n            body.force.y += body.mass * gravity.y * gravityScale;\n            body.force.x += body.mass * gravity.x * gravityScale;\n        }\n    };\n\n    /**\n     * Applys `Body.update` to all given `bodies`.\n     * @method _bodiesUpdate\n     * @private\n     * @param {body[]} bodies\n     * @param {number} deltaTime \n     * The amount of time elapsed between updates\n     * @param {number} timeScale\n     * @param {number} correction \n     * The Verlet correction factor (deltaTime / lastDeltaTime)\n     * @param {bounds} worldBounds\n     */\n    Engine._bodiesUpdate = function(bodies, deltaTime, timeScale, correction, worldBounds) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.isStatic || body.isSleeping)\n                continue;\n\n            Body.update(body, deltaTime, timeScale, correction);\n        }\n    };\n\n    /**\n     * An alias for `Runner.run`, see `Matter.Runner` for more information.\n     * @method run\n     * @param {engine} engine\n     */\n\n    /**\n    * Fired just before an update\n    *\n    * @event beforeUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update and all collision events\n    *\n    * @event afterUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update, provides a list of all pairs that have started to collide in the current tick (if any)\n    *\n    * @event collisionStart\n    * @param {} event An event object\n    * @param {} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update, provides a list of all pairs that are colliding in the current tick (if any)\n    *\n    * @event collisionActive\n    * @param {} event An event object\n    * @param {} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update, provides a list of all pairs that have ended collision in the current tick (if any)\n    *\n    * @event collisionEnd\n    * @param {} event An event object\n    * @param {} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` that specifies the number of position iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     *\n     * @property positionIterations\n     * @type number\n     * @default 6\n     */\n\n    /**\n     * An integer `Number` that specifies the number of velocity iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     *\n     * @property velocityIterations\n     * @type number\n     * @default 4\n     */\n\n    /**\n     * An integer `Number` that specifies the number of constraint iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     * The default value of `2` is usually very adequate.\n     *\n     * @property constraintIterations\n     * @type number\n     * @default 2\n     */\n\n    /**\n     * A flag that specifies whether the engine should allow sleeping via the `Matter.Sleeping` module.\n     * Sleeping can improve stability and performance, but often at the expense of accuracy.\n     *\n     * @property enableSleeping\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * An `Object` containing properties regarding the timing systems of the engine. \n     *\n     * @property timing\n     * @type object\n     */\n\n    /**\n     * A `Number` that specifies the global scaling factor of time for all bodies.\n     * A value of `0` freezes the simulation.\n     * A value of `0.1` gives a slow-motion effect.\n     * A value of `1.2` gives a speed-up effect.\n     *\n     * @property timing.timeScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A `Number` that specifies the current simulation-time in milliseconds starting from `0`. \n     * It is incremented on every `Engine.update` by the given `delta` argument. \n     *\n     * @property timing.timestamp\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * An instance of a `Render` controller. The default value is a `Matter.Render` instance created by `Engine.create`.\n     * One may also develop a custom renderer module based on `Matter.Render` and pass an instance of it to `Engine.create` via `options.render`.\n     *\n     * A minimal custom renderer object must define at least three functions: `create`, `clear` and `world` (see `Matter.Render`).\n     * It is also possible to instead pass the _module_ reference via `options.render.controller` and `Engine.create` will instantiate one for you.\n     *\n     * @property render\n     * @type render\n     * @deprecated see Demo.js for an example of creating a renderer\n     * @default a Matter.Render instance\n     */\n\n    /**\n     * An instance of a broadphase controller. The default value is a `Matter.Grid` instance created by `Engine.create`.\n     *\n     * @property broadphase\n     * @type grid\n     * @default a Matter.Grid instance\n     */\n\n    /**\n     * A `World` composite object that will contain all simulated bodies and constraints.\n     *\n     * @property world\n     * @type world\n     * @default a Matter.World instance\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n})();\n\n},{\"../body/Body\":1,\"../body/Composite\":2,\"../body/World\":3,\"../collision/Grid\":6,\"../collision/Pairs\":8,\"../collision/Resolver\":10,\"../constraint/Constraint\":12,\"../render/Render\":31,\"./Common\":14,\"./Events\":16,\"./Metrics\":18,\"./Sleeping\":22}],16:[function(_dereq_,module,exports){\n/**\n* The `Matter.Events` module contains methods to fire and listen to events on other objects.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Events\n*/\n\nvar Events = {};\n\nmodule.exports = Events;\n\nvar Common = _dereq_('./Common');\n\n(function() {\n\n    /**\n     * Subscribes a callback function to the given object's `eventName`.\n     * @method on\n     * @param {} object\n     * @param {string} eventNames\n     * @param {function} callback\n     */\n    Events.on = function(object, eventNames, callback) {\n        var names = eventNames.split(' '),\n            name;\n\n        for (var i = 0; i < names.length; i++) {\n            name = names[i];\n            object.events = object.events || {};\n            object.events[name] = object.events[name] || [];\n            object.events[name].push(callback);\n        }\n\n        return callback;\n    };\n\n    /**\n     * Removes the given event callback. If no callback, clears all callbacks in `eventNames`. If no `eventNames`, clears all events.\n     * @method off\n     * @param {} object\n     * @param {string} eventNames\n     * @param {function} callback\n     */\n    Events.off = function(object, eventNames, callback) {\n        if (!eventNames) {\n            object.events = {};\n            return;\n        }\n\n        // handle Events.off(object, callback)\n        if (typeof eventNames === 'function') {\n            callback = eventNames;\n            eventNames = Common.keys(object.events).join(' ');\n        }\n\n        var names = eventNames.split(' ');\n\n        for (var i = 0; i < names.length; i++) {\n            var callbacks = object.events[names[i]],\n                newCallbacks = [];\n\n            if (callback && callbacks) {\n                for (var j = 0; j < callbacks.length; j++) {\n                    if (callbacks[j] !== callback)\n                        newCallbacks.push(callbacks[j]);\n                }\n            }\n\n            object.events[names[i]] = newCallbacks;\n        }\n    };\n\n    /**\n     * Fires all the callbacks subscribed to the given object's `eventName`, in the order they subscribed, if any.\n     * @method trigger\n     * @param {} object\n     * @param {string} eventNames\n     * @param {} event\n     */\n    Events.trigger = function(object, eventNames, event) {\n        var names,\n            name,\n            callbacks,\n            eventClone;\n\n        if (object.events) {\n            if (!event)\n                event = {};\n\n            names = eventNames.split(' ');\n\n            for (var i = 0; i < names.length; i++) {\n                name = names[i];\n                callbacks = object.events[name];\n\n                if (callbacks) {\n                    eventClone = Common.clone(event, false);\n                    eventClone.name = name;\n                    eventClone.source = object;\n\n                    for (var j = 0; j < callbacks.length; j++) {\n                        callbacks[j].apply(object, [eventClone]);\n                    }\n                }\n            }\n        }\n    };\n\n})();\n\n},{\"./Common\":14}],17:[function(_dereq_,module,exports){\n/**\n* The `Matter` module is the top level namespace. It also includes a function for installing plugins on top of the library.\n*\n* @class Matter\n*/\n\nvar Matter = {};\n\nmodule.exports = Matter;\n\nvar Plugin = _dereq_('./Plugin');\nvar Common = _dereq_('./Common');\n\n(function() {\n\n    /**\n     * The library name.\n     * @property name\n     * @readOnly\n     * @type {String}\n     */\n    Matter.name = 'matter-js';\n\n    /**\n     * The library version.\n     * @property version\n     * @readOnly\n     * @type {String}\n     */\n    Matter.version = '0.14.2';\n\n    /**\n     * A list of plugin dependencies to be installed. These are normally set and installed through `Matter.use`.\n     * Alternatively you may set `Matter.uses` manually and install them by calling `Plugin.use(Matter)`.\n     * @property uses\n     * @type {Array}\n     */\n    Matter.uses = [];\n\n    /**\n     * The plugins that have been installed through `Matter.Plugin.install`. Read only.\n     * @property used\n     * @readOnly\n     * @type {Array}\n     */\n    Matter.used = [];\n\n    /**\n     * Installs the given plugins on the `Matter` namespace.\n     * This is a short-hand for `Plugin.use`, see it for more information.\n     * Call this function once at the start of your code, with all of the plugins you wish to install as arguments.\n     * Avoid calling this function multiple times unless you intend to manually control installation order.\n     * @method use\n     * @param ...plugin {Function} The plugin(s) to install on `base` (multi-argument).\n     */\n    Matter.use = function() {\n        Plugin.use(Matter, Array.prototype.slice.call(arguments));\n    };\n\n    /**\n     * Chains a function to excute before the original function on the given `path` relative to `Matter`.\n     * See also docs for `Common.chain`.\n     * @method before\n     * @param {string} path The path relative to `Matter`\n     * @param {function} func The function to chain before the original\n     * @return {function} The chained function that replaced the original\n     */\n    Matter.before = function(path, func) {\n        path = path.replace(/^Matter./, '');\n        return Common.chainPathBefore(Matter, path, func);\n    };\n\n    /**\n     * Chains a function to excute after the original function on the given `path` relative to `Matter`.\n     * See also docs for `Common.chain`.\n     * @method after\n     * @param {string} path The path relative to `Matter`\n     * @param {function} func The function to chain after the original\n     * @return {function} The chained function that replaced the original\n     */\n    Matter.after = function(path, func) {\n        path = path.replace(/^Matter./, '');\n        return Common.chainPathAfter(Matter, path, func);\n    };\n\n})();\n\n},{\"./Common\":14,\"./Plugin\":20}],18:[function(_dereq_,module,exports){\n\n},{\"../body/Composite\":2,\"./Common\":14}],19:[function(_dereq_,module,exports){\n/**\n* The `Matter.Mouse` module contains methods for creating and manipulating mouse inputs.\n*\n* @class Mouse\n*/\n\nvar Mouse = {};\n\nmodule.exports = Mouse;\n\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a mouse input.\n     * @method create\n     * @param {HTMLElement} element\n     * @return {mouse} A new mouse\n     */\n    Mouse.create = function(element) {\n        var mouse = {};\n\n        if (!element) {\n            Common.log('Mouse.create: element was undefined, defaulting to document.body', 'warn');\n        }\n        \n        mouse.element = element || document.body;\n        mouse.absolute = { x: 0, y: 0 };\n        mouse.position = { x: 0, y: 0 };\n        mouse.mousedownPosition = { x: 0, y: 0 };\n        mouse.mouseupPosition = { x: 0, y: 0 };\n        mouse.offset = { x: 0, y: 0 };\n        mouse.scale = { x: 1, y: 1 };\n        mouse.wheelDelta = 0;\n        mouse.button = -1;\n        mouse.pixelRatio = mouse.element.getAttribute('data-pixel-ratio') || 1;\n\n        mouse.sourceEvents = {\n            mousemove: null,\n            mousedown: null,\n            mouseup: null,\n            mousewheel: null\n        };\n        \n        mouse.mousemove = function(event) { \n            var position = Mouse._getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n                touches = event.changedTouches;\n\n            if (touches) {\n                mouse.button = 0;\n                event.preventDefault();\n            }\n\n            mouse.absolute.x = position.x;\n            mouse.absolute.y = position.y;\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            mouse.sourceEvents.mousemove = event;\n        };\n        \n        mouse.mousedown = function(event) {\n            var position = Mouse._getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n                touches = event.changedTouches;\n\n            if (touches) {\n                mouse.button = 0;\n                event.preventDefault();\n            } else {\n                mouse.button = event.button;\n            }\n\n            mouse.absolute.x = position.x;\n            mouse.absolute.y = position.y;\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            mouse.mousedownPosition.x = mouse.position.x;\n            mouse.mousedownPosition.y = mouse.position.y;\n            mouse.sourceEvents.mousedown = event;\n        };\n        \n        mouse.mouseup = function(event) {\n            var position = Mouse._getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n                touches = event.changedTouches;\n\n            if (touches) {\n                event.preventDefault();\n            }\n            \n            mouse.button = -1;\n            mouse.absolute.x = position.x;\n            mouse.absolute.y = position.y;\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            mouse.mouseupPosition.x = mouse.position.x;\n            mouse.mouseupPosition.y = mouse.position.y;\n            mouse.sourceEvents.mouseup = event;\n        };\n\n        mouse.mousewheel = function(event) {\n            mouse.wheelDelta = Math.max(-1, Math.min(1, event.wheelDelta || -event.detail));\n            event.preventDefault();\n        };\n\n        Mouse.setElement(mouse, mouse.element);\n\n        return mouse;\n    };\n\n    /**\n     * Sets the element the mouse is bound to (and relative to).\n     * @method setElement\n     * @param {mouse} mouse\n     * @param {HTMLElement} element\n     */\n    Mouse.setElement = function(mouse, element) {\n        mouse.element = element;\n\n        element.addEventListener('mousemove', mouse.mousemove);\n        element.addEventListener('mousedown', mouse.mousedown);\n        element.addEventListener('mouseup', mouse.mouseup);\n        \n        element.addEventListener('mousewheel', mouse.mousewheel);\n        element.addEventListener('DOMMouseScroll', mouse.mousewheel);\n\n        element.addEventListener('touchmove', mouse.mousemove);\n        element.addEventListener('touchstart', mouse.mousedown);\n        element.addEventListener('touchend', mouse.mouseup);\n    };\n\n    /**\n     * Clears all captured source events.\n     * @method clearSourceEvents\n     * @param {mouse} mouse\n     */\n    Mouse.clearSourceEvents = function(mouse) {\n        mouse.sourceEvents.mousemove = null;\n        mouse.sourceEvents.mousedown = null;\n        mouse.sourceEvents.mouseup = null;\n        mouse.sourceEvents.mousewheel = null;\n        mouse.wheelDelta = 0;\n    };\n\n    /**\n     * Sets the mouse position offset.\n     * @method setOffset\n     * @param {mouse} mouse\n     * @param {vector} offset\n     */\n    Mouse.setOffset = function(mouse, offset) {\n        mouse.offset.x = offset.x;\n        mouse.offset.y = offset.y;\n        mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n        mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n    };\n\n    /**\n     * Sets the mouse position scale.\n     * @method setScale\n     * @param {mouse} mouse\n     * @param {vector} scale\n     */\n    Mouse.setScale = function(mouse, scale) {\n        mouse.scale.x = scale.x;\n        mouse.scale.y = scale.y;\n        mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n        mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n    };\n    \n    /**\n     * Gets the mouse position relative to an element given a screen pixel ratio.\n     * @method _getRelativeMousePosition\n     * @private\n     * @param {} event\n     * @param {} element\n     * @param {number} pixelRatio\n     * @return {}\n     */\n    Mouse._getRelativeMousePosition = function(event, element, pixelRatio) {\n        var elementBounds = element.getBoundingClientRect(),\n            rootNode = (document.documentElement || document.body.parentNode || document.body),\n            scrollX = (window.pageXOffset !== undefined) ? window.pageXOffset : rootNode.scrollLeft,\n            scrollY = (window.pageYOffset !== undefined) ? window.pageYOffset : rootNode.scrollTop,\n            touches = event.changedTouches,\n            x, y;\n        \n        if (touches) {\n            x = touches[0].pageX - elementBounds.left - scrollX;\n            y = touches[0].pageY - elementBounds.top - scrollY;\n        } else {\n            x = event.pageX - elementBounds.left - scrollX;\n            y = event.pageY - elementBounds.top - scrollY;\n        }\n\n        return { \n            x: x / (element.clientWidth / (element.width || element.clientWidth) * pixelRatio),\n            y: y / (element.clientHeight / (element.height || element.clientHeight) * pixelRatio)\n        };\n    };\n\n})();\n\n},{\"../core/Common\":14}],20:[function(_dereq_,module,exports){\n/**\n* The `Matter.Plugin` module contains functions for registering and installing plugins on modules.\n*\n* @class Plugin\n*/\n\nvar Plugin = {};\n\nmodule.exports = Plugin;\n\nvar Common = _dereq_('./Common');\n\n(function() {\n\n    Plugin._registry = {};\n\n    /**\n     * Registers a plugin object so it can be resolved later by name.\n     * @method register\n     * @param plugin {} The plugin to register.\n     * @return {object} The plugin.\n     */\n    Plugin.register = function(plugin) {\n        if (!Plugin.isPlugin(plugin)) {\n            Common.warn('Plugin.register:', Plugin.toString(plugin), 'does not implement all required fields.');\n        }\n\n        if (plugin.name in Plugin._registry) {\n            var registered = Plugin._registry[plugin.name],\n                pluginVersion = Plugin.versionParse(plugin.version).number,\n                registeredVersion = Plugin.versionParse(registered.version).number;\n\n            if (pluginVersion > registeredVersion) {\n                Common.warn('Plugin.register:', Plugin.toString(registered), 'was upgraded to', Plugin.toString(plugin));\n                Plugin._registry[plugin.name] = plugin;\n            } else if (pluginVersion < registeredVersion) {\n                Common.warn('Plugin.register:', Plugin.toString(registered), 'can not be downgraded to', Plugin.toString(plugin));\n            } else if (plugin !== registered) {\n                Common.warn('Plugin.register:', Plugin.toString(plugin), 'is already registered to different plugin object');\n            }\n        } else {\n            Plugin._registry[plugin.name] = plugin;\n        }\n\n        return plugin;\n    };\n\n    /**\n     * Resolves a dependency to a plugin object from the registry if it exists. \n     * The `dependency` may contain a version, but only the name matters when resolving.\n     * @method resolve\n     * @param dependency {string} The dependency.\n     * @return {object} The plugin if resolved, otherwise `undefined`.\n     */\n    Plugin.resolve = function(dependency) {\n        return Plugin._registry[Plugin.dependencyParse(dependency).name];\n    };\n\n    /**\n     * Returns a pretty printed plugin name and version.\n     * @method toString\n     * @param plugin {} The plugin.\n     * @return {string} Pretty printed plugin name and version.\n     */\n    Plugin.toString = function(plugin) {\n        return typeof plugin === 'string' ? plugin : (plugin.name || 'anonymous') + '@' + (plugin.version || plugin.range || '0.0.0');\n    };\n\n    /**\n     * Returns `true` if the object meets the minimum standard to be considered a plugin.\n     * This means it must define the following properties:\n     * - `name`\n     * - `version`\n     * - `install`\n     * @method isPlugin\n     * @param obj {} The obj to test.\n     * @return {boolean} `true` if the object can be considered a plugin otherwise `false`.\n     */\n    Plugin.isPlugin = function(obj) {\n        return obj && obj.name && obj.version && obj.install;\n    };\n\n    /**\n     * Returns `true` if a plugin with the given `name` been installed on `module`.\n     * @method isUsed\n     * @param module {} The module.\n     * @param name {string} The plugin name.\n     * @return {boolean} `true` if a plugin with the given `name` been installed on `module`, otherwise `false`.\n     */\n    Plugin.isUsed = function(module, name) {\n        return module.used.indexOf(name) > -1;\n    };\n\n    /**\n     * Returns `true` if `plugin.for` is applicable to `module` by comparing against `module.name` and `module.version`.\n     * If `plugin.for` is not specified then it is assumed to be applicable.\n     * The value of `plugin.for` is a string of the format `'module-name'` or `'module-name@version'`.\n     * @method isFor\n     * @param plugin {} The plugin.\n     * @param module {} The module.\n     * @return {boolean} `true` if `plugin.for` is applicable to `module`, otherwise `false`.\n     */\n    Plugin.isFor = function(plugin, module) {\n        var parsed = plugin.for && Plugin.dependencyParse(plugin.for);\n        return !plugin.for || (module.name === parsed.name && Plugin.versionSatisfies(module.version, parsed.range));\n    };\n\n    /**\n     * Installs the plugins by calling `plugin.install` on each plugin specified in `plugins` if passed, otherwise `module.uses`.\n     * For installing plugins on `Matter` see the convenience function `Matter.use`.\n     * Plugins may be specified either by their name or a reference to the plugin object.\n     * Plugins themselves may specify further dependencies, but each plugin is installed only once.\n     * Order is important, a topological sort is performed to find the best resulting order of installation.\n     * This sorting attempts to satisfy every dependency's requested ordering, but may not be exact in all cases.\n     * This function logs the resulting status of each dependency in the console, along with any warnings.\n     * - A green tick ✅ indicates a dependency was resolved and installed.\n     * - An orange diamond 🔶 indicates a dependency was resolved but a warning was thrown for it or one if its dependencies.\n     * - A red cross ❌ indicates a dependency could not be resolved.\n     * Avoid calling this function multiple times on the same module unless you intend to manually control installation order.\n     * @method use\n     * @param module {} The module install plugins on.\n     * @param [plugins=module.uses] {} The plugins to install on module (optional, defaults to `module.uses`).\n     */\n    Plugin.use = function(module, plugins) {\n        module.uses = (module.uses || []).concat(plugins || []);\n\n        if (module.uses.length === 0) {\n            Common.warn('Plugin.use:', Plugin.toString(module), 'does not specify any dependencies to install.');\n            return;\n        }\n\n        var dependencies = Plugin.dependencies(module),\n            sortedDependencies = Common.topologicalSort(dependencies),\n            status = [];\n\n        for (var i = 0; i < sortedDependencies.length; i += 1) {\n            if (sortedDependencies[i] === module.name) {\n                continue;\n            }\n\n            var plugin = Plugin.resolve(sortedDependencies[i]);\n\n            if (!plugin) {\n                status.push('❌ ' + sortedDependencies[i]);\n                continue;\n            }\n\n            if (Plugin.isUsed(module, plugin.name)) {\n                continue;\n            }\n\n            if (!Plugin.isFor(plugin, module)) {\n                Common.warn('Plugin.use:', Plugin.toString(plugin), 'is for', plugin.for, 'but installed on', Plugin.toString(module) + '.');\n                plugin._warned = true;\n            }\n\n            if (plugin.install) {\n                plugin.install(module);\n            } else {\n                Common.warn('Plugin.use:', Plugin.toString(plugin), 'does not specify an install function.');\n                plugin._warned = true;\n            }\n\n            if (plugin._warned) {\n                status.push('🔶 ' + Plugin.toString(plugin));\n                delete plugin._warned;\n            } else {\n                status.push('✅ ' + Plugin.toString(plugin));\n            }\n\n            module.used.push(plugin.name);\n        }\n\n        if (status.length > 0) {\n            Common.info(status.join('  '));\n        }\n    };\n\n    /**\n     * Recursively finds all of a module's dependencies and returns a flat dependency graph.\n     * @method dependencies\n     * @param module {} The module.\n     * @return {object} A dependency graph.\n     */\n    Plugin.dependencies = function(module, tracked) {\n        var parsedBase = Plugin.dependencyParse(module),\n            name = parsedBase.name;\n\n        tracked = tracked || {};\n\n        if (name in tracked) {\n            return;\n        }\n\n        module = Plugin.resolve(module) || module;\n\n        tracked[name] = Common.map(module.uses || [], function(dependency) {\n            if (Plugin.isPlugin(dependency)) {\n                Plugin.register(dependency);\n            }\n\n            var parsed = Plugin.dependencyParse(dependency),\n                resolved = Plugin.resolve(dependency);\n\n            if (resolved && !Plugin.versionSatisfies(resolved.version, parsed.range)) {\n                Common.warn(\n                    'Plugin.dependencies:', Plugin.toString(resolved), 'does not satisfy',\n                    Plugin.toString(parsed), 'used by', Plugin.toString(parsedBase) + '.'\n                );\n\n                resolved._warned = true;\n                module._warned = true;\n            } else if (!resolved) {\n                Common.warn(\n                    'Plugin.dependencies:', Plugin.toString(dependency), 'used by',\n                    Plugin.toString(parsedBase), 'could not be resolved.'\n                );\n\n                module._warned = true;\n            }\n\n            return parsed.name;\n        });\n\n        for (var i = 0; i < tracked[name].length; i += 1) {\n            Plugin.dependencies(tracked[name][i], tracked);\n        }\n\n        return tracked;\n    };\n\n    /**\n     * Parses a dependency string into its components.\n     * The `dependency` is a string of the format `'module-name'` or `'module-name@version'`.\n     * See documentation for `Plugin.versionParse` for a description of the format.\n     * This function can also handle dependencies that are already resolved (e.g. a module object).\n     * @method dependencyParse\n     * @param dependency {string} The dependency of the format `'module-name'` or `'module-name@version'`.\n     * @return {object} The dependency parsed into its components.\n     */\n    Plugin.dependencyParse = function(dependency) {\n        if (Common.isString(dependency)) {\n            var pattern = /^[\\w-]+(@(\\*|[\\^~]?\\d+\\.\\d+\\.\\d+(-[0-9A-Za-z-]+)?))?$/;\n\n            if (!pattern.test(dependency)) {\n                Common.warn('Plugin.dependencyParse:', dependency, 'is not a valid dependency string.');\n            }\n\n            return {\n                name: dependency.split('@')[0],\n                range: dependency.split('@')[1] || '*'\n            };\n        }\n\n        return {\n            name: dependency.name,\n            range: dependency.range || dependency.version\n        };\n    };\n\n    /**\n     * Parses a version string into its components.  \n     * Versions are strictly of the format `x.y.z` (as in [semver](http://semver.org/)).\n     * Versions may optionally have a prerelease tag in the format `x.y.z-alpha`.\n     * Ranges are a strict subset of [npm ranges](https://docs.npmjs.com/misc/semver#advanced-range-syntax).\n     * Only the following range types are supported:\n     * - Tilde ranges e.g. `~1.2.3`\n     * - Caret ranges e.g. `^1.2.3`\n     * - Exact version e.g. `1.2.3`\n     * - Any version `*`\n     * @method versionParse\n     * @param range {string} The version string.\n     * @return {object} The version range parsed into its components.\n     */\n    Plugin.versionParse = function(range) {\n        var pattern = /^\\*|[\\^~]?\\d+\\.\\d+\\.\\d+(-[0-9A-Za-z-]+)?$/;\n\n        if (!pattern.test(range)) {\n            Common.warn('Plugin.versionParse:', range, 'is not a valid version or range.');\n        }\n\n        var identifiers = range.split('-');\n        range = identifiers[0];\n\n        var isRange = isNaN(Number(range[0])),\n            version = isRange ? range.substr(1) : range,\n            parts = Common.map(version.split('.'), function(part) {\n                return Number(part);\n            });\n\n        return {\n            isRange: isRange,\n            version: version,\n            range: range,\n            operator: isRange ? range[0] : '',\n            parts: parts,\n            prerelease: identifiers[1],\n            number: parts[0] * 1e8 + parts[1] * 1e4 + parts[2]\n        };\n    };\n\n    /**\n     * Returns `true` if `version` satisfies the given `range`.\n     * See documentation for `Plugin.versionParse` for a description of the format.\n     * If a version or range is not specified, then any version (`*`) is assumed to satisfy.\n     * @method versionSatisfies\n     * @param version {string} The version string.\n     * @param range {string} The range string.\n     * @return {boolean} `true` if `version` satisfies `range`, otherwise `false`.\n     */\n    Plugin.versionSatisfies = function(version, range) {\n        range = range || '*';\n\n        var rangeParsed = Plugin.versionParse(range),\n            rangeParts = rangeParsed.parts,\n            versionParsed = Plugin.versionParse(version),\n            versionParts = versionParsed.parts;\n\n        if (rangeParsed.isRange) {\n            if (rangeParsed.operator === '*' || version === '*') {\n                return true;\n            }\n\n            if (rangeParsed.operator === '~') {\n                return versionParts[0] === rangeParts[0] && versionParts[1] === rangeParts[1] && versionParts[2] >= rangeParts[2];\n            }\n\n            if (rangeParsed.operator === '^') {\n                if (rangeParts[0] > 0) {\n                    return versionParts[0] === rangeParts[0] && versionParsed.number >= rangeParsed.number;\n                }\n\n                if (rangeParts[1] > 0) {\n                    return versionParts[1] === rangeParts[1] && versionParts[2] >= rangeParts[2];\n                }\n\n                return versionParts[2] === rangeParts[2];\n            }\n        }\n\n        return version === range || version === '*';\n    };\n\n})();\n\n},{\"./Common\":14}],21:[function(_dereq_,module,exports){\n/**\n* The `Matter.Runner` module is an optional utility which provides a game loop, \n* that handles continuously updating a `Matter.Engine` for you within a browser.\n* It is intended for development and debugging purposes, but may also be suitable for simple games.\n* If you are using your own game loop instead, then you do not need the `Matter.Runner` module.\n* Instead just call `Engine.update(engine, delta)` in your own loop.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Runner\n*/\n\nvar Runner = {};\n\nmodule.exports = Runner;\n\nvar Events = _dereq_('./Events');\nvar Engine = _dereq_('./Engine');\nvar Common = _dereq_('./Common');\n\n(function() {\n\n    var _requestAnimationFrame,\n        _cancelAnimationFrame;\n\n    if (typeof window !== 'undefined') {\n        _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\n                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame;\n   \n        _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame \n                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;\n    }\n\n    if (!_requestAnimationFrame) {\n        var _frameTimeout;\n\n        _requestAnimationFrame = function(callback){ \n            _frameTimeout = setTimeout(function() { \n                callback(Common.now()); \n            }, 1000 / 60);\n        };\n\n        _cancelAnimationFrame = function() {\n            clearTimeout(_frameTimeout);\n        };\n    }\n\n    /**\n     * Creates a new Runner. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * @method create\n     * @param {} options\n     */\n    Runner.create = function(options) {\n        var defaults = {\n            fps: 60,\n            correction: 1,\n            deltaSampleSize: 60,\n            counterTimestamp: 0,\n            frameCounter: 0,\n            deltaHistory: [],\n            timePrev: null,\n            timeScalePrev: 1,\n            frameRequestId: null,\n            isFixed: false,\n            enabled: true\n        };\n\n        var runner = Common.extend(defaults, options);\n\n        runner.delta = runner.delta || 1000 / runner.fps;\n        runner.deltaMin = runner.deltaMin || 1000 / runner.fps;\n        runner.deltaMax = runner.deltaMax || 1000 / (runner.fps * 0.5);\n        runner.fps = 1000 / runner.delta;\n\n        return runner;\n    };\n\n    /**\n     * Continuously ticks a `Matter.Engine` by calling `Runner.tick` on the `requestAnimationFrame` event.\n     * @method run\n     * @param {engine} engine\n     */\n    Runner.run = function(runner, engine) {\n        // create runner if engine is first argument\n        if (typeof runner.positionIterations !== 'undefined') {\n            engine = runner;\n            runner = Runner.create();\n        }\n\n        (function render(time){\n            runner.frameRequestId = _requestAnimationFrame(render);\n\n            if (time && runner.enabled) {\n                Runner.tick(runner, engine, time);\n            }\n        })();\n\n        return runner;\n    };\n\n    /**\n     * A game loop utility that updates the engine and renderer by one step (a 'tick').\n     * Features delta smoothing, time correction and fixed or dynamic timing.\n     * Triggers `beforeTick`, `tick` and `afterTick` events on the engine.\n     * Consider just `Engine.update(engine, delta)` if you're using your own loop.\n     * @method tick\n     * @param {runner} runner\n     * @param {engine} engine\n     * @param {number} time\n     */\n    Runner.tick = function(runner, engine, time) {\n        var timing = engine.timing,\n            correction = 1,\n            delta;\n\n        // create an event object\n        var event = {\n            timestamp: timing.timestamp\n        };\n\n        Events.trigger(runner, 'beforeTick', event);\n        Events.trigger(engine, 'beforeTick', event); // @deprecated\n\n        if (runner.isFixed) {\n            // fixed timestep\n            delta = runner.delta;\n        } else {\n            // dynamic timestep based on wall clock between calls\n            delta = (time - runner.timePrev) || runner.delta;\n            runner.timePrev = time;\n\n            // optimistically filter delta over a few frames, to improve stability\n            runner.deltaHistory.push(delta);\n            runner.deltaHistory = runner.deltaHistory.slice(-runner.deltaSampleSize);\n            delta = Math.min.apply(null, runner.deltaHistory);\n            \n            // limit delta\n            delta = delta < runner.deltaMin ? runner.deltaMin : delta;\n            delta = delta > runner.deltaMax ? runner.deltaMax : delta;\n\n            // correction for delta\n            correction = delta / runner.delta;\n\n            // update engine timing object\n            runner.delta = delta;\n        }\n\n        // time correction for time scaling\n        if (runner.timeScalePrev !== 0)\n            correction *= timing.timeScale / runner.timeScalePrev;\n\n        if (timing.timeScale === 0)\n            correction = 0;\n\n        runner.timeScalePrev = timing.timeScale;\n        runner.correction = correction;\n\n        // fps counter\n        runner.frameCounter += 1;\n        if (time - runner.counterTimestamp >= 1000) {\n            runner.fps = runner.frameCounter * ((time - runner.counterTimestamp) / 1000);\n            runner.counterTimestamp = time;\n            runner.frameCounter = 0;\n        }\n\n        Events.trigger(runner, 'tick', event);\n        Events.trigger(engine, 'tick', event); // @deprecated\n\n        // if world has been modified, clear the render scene graph\n        if (engine.world.isModified \n            && engine.render\n            && engine.render.controller\n            && engine.render.controller.clear) {\n            engine.render.controller.clear(engine.render); // @deprecated\n        }\n\n        // update\n        Events.trigger(runner, 'beforeUpdate', event);\n        Engine.update(engine, delta, correction);\n        Events.trigger(runner, 'afterUpdate', event);\n\n        // render\n        // @deprecated\n        if (engine.render && engine.render.controller) {\n            Events.trigger(runner, 'beforeRender', event);\n            Events.trigger(engine, 'beforeRender', event); // @deprecated\n\n            engine.render.controller.world(engine.render);\n\n            Events.trigger(runner, 'afterRender', event);\n            Events.trigger(engine, 'afterRender', event); // @deprecated\n        }\n\n        Events.trigger(runner, 'afterTick', event);\n        Events.trigger(engine, 'afterTick', event); // @deprecated\n    };\n\n    /**\n     * Ends execution of `Runner.run` on the given `runner`, by canceling the animation frame request event loop.\n     * If you wish to only temporarily pause the engine, see `engine.enabled` instead.\n     * @method stop\n     * @param {runner} runner\n     */\n    Runner.stop = function(runner) {\n        _cancelAnimationFrame(runner.frameRequestId);\n    };\n\n    /**\n     * Alias for `Runner.run`.\n     * @method start\n     * @param {runner} runner\n     * @param {engine} engine\n     */\n    Runner.start = function(runner, engine) {\n        Runner.run(runner, engine);\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired at the start of a tick, before any updates to the engine or timing\n    *\n    * @event beforeTick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine timing updated, but just before update\n    *\n    * @event tick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired at the end of a tick, after engine update and after rendering\n    *\n    * @event afterTick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired before update\n    *\n    * @event beforeUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after update\n    *\n    * @event afterUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired before rendering\n    *\n    * @event beforeRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    * @deprecated\n    */\n\n    /**\n    * Fired after rendering\n    *\n    * @event afterRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    * @deprecated\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * A flag that specifies whether the runner is running or not.\n     *\n     * @property enabled\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * A `Boolean` that specifies if the runner should use a fixed timestep (otherwise it is variable).\n     * If timing is fixed, then the apparent simulation speed will change depending on the frame rate (but behaviour will be deterministic).\n     * If the timing is variable, then the apparent simulation speed will be constant (approximately, but at the cost of determininism).\n     *\n     * @property isFixed\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A `Number` that specifies the time step between updates in milliseconds.\n     * If `engine.timing.isFixed` is set to `true`, then `delta` is fixed.\n     * If it is `false`, then `delta` can dynamically change to maintain the correct apparent simulation speed.\n     *\n     * @property delta\n     * @type number\n     * @default 1000 / 60\n     */\n\n})();\n\n},{\"./Common\":14,\"./Engine\":15,\"./Events\":16}],22:[function(_dereq_,module,exports){\n/**\n* The `Matter.Sleeping` module contains methods to manage the sleeping state of bodies.\n*\n* @class Sleeping\n*/\n\nvar Sleeping = {};\n\nmodule.exports = Sleeping;\n\nvar Events = _dereq_('./Events');\n\n(function() {\n\n    Sleeping._motionWakeThreshold = 0.18;\n    Sleeping._motionSleepThreshold = 0.08;\n    Sleeping._minBias = 0.9;\n\n    /**\n     * Puts bodies to sleep or wakes them up depending on their motion.\n     * @method update\n     * @param {body[]} bodies\n     * @param {number} timeScale\n     */\n    Sleeping.update = function(bodies, timeScale) {\n        var timeFactor = timeScale * timeScale * timeScale;\n\n        // update bodies sleeping status\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                motion = body.speed * body.speed + body.angularSpeed * body.angularSpeed;\n\n            // wake up bodies if they have a force applied\n            if (body.force.x !== 0 || body.force.y !== 0) {\n                Sleeping.set(body, false);\n                continue;\n            }\n\n            var minMotion = Math.min(body.motion, motion),\n                maxMotion = Math.max(body.motion, motion);\n        \n            // biased average motion estimation between frames\n            body.motion = Sleeping._minBias * minMotion + (1 - Sleeping._minBias) * maxMotion;\n            \n            if (body.sleepThreshold > 0 && body.motion < Sleeping._motionSleepThreshold * timeFactor) {\n                body.sleepCounter += 1;\n                \n                if (body.sleepCounter >= body.sleepThreshold)\n                    Sleeping.set(body, true);\n            } else if (body.sleepCounter > 0) {\n                body.sleepCounter -= 1;\n            }\n        }\n    };\n\n    /**\n     * Given a set of colliding pairs, wakes the sleeping bodies involved.\n     * @method afterCollisions\n     * @param {pair[]} pairs\n     * @param {number} timeScale\n     */\n    Sleeping.afterCollisions = function(pairs, timeScale) {\n        var timeFactor = timeScale * timeScale * timeScale;\n\n        // wake up bodies involved in collisions\n        for (var i = 0; i < pairs.length; i++) {\n            var pair = pairs[i];\n            \n            // don't wake inactive pairs\n            if (!pair.isActive)\n                continue;\n\n            var collision = pair.collision,\n                bodyA = collision.bodyA.parent, \n                bodyB = collision.bodyB.parent;\n        \n            // don't wake if at least one body is static\n            if ((bodyA.isSleeping && bodyB.isSleeping) || bodyA.isStatic || bodyB.isStatic)\n                continue;\n        \n            if (bodyA.isSleeping || bodyB.isSleeping) {\n                var sleepingBody = (bodyA.isSleeping && !bodyA.isStatic) ? bodyA : bodyB,\n                    movingBody = sleepingBody === bodyA ? bodyB : bodyA;\n\n                if (!sleepingBody.isStatic && movingBody.motion > Sleeping._motionWakeThreshold * timeFactor) {\n                    Sleeping.set(sleepingBody, false);\n                }\n            }\n        }\n    };\n  \n    /**\n     * Set a body as sleeping or awake.\n     * @method set\n     * @param {body} body\n     * @param {boolean} isSleeping\n     */\n    Sleeping.set = function(body, isSleeping) {\n        var wasSleeping = body.isSleeping;\n\n        if (isSleeping) {\n            body.isSleeping = true;\n            body.sleepCounter = body.sleepThreshold;\n\n            body.positionImpulse.x = 0;\n            body.positionImpulse.y = 0;\n\n            body.positionPrev.x = body.position.x;\n            body.positionPrev.y = body.position.y;\n\n            body.anglePrev = body.angle;\n            body.speed = 0;\n            body.angularSpeed = 0;\n            body.motion = 0;\n\n            if (!wasSleeping) {\n                Events.trigger(body, 'sleepStart');\n            }\n        } else {\n            body.isSleeping = false;\n            body.sleepCounter = 0;\n\n            if (wasSleeping) {\n                Events.trigger(body, 'sleepEnd');\n            }\n        }\n    };\n\n})();\n\n},{\"./Events\":16}],23:[function(_dereq_,module,exports){\n/**\n* The `Matter.Bodies` module contains factory methods for creating rigid body models \n* with commonly used body configurations (such as rectangles, circles and other polygons).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Bodies\n*/\n\n// TODO: true circle bodies\n\nvar Bodies = {};\n\nmodule.exports = Bodies;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Common = _dereq_('../core/Common');\nvar Body = _dereq_('../body/Body');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Vector = _dereq_('../geometry/Vector');\nvar decomp;\n\n(function() {\n\n    /**\n     * Creates a new rigid body model with a rectangle hull. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method rectangle\n     * @param {number} x\n     * @param {number} y\n     * @param {number} width\n     * @param {number} height\n     * @param {object} [options]\n     * @return {body} A new rectangle body\n     */\n    Bodies.rectangle = function(x, y, width, height, options) {\n        options = options || {};\n\n        var rectangle = { \n            label: 'Rectangle Body',\n            position: { x: x, y: y },\n            vertices: Vertices.fromPath('L 0 0 L ' + width + ' 0 L ' + width + ' ' + height + ' L 0 ' + height)\n        };\n\n        if (options.chamfer) {\n            var chamfer = options.chamfer;\n            rectangle.vertices = Vertices.chamfer(rectangle.vertices, chamfer.radius, \n                                    chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n            delete options.chamfer;\n        }\n\n        return Body.create(Common.extend({}, rectangle, options));\n    };\n    \n    /**\n     * Creates a new rigid body model with a trapezoid hull. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method trapezoid\n     * @param {number} x\n     * @param {number} y\n     * @param {number} width\n     * @param {number} height\n     * @param {number} slope\n     * @param {object} [options]\n     * @return {body} A new trapezoid body\n     */\n    Bodies.trapezoid = function(x, y, width, height, slope, options) {\n        options = options || {};\n\n        slope *= 0.5;\n        var roof = (1 - (slope * 2)) * width;\n        \n        var x1 = width * slope,\n            x2 = x1 + roof,\n            x3 = x2 + x1,\n            verticesPath;\n\n        if (slope < 0.5) {\n            verticesPath = 'L 0 0 L ' + x1 + ' ' + (-height) + ' L ' + x2 + ' ' + (-height) + ' L ' + x3 + ' 0';\n        } else {\n            verticesPath = 'L 0 0 L ' + x2 + ' ' + (-height) + ' L ' + x3 + ' 0';\n        }\n\n        var trapezoid = { \n            label: 'Trapezoid Body',\n            position: { x: x, y: y },\n            vertices: Vertices.fromPath(verticesPath)\n        };\n\n        if (options.chamfer) {\n            var chamfer = options.chamfer;\n            trapezoid.vertices = Vertices.chamfer(trapezoid.vertices, chamfer.radius, \n                                    chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n            delete options.chamfer;\n        }\n\n        return Body.create(Common.extend({}, trapezoid, options));\n    };\n\n    /**\n     * Creates a new rigid body model with a circle hull. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method circle\n     * @param {number} x\n     * @param {number} y\n     * @param {number} radius\n     * @param {object} [options]\n     * @param {number} [maxSides]\n     * @return {body} A new circle body\n     */\n    Bodies.circle = function(x, y, radius, options, maxSides) {\n        options = options || {};\n\n        var circle = {\n            label: 'Circle Body',\n            circleRadius: radius\n        };\n        \n        // approximate circles with polygons until true circles implemented in SAT\n        maxSides = maxSides || 25;\n        var sides = Math.ceil(Math.max(10, Math.min(maxSides, radius)));\n\n        // optimisation: always use even number of sides (half the number of unique axes)\n        if (sides % 2 === 1)\n            sides += 1;\n\n        return Bodies.polygon(x, y, sides, radius, Common.extend({}, circle, options));\n    };\n\n    /**\n     * Creates a new rigid body model with a regular polygon hull with the given number of sides. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method polygon\n     * @param {number} x\n     * @param {number} y\n     * @param {number} sides\n     * @param {number} radius\n     * @param {object} [options]\n     * @return {body} A new regular polygon body\n     */\n    Bodies.polygon = function(x, y, sides, radius, options) {\n        options = options || {};\n\n        if (sides < 3)\n            return Bodies.circle(x, y, radius, options);\n\n        var theta = 2 * Math.PI / sides,\n            path = '',\n            offset = theta * 0.5;\n\n        for (var i = 0; i < sides; i += 1) {\n            var angle = offset + (i * theta),\n                xx = Math.cos(angle) * radius,\n                yy = Math.sin(angle) * radius;\n\n            path += 'L ' + xx.toFixed(3) + ' ' + yy.toFixed(3) + ' ';\n        }\n\n        var polygon = { \n            label: 'Polygon Body',\n            position: { x: x, y: y },\n            vertices: Vertices.fromPath(path)\n        };\n\n        if (options.chamfer) {\n            var chamfer = options.chamfer;\n            polygon.vertices = Vertices.chamfer(polygon.vertices, chamfer.radius, \n                                    chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n            delete options.chamfer;\n        }\n\n        return Body.create(Common.extend({}, polygon, options));\n    };\n\n    /**\n     * Creates a body using the supplied vertices (or an array containing multiple sets of vertices).\n     * If the vertices are convex, they will pass through as supplied.\n     * Otherwise if the vertices are concave, they will be decomposed if [poly-decomp.js](https://github.com/schteppe/poly-decomp.js) is available.\n     * Note that this process is not guaranteed to support complex sets of vertices (e.g. those with holes may fail).\n     * By default the decomposition will discard collinear edges (to improve performance).\n     * It can also optionally discard any parts that have an area less than `minimumArea`.\n     * If the vertices can not be decomposed, the result will fall back to using the convex hull.\n     * The options parameter is an object that specifies any `Matter.Body` properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method fromVertices\n     * @param {number} x\n     * @param {number} y\n     * @param [[vector]] vertexSets\n     * @param {object} [options]\n     * @param {bool} [flagInternal=false]\n     * @param {number} [removeCollinear=0.01]\n     * @param {number} [minimumArea=10]\n     * @return {body}\n     */\n    Bodies.fromVertices = function(x, y, vertexSets, options, flagInternal, removeCollinear, minimumArea) {\n        if (!decomp) {\n            decomp = Common._requireGlobal('decomp', 'poly-decomp');\n        }\n\n        var body,\n            parts,\n            isConvex,\n            vertices,\n            i,\n            j,\n            k,\n            v,\n            z;\n\n        options = options || {};\n        parts = [];\n\n        flagInternal = typeof flagInternal !== 'undefined' ? flagInternal : false;\n        removeCollinear = typeof removeCollinear !== 'undefined' ? removeCollinear : 0.01;\n        minimumArea = typeof minimumArea !== 'undefined' ? minimumArea : 10;\n\n        if (!decomp) {\n            Common.warn('Bodies.fromVertices: poly-decomp.js required. Could not decompose vertices. Fallback to convex hull.');\n        }\n\n        // ensure vertexSets is an array of arrays\n        if (!Common.isArray(vertexSets[0])) {\n            vertexSets = [vertexSets];\n        }\n\n        for (v = 0; v < vertexSets.length; v += 1) {\n            vertices = vertexSets[v];\n            isConvex = Vertices.isConvex(vertices);\n\n            if (isConvex || !decomp) {\n                if (isConvex) {\n                    vertices = Vertices.clockwiseSort(vertices);\n                } else {\n                    // fallback to convex hull when decomposition is not possible\n                    vertices = Vertices.hull(vertices);\n                }\n\n                parts.push({\n                    position: { x: x, y: y },\n                    vertices: vertices\n                });\n            } else {\n                // initialise a decomposition\n                var concave = vertices.map(function(vertex) {\n                    return [vertex.x, vertex.y];\n                });\n\n                // vertices are concave and simple, we can decompose into parts\n                decomp.makeCCW(concave);\n                if (removeCollinear !== false)\n                    decomp.removeCollinearPoints(concave, removeCollinear);\n\n                // use the quick decomposition algorithm (Bayazit)\n                var decomposed = decomp.quickDecomp(concave);\n\n                // for each decomposed chunk\n                for (i = 0; i < decomposed.length; i++) {\n                    var chunk = decomposed[i];\n\n                    // convert vertices into the correct structure\n                    var chunkVertices = chunk.map(function(vertices) {\n                        return {\n                            x: vertices[0],\n                            y: vertices[1]\n                        };\n                    });\n\n                    // skip small chunks\n                    if (minimumArea > 0 && Vertices.area(chunkVertices) < minimumArea)\n                        continue;\n\n                    // create a compound part\n                    parts.push({\n                        position: Vertices.centre(chunkVertices),\n                        vertices: chunkVertices\n                    });\n                }\n            }\n        }\n\n        // create body parts\n        for (i = 0; i < parts.length; i++) {\n            parts[i] = Body.create(Common.extend(parts[i], options));\n        }\n\n        // flag internal edges (coincident part edges)\n        if (flagInternal) {\n            var coincident_max_dist = 5;\n\n            for (i = 0; i < parts.length; i++) {\n                var partA = parts[i];\n\n                for (j = i + 1; j < parts.length; j++) {\n                    var partB = parts[j];\n\n                    if (Bounds.overlaps(partA.bounds, partB.bounds)) {\n                        var pav = partA.vertices,\n                            pbv = partB.vertices;\n\n                        // iterate vertices of both parts\n                        for (k = 0; k < partA.vertices.length; k++) {\n                            for (z = 0; z < partB.vertices.length; z++) {\n                                // find distances between the vertices\n                                var da = Vector.magnitudeSquared(Vector.sub(pav[(k + 1) % pav.length], pbv[z])),\n                                    db = Vector.magnitudeSquared(Vector.sub(pav[k], pbv[(z + 1) % pbv.length]));\n\n                                // if both vertices are very close, consider the edge concident (internal)\n                                if (da < coincident_max_dist && db < coincident_max_dist) {\n                                    pav[k].isInternal = true;\n                                    pbv[z].isInternal = true;\n                                }\n                            }\n                        }\n\n                    }\n                }\n            }\n        }\n\n        if (parts.length > 1) {\n            // create the parent body to be returned, that contains generated compound parts\n            body = Body.create(Common.extend({ parts: parts.slice(0) }, options));\n            Body.setPosition(body, { x: x, y: y });\n\n            return body;\n        } else {\n            return parts[0];\n        }\n    };\n\n})();\n\n},{\"../body/Body\":1,\"../core/Common\":14,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29}],24:[function(_dereq_,module,exports){\n/**\n* The `Matter.Composites` module contains factory methods for creating composite bodies\n* with commonly used configurations (such as stacks and chains).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Composites\n*/\n\nvar Composites = {};\n\nmodule.exports = Composites;\n\nvar Composite = _dereq_('../body/Composite');\nvar Constraint = _dereq_('../constraint/Constraint');\nvar Common = _dereq_('../core/Common');\nvar Body = _dereq_('../body/Body');\nvar Bodies = _dereq_('./Bodies');\n\n(function() {\n\n    /**\n     * Create a new composite containing bodies created in the callback in a grid arrangement.\n     * This function uses the body's bounds to prevent overlaps.\n     * @method stack\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {function} callback\n     * @return {composite} A new composite containing objects created in the callback\n     */\n    Composites.stack = function(xx, yy, columns, rows, columnGap, rowGap, callback) {\n        var stack = Composite.create({ label: 'Stack' }),\n            x = xx,\n            y = yy,\n            lastBody,\n            i = 0;\n\n        for (var row = 0; row < rows; row++) {\n            var maxHeight = 0;\n            \n            for (var column = 0; column < columns; column++) {\n                var body = callback(x, y, column, row, lastBody, i);\n                    \n                if (body) {\n                    var bodyHeight = body.bounds.max.y - body.bounds.min.y,\n                        bodyWidth = body.bounds.max.x - body.bounds.min.x; \n\n                    if (bodyHeight > maxHeight)\n                        maxHeight = bodyHeight;\n                    \n                    Body.translate(body, { x: bodyWidth * 0.5, y: bodyHeight * 0.5 });\n\n                    x = body.bounds.max.x + columnGap;\n\n                    Composite.addBody(stack, body);\n                    \n                    lastBody = body;\n                    i += 1;\n                } else {\n                    x += columnGap;\n                }\n            }\n            \n            y += maxHeight + rowGap;\n            x = xx;\n        }\n\n        return stack;\n    };\n    \n    /**\n     * Chains all bodies in the given composite together using constraints.\n     * @method chain\n     * @param {composite} composite\n     * @param {number} xOffsetA\n     * @param {number} yOffsetA\n     * @param {number} xOffsetB\n     * @param {number} yOffsetB\n     * @param {object} options\n     * @return {composite} A new composite containing objects chained together with constraints\n     */\n    Composites.chain = function(composite, xOffsetA, yOffsetA, xOffsetB, yOffsetB, options) {\n        var bodies = composite.bodies;\n        \n        for (var i = 1; i < bodies.length; i++) {\n            var bodyA = bodies[i - 1],\n                bodyB = bodies[i],\n                bodyAHeight = bodyA.bounds.max.y - bodyA.bounds.min.y,\n                bodyAWidth = bodyA.bounds.max.x - bodyA.bounds.min.x, \n                bodyBHeight = bodyB.bounds.max.y - bodyB.bounds.min.y,\n                bodyBWidth = bodyB.bounds.max.x - bodyB.bounds.min.x;\n        \n            var defaults = {\n                bodyA: bodyA,\n                pointA: { x: bodyAWidth * xOffsetA, y: bodyAHeight * yOffsetA },\n                bodyB: bodyB,\n                pointB: { x: bodyBWidth * xOffsetB, y: bodyBHeight * yOffsetB }\n            };\n            \n            var constraint = Common.extend(defaults, options);\n        \n            Composite.addConstraint(composite, Constraint.create(constraint));\n        }\n\n        composite.label += ' Chain';\n        \n        return composite;\n    };\n\n    /**\n     * Connects bodies in the composite with constraints in a grid pattern, with optional cross braces.\n     * @method mesh\n     * @param {composite} composite\n     * @param {number} columns\n     * @param {number} rows\n     * @param {boolean} crossBrace\n     * @param {object} options\n     * @return {composite} The composite containing objects meshed together with constraints\n     */\n    Composites.mesh = function(composite, columns, rows, crossBrace, options) {\n        var bodies = composite.bodies,\n            row,\n            col,\n            bodyA,\n            bodyB,\n            bodyC;\n        \n        for (row = 0; row < rows; row++) {\n            for (col = 1; col < columns; col++) {\n                bodyA = bodies[(col - 1) + (row * columns)];\n                bodyB = bodies[col + (row * columns)];\n                Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyA, bodyB: bodyB }, options)));\n            }\n\n            if (row > 0) {\n                for (col = 0; col < columns; col++) {\n                    bodyA = bodies[col + ((row - 1) * columns)];\n                    bodyB = bodies[col + (row * columns)];\n                    Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyA, bodyB: bodyB }, options)));\n\n                    if (crossBrace && col > 0) {\n                        bodyC = bodies[(col - 1) + ((row - 1) * columns)];\n                        Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyC, bodyB: bodyB }, options)));\n                    }\n\n                    if (crossBrace && col < columns - 1) {\n                        bodyC = bodies[(col + 1) + ((row - 1) * columns)];\n                        Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyC, bodyB: bodyB }, options)));\n                    }\n                }\n            }\n        }\n\n        composite.label += ' Mesh';\n        \n        return composite;\n    };\n    \n    /**\n     * Create a new composite containing bodies created in the callback in a pyramid arrangement.\n     * This function uses the body's bounds to prevent overlaps.\n     * @method pyramid\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {function} callback\n     * @return {composite} A new composite containing objects created in the callback\n     */\n    Composites.pyramid = function(xx, yy, columns, rows, columnGap, rowGap, callback) {\n        return Composites.stack(xx, yy, columns, rows, columnGap, rowGap, function(x, y, column, row, lastBody, i) {\n            var actualRows = Math.min(rows, Math.ceil(columns / 2)),\n                lastBodyWidth = lastBody ? lastBody.bounds.max.x - lastBody.bounds.min.x : 0;\n            \n            if (row > actualRows)\n                return;\n            \n            // reverse row order\n            row = actualRows - row;\n            \n            var start = row,\n                end = columns - 1 - row;\n\n            if (column < start || column > end)\n                return;\n            \n            // retroactively fix the first body's position, since width was unknown\n            if (i === 1) {\n                Body.translate(lastBody, { x: (column + (columns % 2 === 1 ? 1 : -1)) * lastBodyWidth, y: 0 });\n            }\n\n            var xOffset = lastBody ? column * lastBodyWidth : 0;\n            \n            return callback(xx + xOffset + column * columnGap, y, column, row, lastBody, i);\n        });\n    };\n\n    /**\n     * Creates a composite with a Newton's Cradle setup of bodies and constraints.\n     * @method newtonsCradle\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} number\n     * @param {number} size\n     * @param {number} length\n     * @return {composite} A new composite newtonsCradle body\n     */\n    Composites.newtonsCradle = function(xx, yy, number, size, length) {\n        var newtonsCradle = Composite.create({ label: 'Newtons Cradle' });\n\n        for (var i = 0; i < number; i++) {\n            var separation = 1.9,\n                circle = Bodies.circle(xx + i * (size * separation), yy + length, size, \n                            { inertia: Infinity, restitution: 1, friction: 0, frictionAir: 0.0001, slop: 1 }),\n                constraint = Constraint.create({ pointA: { x: xx + i * (size * separation), y: yy }, bodyB: circle });\n\n            Composite.addBody(newtonsCradle, circle);\n            Composite.addConstraint(newtonsCradle, constraint);\n        }\n\n        return newtonsCradle;\n    };\n    \n    /**\n     * Creates a composite with simple car setup of bodies and constraints.\n     * @method car\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} width\n     * @param {number} height\n     * @param {number} wheelSize\n     * @return {composite} A new composite car body\n     */\n    Composites.car = function(xx, yy, width, height, wheelSize) {\n        var group = Body.nextGroup(true),\n            wheelBase = 20,\n            wheelAOffset = -width * 0.5 + wheelBase,\n            wheelBOffset = width * 0.5 - wheelBase,\n            wheelYOffset = 0;\n    \n        var car = Composite.create({ label: 'Car' }),\n            body = Bodies.rectangle(xx, yy, width, height, { \n                collisionFilter: {\n                    group: group\n                },\n                chamfer: {\n                    radius: height * 0.5\n                },\n                density: 0.0002\n            });\n    \n        var wheelA = Bodies.circle(xx + wheelAOffset, yy + wheelYOffset, wheelSize, { \n            collisionFilter: {\n                group: group\n            },\n            friction: 0.8\n        });\n                    \n        var wheelB = Bodies.circle(xx + wheelBOffset, yy + wheelYOffset, wheelSize, { \n            collisionFilter: {\n                group: group\n            },\n            friction: 0.8\n        });\n                    \n        var axelA = Constraint.create({\n            bodyB: body,\n            pointB: { x: wheelAOffset, y: wheelYOffset },\n            bodyA: wheelA,\n            stiffness: 1,\n            length: 0\n        });\n                        \n        var axelB = Constraint.create({\n            bodyB: body,\n            pointB: { x: wheelBOffset, y: wheelYOffset },\n            bodyA: wheelB,\n            stiffness: 1,\n            length: 0\n        });\n        \n        Composite.addBody(car, body);\n        Composite.addBody(car, wheelA);\n        Composite.addBody(car, wheelB);\n        Composite.addConstraint(car, axelA);\n        Composite.addConstraint(car, axelB);\n\n        return car;\n    };\n\n    /**\n     * Creates a simple soft body like object.\n     * @method softBody\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {boolean} crossBrace\n     * @param {number} particleRadius\n     * @param {} particleOptions\n     * @param {} constraintOptions\n     * @return {composite} A new composite softBody\n     */\n    Composites.softBody = function(xx, yy, columns, rows, columnGap, rowGap, crossBrace, particleRadius, particleOptions, constraintOptions) {\n        particleOptions = Common.extend({ inertia: Infinity }, particleOptions);\n        constraintOptions = Common.extend({ stiffness: 0.2, render: { type: 'line', anchors: false } }, constraintOptions);\n\n        var softBody = Composites.stack(xx, yy, columns, rows, columnGap, rowGap, function(x, y) {\n            return Bodies.circle(x, y, particleRadius, particleOptions);\n        });\n\n        Composites.mesh(softBody, columns, rows, crossBrace, constraintOptions);\n\n        softBody.label = 'Soft Body';\n\n        return softBody;\n    };\n\n})();\n\n},{\"../body/Body\":1,\"../body/Composite\":2,\"../constraint/Constraint\":12,\"../core/Common\":14,\"./Bodies\":23}],25:[function(_dereq_,module,exports){\n/**\n* The `Matter.Axes` module contains methods for creating and manipulating sets of axes.\n*\n* @class Axes\n*/\n\nvar Axes = {};\n\nmodule.exports = Axes;\n\nvar Vector = _dereq_('../geometry/Vector');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a new set of axes from the given vertices.\n     * @method fromVertices\n     * @param {vertices} vertices\n     * @return {axes} A new axes from the given vertices\n     */\n    Axes.fromVertices = function(vertices) {\n        var axes = {};\n\n        // find the unique axes, using edge normal gradients\n        for (var i = 0; i < vertices.length; i++) {\n            var j = (i + 1) % vertices.length, \n                normal = Vector.normalise({ \n                    x: vertices[j].y - vertices[i].y, \n                    y: vertices[i].x - vertices[j].x\n                }),\n                gradient = (normal.y === 0) ? Infinity : (normal.x / normal.y);\n            \n            // limit precision\n            gradient = gradient.toFixed(3).toString();\n            axes[gradient] = normal;\n        }\n\n        return Common.values(axes);\n    };\n\n    /**\n     * Rotates a set of axes by the given angle.\n     * @method rotate\n     * @param {axes} axes\n     * @param {number} angle\n     */\n    Axes.rotate = function(axes, angle) {\n        if (angle === 0)\n            return;\n        \n        var cos = Math.cos(angle),\n            sin = Math.sin(angle);\n\n        for (var i = 0; i < axes.length; i++) {\n            var axis = axes[i],\n                xx;\n            xx = axis.x * cos - axis.y * sin;\n            axis.y = axis.x * sin + axis.y * cos;\n            axis.x = xx;\n        }\n    };\n\n})();\n\n},{\"../core/Common\":14,\"../geometry/Vector\":28}],26:[function(_dereq_,module,exports){\n/**\n* The `Matter.Bounds` module contains methods for creating and manipulating axis-aligned bounding boxes (AABB).\n*\n* @class Bounds\n*/\n\nvar Bounds = {};\n\nmodule.exports = Bounds;\n\n(function() {\n\n    /**\n     * Creates a new axis-aligned bounding box (AABB) for the given vertices.\n     * @method create\n     * @param {vertices} vertices\n     * @return {bounds} A new bounds object\n     */\n    Bounds.create = function(vertices) {\n        var bounds = { \n            min: { x: 0, y: 0 }, \n            max: { x: 0, y: 0 }\n        };\n\n        if (vertices)\n            Bounds.update(bounds, vertices);\n        \n        return bounds;\n    };\n\n    /**\n     * Updates bounds using the given vertices and extends the bounds given a velocity.\n     * @method update\n     * @param {bounds} bounds\n     * @param {vertices} vertices\n     * @param {vector} velocity\n     */\n    Bounds.update = function(bounds, vertices, velocity) {\n        bounds.min.x = Infinity;\n        bounds.max.x = -Infinity;\n        bounds.min.y = Infinity;\n        bounds.max.y = -Infinity;\n\n        for (var i = 0; i < vertices.length; i++) {\n            var vertex = vertices[i];\n            if (vertex.x > bounds.max.x) bounds.max.x = vertex.x;\n            if (vertex.x < bounds.min.x) bounds.min.x = vertex.x;\n            if (vertex.y > bounds.max.y) bounds.max.y = vertex.y;\n            if (vertex.y < bounds.min.y) bounds.min.y = vertex.y;\n        }\n        \n        if (velocity) {\n            if (velocity.x > 0) {\n                bounds.max.x += velocity.x;\n            } else {\n                bounds.min.x += velocity.x;\n            }\n            \n            if (velocity.y > 0) {\n                bounds.max.y += velocity.y;\n            } else {\n                bounds.min.y += velocity.y;\n            }\n        }\n    };\n\n    /**\n     * Returns true if the bounds contains the given point.\n     * @method contains\n     * @param {bounds} bounds\n     * @param {vector} point\n     * @return {boolean} True if the bounds contain the point, otherwise false\n     */\n    Bounds.contains = function(bounds, point) {\n        return point.x >= bounds.min.x && point.x <= bounds.max.x \n               && point.y >= bounds.min.y && point.y <= bounds.max.y;\n    };\n\n    /**\n     * Returns true if the two bounds intersect.\n     * @method overlaps\n     * @param {bounds} boundsA\n     * @param {bounds} boundsB\n     * @return {boolean} True if the bounds overlap, otherwise false\n     */\n    Bounds.overlaps = function(boundsA, boundsB) {\n        return (boundsA.min.x <= boundsB.max.x && boundsA.max.x >= boundsB.min.x\n                && boundsA.max.y >= boundsB.min.y && boundsA.min.y <= boundsB.max.y);\n    };\n\n    /**\n     * Translates the bounds by the given vector.\n     * @method translate\n     * @param {bounds} bounds\n     * @param {vector} vector\n     */\n    Bounds.translate = function(bounds, vector) {\n        bounds.min.x += vector.x;\n        bounds.max.x += vector.x;\n        bounds.min.y += vector.y;\n        bounds.max.y += vector.y;\n    };\n\n    /**\n     * Shifts the bounds to the given position.\n     * @method shift\n     * @param {bounds} bounds\n     * @param {vector} position\n     */\n    Bounds.shift = function(bounds, position) {\n        var deltaX = bounds.max.x - bounds.min.x,\n            deltaY = bounds.max.y - bounds.min.y;\n            \n        bounds.min.x = position.x;\n        bounds.max.x = position.x + deltaX;\n        bounds.min.y = position.y;\n        bounds.max.y = position.y + deltaY;\n    };\n    \n})();\n\n},{}],27:[function(_dereq_,module,exports){\n/**\n* The `Matter.Svg` module contains methods for converting SVG images into an array of vector points.\n*\n* To use this module you also need the SVGPathSeg polyfill: https://github.com/progers/pathseg\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Svg\n*/\n\nvar Svg = {};\n\nmodule.exports = Svg;\n\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Converts an SVG path into an array of vector points.\n     * If the input path forms a concave shape, you must decompose the result into convex parts before use.\n     * See `Bodies.fromVertices` which provides support for this.\n     * Note that this function is not guaranteed to support complex paths (such as those with holes).\n     * You must load the `pathseg.js` polyfill on newer browsers.\n     * @method pathToVertices\n     * @param {SVGPathElement} path\n     * @param {Number} [sampleLength=15]\n     * @return {Vector[]} points\n     */\n    Svg.pathToVertices = function(path, sampleLength) {\n        if (typeof window !== 'undefined' && !('SVGPathSeg' in window)) {\n            Common.warn('Svg.pathToVertices: SVGPathSeg not defined, a polyfill is required.');\n        }\n\n        // https://github.com/wout/svg.topoly.js/blob/master/svg.topoly.js\n        var i, il, total, point, segment, segments, \n            segmentsQueue, lastSegment, \n            lastPoint, segmentIndex, points = [],\n            lx, ly, length = 0, x = 0, y = 0;\n\n        sampleLength = sampleLength || 15;\n\n        var addPoint = function(px, py, pathSegType) {\n            // all odd-numbered path types are relative except PATHSEG_CLOSEPATH (1)\n            var isRelative = pathSegType % 2 === 1 && pathSegType > 1;\n\n            // when the last point doesn't equal the current point add the current point\n            if (!lastPoint || px != lastPoint.x || py != lastPoint.y) {\n                if (lastPoint && isRelative) {\n                    lx = lastPoint.x;\n                    ly = lastPoint.y;\n                } else {\n                    lx = 0;\n                    ly = 0;\n                }\n\n                var point = {\n                    x: lx + px,\n                    y: ly + py\n                };\n\n                // set last point\n                if (isRelative || !lastPoint) {\n                    lastPoint = point;\n                }\n\n                points.push(point);\n\n                x = lx + px;\n                y = ly + py;\n            }\n        };\n\n        var addSegmentPoint = function(segment) {\n            var segType = segment.pathSegTypeAsLetter.toUpperCase();\n\n            // skip path ends\n            if (segType === 'Z') \n                return;\n\n            // map segment to x and y\n            switch (segType) {\n\n            case 'M':\n            case 'L':\n            case 'T':\n            case 'C':\n            case 'S':\n            case 'Q':\n                x = segment.x;\n                y = segment.y;\n                break;\n            case 'H':\n                x = segment.x;\n                break;\n            case 'V':\n                y = segment.y;\n                break;\n            }\n\n            addPoint(x, y, segment.pathSegType);\n        };\n\n        // ensure path is absolute\n        Svg._svgPathToAbsolute(path);\n\n        // get total length\n        total = path.getTotalLength();\n\n        // queue segments\n        segments = [];\n        for (i = 0; i < path.pathSegList.numberOfItems; i += 1)\n            segments.push(path.pathSegList.getItem(i));\n\n        segmentsQueue = segments.concat();\n\n        // sample through path\n        while (length < total) {\n            // get segment at position\n            segmentIndex = path.getPathSegAtLength(length);\n            segment = segments[segmentIndex];\n\n            // new segment\n            if (segment != lastSegment) {\n                while (segmentsQueue.length && segmentsQueue[0] != segment)\n                    addSegmentPoint(segmentsQueue.shift());\n\n                lastSegment = segment;\n            }\n\n            // add points in between when curving\n            // TODO: adaptive sampling\n            switch (segment.pathSegTypeAsLetter.toUpperCase()) {\n\n            case 'C':\n            case 'T':\n            case 'S':\n            case 'Q':\n            case 'A':\n                point = path.getPointAtLength(length);\n                addPoint(point.x, point.y, 0);\n                break;\n\n            }\n\n            // increment by sample value\n            length += sampleLength;\n        }\n\n        // add remaining segments not passed by sampling\n        for (i = 0, il = segmentsQueue.length; i < il; ++i)\n            addSegmentPoint(segmentsQueue[i]);\n\n        return points;\n    };\n\n    Svg._svgPathToAbsolute = function(path) {\n        // http://phrogz.net/convert-svg-path-to-all-absolute-commands\n        // Copyright (c) Gavin Kistner\n        // http://phrogz.net/js/_ReuseLicense.txt\n        // Modifications: tidy formatting and naming\n        var x0, y0, x1, y1, x2, y2, segs = path.pathSegList,\n            x = 0, y = 0, len = segs.numberOfItems;\n\n        for (var i = 0; i < len; ++i) {\n            var seg = segs.getItem(i),\n                segType = seg.pathSegTypeAsLetter;\n\n            if (/[MLHVCSQTA]/.test(segType)) {\n                if ('x' in seg) x = seg.x;\n                if ('y' in seg) y = seg.y;\n            } else {\n                if ('x1' in seg) x1 = x + seg.x1;\n                if ('x2' in seg) x2 = x + seg.x2;\n                if ('y1' in seg) y1 = y + seg.y1;\n                if ('y2' in seg) y2 = y + seg.y2;\n                if ('x' in seg) x += seg.x;\n                if ('y' in seg) y += seg.y;\n\n                switch (segType) {\n\n                case 'm':\n                    segs.replaceItem(path.createSVGPathSegMovetoAbs(x, y), i);\n                    break;\n                case 'l':\n                    segs.replaceItem(path.createSVGPathSegLinetoAbs(x, y), i);\n                    break;\n                case 'h':\n                    segs.replaceItem(path.createSVGPathSegLinetoHorizontalAbs(x), i);\n                    break;\n                case 'v':\n                    segs.replaceItem(path.createSVGPathSegLinetoVerticalAbs(y), i);\n                    break;\n                case 'c':\n                    segs.replaceItem(path.createSVGPathSegCurvetoCubicAbs(x, y, x1, y1, x2, y2), i);\n                    break;\n                case 's':\n                    segs.replaceItem(path.createSVGPathSegCurvetoCubicSmoothAbs(x, y, x2, y2), i);\n                    break;\n                case 'q':\n                    segs.replaceItem(path.createSVGPathSegCurvetoQuadraticAbs(x, y, x1, y1), i);\n                    break;\n                case 't':\n                    segs.replaceItem(path.createSVGPathSegCurvetoQuadraticSmoothAbs(x, y), i);\n                    break;\n                case 'a':\n                    segs.replaceItem(path.createSVGPathSegArcAbs(x, y, seg.r1, seg.r2, seg.angle, seg.largeArcFlag, seg.sweepFlag), i);\n                    break;\n                case 'z':\n                case 'Z':\n                    x = x0;\n                    y = y0;\n                    break;\n\n                }\n            }\n\n            if (segType == 'M' || segType == 'm') {\n                x0 = x;\n                y0 = y;\n            }\n        }\n    };\n\n})();\n},{\"../core/Common\":14,\"../geometry/Bounds\":26}],28:[function(_dereq_,module,exports){\n/**\n* The `Matter.Vector` module contains methods for creating and manipulating vectors.\n* Vectors are the basis of all the geometry related operations in the engine.\n* A `Matter.Vector` object is of the form `{ x: 0, y: 0 }`.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Vector\n*/\n\n// TODO: consider params for reusing vector objects\n\nvar Vector = {};\n\nmodule.exports = Vector;\n\n(function() {\n\n    /**\n     * Creates a new vector.\n     * @method create\n     * @param {number} x\n     * @param {number} y\n     * @return {vector} A new vector\n     */\n    Vector.create = function(x, y) {\n        return { x: x || 0, y: y || 0 };\n    };\n\n    /**\n     * Returns a new vector with `x` and `y` copied from the given `vector`.\n     * @method clone\n     * @param {vector} vector\n     * @return {vector} A new cloned vector\n     */\n    Vector.clone = function(vector) {\n        return { x: vector.x, y: vector.y };\n    };\n\n    /**\n     * Returns the magnitude (length) of a vector.\n     * @method magnitude\n     * @param {vector} vector\n     * @return {number} The magnitude of the vector\n     */\n    Vector.magnitude = function(vector) {\n        return Math.sqrt((vector.x * vector.x) + (vector.y * vector.y));\n    };\n\n    /**\n     * Returns the magnitude (length) of a vector (therefore saving a `sqrt` operation).\n     * @method magnitudeSquared\n     * @param {vector} vector\n     * @return {number} The squared magnitude of the vector\n     */\n    Vector.magnitudeSquared = function(vector) {\n        return (vector.x * vector.x) + (vector.y * vector.y);\n    };\n\n    /**\n     * Rotates the vector about (0, 0) by specified angle.\n     * @method rotate\n     * @param {vector} vector\n     * @param {number} angle\n     * @param {vector} [output]\n     * @return {vector} The vector rotated about (0, 0)\n     */\n    Vector.rotate = function(vector, angle, output) {\n        var cos = Math.cos(angle), sin = Math.sin(angle);\n        if (!output) output = {};\n        var x = vector.x * cos - vector.y * sin;\n        output.y = vector.x * sin + vector.y * cos;\n        output.x = x;\n        return output;\n    };\n\n    /**\n     * Rotates the vector about a specified point by specified angle.\n     * @method rotateAbout\n     * @param {vector} vector\n     * @param {number} angle\n     * @param {vector} point\n     * @param {vector} [output]\n     * @return {vector} A new vector rotated about the point\n     */\n    Vector.rotateAbout = function(vector, angle, point, output) {\n        var cos = Math.cos(angle), sin = Math.sin(angle);\n        if (!output) output = {};\n        var x = point.x + ((vector.x - point.x) * cos - (vector.y - point.y) * sin);\n        output.y = point.y + ((vector.x - point.x) * sin + (vector.y - point.y) * cos);\n        output.x = x;\n        return output;\n    };\n\n    /**\n     * Normalises a vector (such that its magnitude is `1`).\n     * @method normalise\n     * @param {vector} vector\n     * @return {vector} A new vector normalised\n     */\n    Vector.normalise = function(vector) {\n        var magnitude = Vector.magnitude(vector);\n        if (magnitude === 0)\n            return { x: 0, y: 0 };\n        return { x: vector.x / magnitude, y: vector.y / magnitude };\n    };\n\n    /**\n     * Returns the dot-product of two vectors.\n     * @method dot\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The dot product of the two vectors\n     */\n    Vector.dot = function(vectorA, vectorB) {\n        return (vectorA.x * vectorB.x) + (vectorA.y * vectorB.y);\n    };\n\n    /**\n     * Returns the cross-product of two vectors.\n     * @method cross\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The cross product of the two vectors\n     */\n    Vector.cross = function(vectorA, vectorB) {\n        return (vectorA.x * vectorB.y) - (vectorA.y * vectorB.x);\n    };\n\n    /**\n     * Returns the cross-product of three vectors.\n     * @method cross3\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} vectorC\n     * @return {number} The cross product of the three vectors\n     */\n    Vector.cross3 = function(vectorA, vectorB, vectorC) {\n        return (vectorB.x - vectorA.x) * (vectorC.y - vectorA.y) - (vectorB.y - vectorA.y) * (vectorC.x - vectorA.x);\n    };\n\n    /**\n     * Adds the two vectors.\n     * @method add\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} [output]\n     * @return {vector} A new vector of vectorA and vectorB added\n     */\n    Vector.add = function(vectorA, vectorB, output) {\n        if (!output) output = {};\n        output.x = vectorA.x + vectorB.x;\n        output.y = vectorA.y + vectorB.y;\n        return output;\n    };\n\n    /**\n     * Subtracts the two vectors.\n     * @method sub\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} [output]\n     * @return {vector} A new vector of vectorA and vectorB subtracted\n     */\n    Vector.sub = function(vectorA, vectorB, output) {\n        if (!output) output = {};\n        output.x = vectorA.x - vectorB.x;\n        output.y = vectorA.y - vectorB.y;\n        return output;\n    };\n\n    /**\n     * Multiplies a vector and a scalar.\n     * @method mult\n     * @param {vector} vector\n     * @param {number} scalar\n     * @return {vector} A new vector multiplied by scalar\n     */\n    Vector.mult = function(vector, scalar) {\n        return { x: vector.x * scalar, y: vector.y * scalar };\n    };\n\n    /**\n     * Divides a vector and a scalar.\n     * @method div\n     * @param {vector} vector\n     * @param {number} scalar\n     * @return {vector} A new vector divided by scalar\n     */\n    Vector.div = function(vector, scalar) {\n        return { x: vector.x / scalar, y: vector.y / scalar };\n    };\n\n    /**\n     * Returns the perpendicular vector. Set `negate` to true for the perpendicular in the opposite direction.\n     * @method perp\n     * @param {vector} vector\n     * @param {bool} [negate=false]\n     * @return {vector} The perpendicular vector\n     */\n    Vector.perp = function(vector, negate) {\n        negate = negate === true ? -1 : 1;\n        return { x: negate * -vector.y, y: negate * vector.x };\n    };\n\n    /**\n     * Negates both components of a vector such that it points in the opposite direction.\n     * @method neg\n     * @param {vector} vector\n     * @return {vector} The negated vector\n     */\n    Vector.neg = function(vector) {\n        return { x: -vector.x, y: -vector.y };\n    };\n\n    /**\n     * Returns the angle between the vector `vectorB - vectorA` and the x-axis in radians.\n     * @method angle\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The angle in radians\n     */\n    Vector.angle = function(vectorA, vectorB) {\n        return Math.atan2(vectorB.y - vectorA.y, vectorB.x - vectorA.x);\n    };\n\n    /**\n     * Temporary vector pool (not thread-safe).\n     * @property _temp\n     * @type {vector[]}\n     * @private\n     */\n    Vector._temp = [\n        Vector.create(), Vector.create(), \n        Vector.create(), Vector.create(), \n        Vector.create(), Vector.create()\n    ];\n\n})();\n},{}],29:[function(_dereq_,module,exports){\n/**\n* The `Matter.Vertices` module contains methods for creating and manipulating sets of vertices.\n* A set of vertices is an array of `Matter.Vector` with additional indexing properties inserted by `Vertices.create`.\n* A `Matter.Body` maintains a set of vertices to represent the shape of the object (its convex hull).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Vertices\n*/\n\nvar Vertices = {};\n\nmodule.exports = Vertices;\n\nvar Vector = _dereq_('../geometry/Vector');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a new set of `Matter.Body` compatible vertices.\n     * The `points` argument accepts an array of `Matter.Vector` points orientated around the origin `(0, 0)`, for example:\n     *\n     *     [{ x: 0, y: 0 }, { x: 25, y: 50 }, { x: 50, y: 0 }]\n     *\n     * The `Vertices.create` method returns a new array of vertices, which are similar to Matter.Vector objects,\n     * but with some additional references required for efficient collision detection routines.\n     *\n     * Vertices must be specified in clockwise order.\n     *\n     * Note that the `body` argument is not optional, a `Matter.Body` reference must be provided.\n     *\n     * @method create\n     * @param {vector[]} points\n     * @param {body} body\n     */\n    Vertices.create = function(points, body) {\n        var vertices = [];\n\n        for (var i = 0; i < points.length; i++) {\n            var point = points[i],\n                vertex = {\n                    x: point.x,\n                    y: point.y,\n                    index: i,\n                    body: body,\n                    isInternal: false\n                };\n\n            vertices.push(vertex);\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Parses a string containing ordered x y pairs separated by spaces (and optionally commas), \n     * into a `Matter.Vertices` object for the given `Matter.Body`.\n     * For parsing SVG paths, see `Svg.pathToVertices`.\n     * @method fromPath\n     * @param {string} path\n     * @param {body} body\n     * @return {vertices} vertices\n     */\n    Vertices.fromPath = function(path, body) {\n        var pathPattern = /L?\\s*([\\-\\d\\.e]+)[\\s,]*([\\-\\d\\.e]+)*/ig,\n            points = [];\n\n        path.replace(pathPattern, function(match, x, y) {\n            points.push({ x: parseFloat(x), y: parseFloat(y) });\n        });\n\n        return Vertices.create(points, body);\n    };\n\n    /**\n     * Returns the centre (centroid) of the set of vertices.\n     * @method centre\n     * @param {vertices} vertices\n     * @return {vector} The centre point\n     */\n    Vertices.centre = function(vertices) {\n        var area = Vertices.area(vertices, true),\n            centre = { x: 0, y: 0 },\n            cross,\n            temp,\n            j;\n\n        for (var i = 0; i < vertices.length; i++) {\n            j = (i + 1) % vertices.length;\n            cross = Vector.cross(vertices[i], vertices[j]);\n            temp = Vector.mult(Vector.add(vertices[i], vertices[j]), cross);\n            centre = Vector.add(centre, temp);\n        }\n\n        return Vector.div(centre, 6 * area);\n    };\n\n    /**\n     * Returns the average (mean) of the set of vertices.\n     * @method mean\n     * @param {vertices} vertices\n     * @return {vector} The average point\n     */\n    Vertices.mean = function(vertices) {\n        var average = { x: 0, y: 0 };\n\n        for (var i = 0; i < vertices.length; i++) {\n            average.x += vertices[i].x;\n            average.y += vertices[i].y;\n        }\n\n        return Vector.div(average, vertices.length);\n    };\n\n    /**\n     * Returns the area of the set of vertices.\n     * @method area\n     * @param {vertices} vertices\n     * @param {bool} signed\n     * @return {number} The area\n     */\n    Vertices.area = function(vertices, signed) {\n        var area = 0,\n            j = vertices.length - 1;\n\n        for (var i = 0; i < vertices.length; i++) {\n            area += (vertices[j].x - vertices[i].x) * (vertices[j].y + vertices[i].y);\n            j = i;\n        }\n\n        if (signed)\n            return area / 2;\n\n        return Math.abs(area) / 2;\n    };\n\n    /**\n     * Returns the moment of inertia (second moment of area) of the set of vertices given the total mass.\n     * @method inertia\n     * @param {vertices} vertices\n     * @param {number} mass\n     * @return {number} The polygon's moment of inertia\n     */\n    Vertices.inertia = function(vertices, mass) {\n        var numerator = 0,\n            denominator = 0,\n            v = vertices,\n            cross,\n            j;\n\n        // find the polygon's moment of inertia, using second moment of area\n        // from equations at http://www.physicsforums.com/showthread.php?t=25293\n        for (var n = 0; n < v.length; n++) {\n            j = (n + 1) % v.length;\n            cross = Math.abs(Vector.cross(v[j], v[n]));\n            numerator += cross * (Vector.dot(v[j], v[j]) + Vector.dot(v[j], v[n]) + Vector.dot(v[n], v[n]));\n            denominator += cross;\n        }\n\n        return (mass / 6) * (numerator / denominator);\n    };\n\n    /**\n     * Translates the set of vertices in-place.\n     * @method translate\n     * @param {vertices} vertices\n     * @param {vector} vector\n     * @param {number} scalar\n     */\n    Vertices.translate = function(vertices, vector, scalar) {\n        var i;\n        if (scalar) {\n            for (i = 0; i < vertices.length; i++) {\n                vertices[i].x += vector.x * scalar;\n                vertices[i].y += vector.y * scalar;\n            }\n        } else {\n            for (i = 0; i < vertices.length; i++) {\n                vertices[i].x += vector.x;\n                vertices[i].y += vector.y;\n            }\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Rotates the set of vertices in-place.\n     * @method rotate\n     * @param {vertices} vertices\n     * @param {number} angle\n     * @param {vector} point\n     */\n    Vertices.rotate = function(vertices, angle, point) {\n        if (angle === 0)\n            return;\n\n        var cos = Math.cos(angle),\n            sin = Math.sin(angle);\n\n        for (var i = 0; i < vertices.length; i++) {\n            var vertice = vertices[i],\n                dx = vertice.x - point.x,\n                dy = vertice.y - point.y;\n                \n            vertice.x = point.x + (dx * cos - dy * sin);\n            vertice.y = point.y + (dx * sin + dy * cos);\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Returns `true` if the `point` is inside the set of `vertices`.\n     * @method contains\n     * @param {vertices} vertices\n     * @param {vector} point\n     * @return {boolean} True if the vertices contains point, otherwise false\n     */\n    Vertices.contains = function(vertices, point) {\n        for (var i = 0; i < vertices.length; i++) {\n            var vertice = vertices[i],\n                nextVertice = vertices[(i + 1) % vertices.length];\n            if ((point.x - vertice.x) * (nextVertice.y - vertice.y) + (point.y - vertice.y) * (vertice.x - nextVertice.x) > 0) {\n                return false;\n            }\n        }\n\n        return true;\n    };\n\n    /**\n     * Scales the vertices from a point (default is centre) in-place.\n     * @method scale\n     * @param {vertices} vertices\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} point\n     */\n    Vertices.scale = function(vertices, scaleX, scaleY, point) {\n        if (scaleX === 1 && scaleY === 1)\n            return vertices;\n\n        point = point || Vertices.centre(vertices);\n\n        var vertex,\n            delta;\n\n        for (var i = 0; i < vertices.length; i++) {\n            vertex = vertices[i];\n            delta = Vector.sub(vertex, point);\n            vertices[i].x = point.x + delta.x * scaleX;\n            vertices[i].y = point.y + delta.y * scaleY;\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Chamfers a set of vertices by giving them rounded corners, returns a new set of vertices.\n     * The radius parameter is a single number or an array to specify the radius for each vertex.\n     * @method chamfer\n     * @param {vertices} vertices\n     * @param {number[]} radius\n     * @param {number} quality\n     * @param {number} qualityMin\n     * @param {number} qualityMax\n     */\n    Vertices.chamfer = function(vertices, radius, quality, qualityMin, qualityMax) {\n        if (typeof radius === 'number') {\n            radius = [radius];\n        } else {\n            radius = radius || [8];\n        }\n\n        // quality defaults to -1, which is auto\n        quality = (typeof quality !== 'undefined') ? quality : -1;\n        qualityMin = qualityMin || 2;\n        qualityMax = qualityMax || 14;\n\n        var newVertices = [];\n\n        for (var i = 0; i < vertices.length; i++) {\n            var prevVertex = vertices[i - 1 >= 0 ? i - 1 : vertices.length - 1],\n                vertex = vertices[i],\n                nextVertex = vertices[(i + 1) % vertices.length],\n                currentRadius = radius[i < radius.length ? i : radius.length - 1];\n\n            if (currentRadius === 0) {\n                newVertices.push(vertex);\n                continue;\n            }\n\n            var prevNormal = Vector.normalise({ \n                x: vertex.y - prevVertex.y, \n                y: prevVertex.x - vertex.x\n            });\n\n            var nextNormal = Vector.normalise({ \n                x: nextVertex.y - vertex.y, \n                y: vertex.x - nextVertex.x\n            });\n\n            var diagonalRadius = Math.sqrt(2 * Math.pow(currentRadius, 2)),\n                radiusVector = Vector.mult(Common.clone(prevNormal), currentRadius),\n                midNormal = Vector.normalise(Vector.mult(Vector.add(prevNormal, nextNormal), 0.5)),\n                scaledVertex = Vector.sub(vertex, Vector.mult(midNormal, diagonalRadius));\n\n            var precision = quality;\n\n            if (quality === -1) {\n                // automatically decide precision\n                precision = Math.pow(currentRadius, 0.32) * 1.75;\n            }\n\n            precision = Common.clamp(precision, qualityMin, qualityMax);\n\n            // use an even value for precision, more likely to reduce axes by using symmetry\n            if (precision % 2 === 1)\n                precision += 1;\n\n            var alpha = Math.acos(Vector.dot(prevNormal, nextNormal)),\n                theta = alpha / precision;\n\n            for (var j = 0; j < precision; j++) {\n                newVertices.push(Vector.add(Vector.rotate(radiusVector, theta * j), scaledVertex));\n            }\n        }\n\n        return newVertices;\n    };\n\n    /**\n     * Sorts the input vertices into clockwise order in place.\n     * @method clockwiseSort\n     * @param {vertices} vertices\n     * @return {vertices} vertices\n     */\n    Vertices.clockwiseSort = function(vertices) {\n        var centre = Vertices.mean(vertices);\n\n        vertices.sort(function(vertexA, vertexB) {\n            return Vector.angle(centre, vertexA) - Vector.angle(centre, vertexB);\n        });\n\n        return vertices;\n    };\n\n    /**\n     * Returns true if the vertices form a convex shape (vertices must be in clockwise order).\n     * @method isConvex\n     * @param {vertices} vertices\n     * @return {bool} `true` if the `vertices` are convex, `false` if not (or `null` if not computable).\n     */\n    Vertices.isConvex = function(vertices) {\n        // http://paulbourke.net/geometry/polygonmesh/\n        // Copyright (c) Paul Bourke (use permitted)\n\n        var flag = 0,\n            n = vertices.length,\n            i,\n            j,\n            k,\n            z;\n\n        if (n < 3)\n            return null;\n\n        for (i = 0; i < n; i++) {\n            j = (i + 1) % n;\n            k = (i + 2) % n;\n            z = (vertices[j].x - vertices[i].x) * (vertices[k].y - vertices[j].y);\n            z -= (vertices[j].y - vertices[i].y) * (vertices[k].x - vertices[j].x);\n\n            if (z < 0) {\n                flag |= 1;\n            } else if (z > 0) {\n                flag |= 2;\n            }\n\n            if (flag === 3) {\n                return false;\n            }\n        }\n\n        if (flag !== 0){\n            return true;\n        } else {\n            return null;\n        }\n    };\n\n    /**\n     * Returns the convex hull of the input vertices as a new array of points.\n     * @method hull\n     * @param {vertices} vertices\n     * @return [vertex] vertices\n     */\n    Vertices.hull = function(vertices) {\n        // http://geomalgorithms.com/a10-_hull-1.html\n\n        var upper = [],\n            lower = [], \n            vertex,\n            i;\n\n        // sort vertices on x-axis (y-axis for ties)\n        vertices = vertices.slice(0);\n        vertices.sort(function(vertexA, vertexB) {\n            var dx = vertexA.x - vertexB.x;\n            return dx !== 0 ? dx : vertexA.y - vertexB.y;\n        });\n\n        // build lower hull\n        for (i = 0; i < vertices.length; i += 1) {\n            vertex = vertices[i];\n\n            while (lower.length >= 2 \n                   && Vector.cross3(lower[lower.length - 2], lower[lower.length - 1], vertex) <= 0) {\n                lower.pop();\n            }\n\n            lower.push(vertex);\n        }\n\n        // build upper hull\n        for (i = vertices.length - 1; i >= 0; i -= 1) {\n            vertex = vertices[i];\n\n            while (upper.length >= 2 \n                   && Vector.cross3(upper[upper.length - 2], upper[upper.length - 1], vertex) <= 0) {\n                upper.pop();\n            }\n\n            upper.push(vertex);\n        }\n\n        // concatenation of the lower and upper hulls gives the convex hull\n        // omit last points because they are repeated at the beginning of the other list\n        upper.pop();\n        lower.pop();\n\n        return upper.concat(lower);\n    };\n\n})();\n\n},{\"../core/Common\":14,\"../geometry/Vector\":28}],30:[function(_dereq_,module,exports){\nvar Matter = module.exports = _dereq_('../core/Matter');\n\nMatter.Body = _dereq_('../body/Body');\nMatter.Composite = _dereq_('../body/Composite');\nMatter.World = _dereq_('../body/World');\n\nMatter.Contact = _dereq_('../collision/Contact');\nMatter.Detector = _dereq_('../collision/Detector');\nMatter.Grid = _dereq_('../collision/Grid');\nMatter.Pairs = _dereq_('../collision/Pairs');\nMatter.Pair = _dereq_('../collision/Pair');\nMatter.Query = _dereq_('../collision/Query');\nMatter.Resolver = _dereq_('../collision/Resolver');\nMatter.SAT = _dereq_('../collision/SAT');\n\nMatter.Constraint = _dereq_('../constraint/Constraint');\nMatter.MouseConstraint = _dereq_('../constraint/MouseConstraint');\n\nMatter.Common = _dereq_('../core/Common');\nMatter.Engine = _dereq_('../core/Engine');\nMatter.Events = _dereq_('../core/Events');\nMatter.Mouse = _dereq_('../core/Mouse');\nMatter.Runner = _dereq_('../core/Runner');\nMatter.Sleeping = _dereq_('../core/Sleeping');\nMatter.Plugin = _dereq_('../core/Plugin');\n\n\nMatter.Bodies = _dereq_('../factory/Bodies');\nMatter.Composites = _dereq_('../factory/Composites');\n\nMatter.Axes = _dereq_('../geometry/Axes');\nMatter.Bounds = _dereq_('../geometry/Bounds');\nMatter.Svg = _dereq_('../geometry/Svg');\nMatter.Vector = _dereq_('../geometry/Vector');\nMatter.Vertices = _dereq_('../geometry/Vertices');\n\nMatter.Render = _dereq_('../render/Render');\nMatter.RenderPixi = _dereq_('../render/RenderPixi');\n\n// aliases\n\nMatter.World.add = Matter.Composite.add;\nMatter.World.remove = Matter.Composite.remove;\nMatter.World.addComposite = Matter.Composite.addComposite;\nMatter.World.addBody = Matter.Composite.addBody;\nMatter.World.addConstraint = Matter.Composite.addConstraint;\nMatter.World.clear = Matter.Composite.clear;\nMatter.Engine.run = Matter.Runner.run;\n\n},{\"../body/Body\":1,\"../body/Composite\":2,\"../body/World\":3,\"../collision/Contact\":4,\"../collision/Detector\":5,\"../collision/Grid\":6,\"../collision/Pair\":7,\"../collision/Pairs\":8,\"../collision/Query\":9,\"../collision/Resolver\":10,\"../collision/SAT\":11,\"../constraint/Constraint\":12,\"../constraint/MouseConstraint\":13,\"../core/Common\":14,\"../core/Engine\":15,\"../core/Events\":16,\"../core/Matter\":17,\"../core/Metrics\":18,\"../core/Mouse\":19,\"../core/Plugin\":20,\"../core/Runner\":21,\"../core/Sleeping\":22,\"../factory/Bodies\":23,\"../factory/Composites\":24,\"../geometry/Axes\":25,\"../geometry/Bounds\":26,\"../geometry/Svg\":27,\"../geometry/Vector\":28,\"../geometry/Vertices\":29,\"../render/Render\":31,\"../render/RenderPixi\":32}],31:[function(_dereq_,module,exports){\n/**\n* The `Matter.Render` module is a simple HTML5 canvas based renderer for visualising instances of `Matter.Engine`.\n* It is intended for development and debugging purposes, but may also be suitable for simple games.\n* It includes a number of drawing options including wireframe, vector with support for sprites and viewports.\n*\n* @class Render\n*/\n\nvar Render = {};\n\nmodule.exports = Render;\n\nvar Common = _dereq_('../core/Common');\nvar Composite = _dereq_('../body/Composite');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Events = _dereq_('../core/Events');\nvar Grid = _dereq_('../collision/Grid');\nvar Vector = _dereq_('../geometry/Vector');\nvar Mouse = _dereq_('../core/Mouse');\n\n(function() {\n\n    var _requestAnimationFrame,\n        _cancelAnimationFrame;\n\n    if (typeof window !== 'undefined') {\n        _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\n                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame\n                                      || function(callback){ window.setTimeout(function() { callback(Common.now()); }, 1000 / 60); };\n\n        _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame\n                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;\n    }\n\n    /**\n     * Creates a new renderer. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {object} [options]\n     * @return {render} A new renderer\n     */\n    Render.create = function(options) {\n        var defaults = {\n            controller: Render,\n            engine: null,\n            element: null,\n            canvas: null,\n            mouse: null,\n            frameRequestId: null,\n            options: {\n                width: 800,\n                height: 600,\n                pixelRatio: 1,\n                background: '#18181d',\n                wireframeBackground: '#0f0f13',\n                hasBounds: !!options.bounds,\n                enabled: true,\n                wireframes: true,\n                showSleeping: true,\n                showDebug: false,\n                showBroadphase: false,\n                showBounds: false,\n                showVelocity: false,\n                showCollisions: false,\n                showSeparations: false,\n                showAxes: false,\n                showPositions: false,\n                showAngleIndicator: false,\n                showIds: false,\n                showShadows: false,\n                showVertexNumbers: false,\n                showConvexHulls: false,\n                showInternalEdges: false,\n                showMousePosition: false\n            }\n        };\n\n        var render = Common.extend(defaults, options);\n\n        if (render.canvas) {\n            render.canvas.width = render.options.width || render.canvas.width;\n            render.canvas.height = render.options.height || render.canvas.height;\n        }\n\n        render.mouse = options.mouse;\n        render.engine = options.engine;\n        render.canvas = render.canvas || _createCanvas(render.options.width, render.options.height);\n        render.context = render.canvas.getContext('2d');\n        render.textures = {};\n\n        render.bounds = render.bounds || {\n            min: {\n                x: 0,\n                y: 0\n            },\n            max: {\n                x: render.canvas.width,\n                y: render.canvas.height\n            }\n        };\n\n        if (render.options.pixelRatio !== 1) {\n            Render.setPixelRatio(render, render.options.pixelRatio);\n        }\n\n        if (Common.isElement(render.element)) {\n            render.element.appendChild(render.canvas);\n        } else if (!render.canvas.parentNode) {\n            Common.log('Render.create: options.element was undefined, render.canvas was created but not appended', 'warn');\n        }\n\n        return render;\n    };\n\n    /**\n     * Continuously updates the render canvas on the `requestAnimationFrame` event.\n     * @method run\n     * @param {render} render\n     */\n    Render.run = function(render) {\n        (function loop(time){\n            render.frameRequestId = _requestAnimationFrame(loop);\n            Render.world(render);\n        })();\n    };\n\n    /**\n     * Ends execution of `Render.run` on the given `render`, by canceling the animation frame request event loop.\n     * @method stop\n     * @param {render} render\n     */\n    Render.stop = function(render) {\n        _cancelAnimationFrame(render.frameRequestId);\n    };\n\n    /**\n     * Sets the pixel ratio of the renderer and updates the canvas.\n     * To automatically detect the correct ratio, pass the string `'auto'` for `pixelRatio`.\n     * @method setPixelRatio\n     * @param {render} render\n     * @param {number} pixelRatio\n     */\n    Render.setPixelRatio = function(render, pixelRatio) {\n        var options = render.options,\n            canvas = render.canvas;\n\n        if (pixelRatio === 'auto') {\n            pixelRatio = _getPixelRatio(canvas);\n        }\n\n        options.pixelRatio = pixelRatio;\n        canvas.setAttribute('data-pixel-ratio', pixelRatio);\n        canvas.width = options.width * pixelRatio;\n        canvas.height = options.height * pixelRatio;\n        canvas.style.width = options.width + 'px';\n        canvas.style.height = options.height + 'px';\n        render.context.scale(pixelRatio, pixelRatio);\n    };\n\n    /**\n     * Positions and sizes the viewport around the given object bounds.\n     * Objects must have at least one of the following properties:\n     * - `object.bounds`\n     * - `object.position`\n     * - `object.min` and `object.max`\n     * - `object.x` and `object.y`\n     * @method lookAt\n     * @param {render} render\n     * @param {object[]} objects\n     * @param {vector} [padding]\n     * @param {bool} [center=true]\n     */\n    Render.lookAt = function(render, objects, padding, center) {\n        center = typeof center !== 'undefined' ? center : true;\n        objects = Common.isArray(objects) ? objects : [objects];\n        padding = padding || {\n            x: 0,\n            y: 0\n        };\n\n        // find bounds of all objects\n        var bounds = {\n            min: { x: Infinity, y: Infinity },\n            max: { x: -Infinity, y: -Infinity }\n        };\n\n        for (var i = 0; i < objects.length; i += 1) {\n            var object = objects[i],\n                min = object.bounds ? object.bounds.min : (object.min || object.position || object),\n                max = object.bounds ? object.bounds.max : (object.max || object.position || object);\n\n            if (min && max) {\n                if (min.x < bounds.min.x)\n                    bounds.min.x = min.x;\n\n                if (max.x > bounds.max.x)\n                    bounds.max.x = max.x;\n\n                if (min.y < bounds.min.y)\n                    bounds.min.y = min.y;\n\n                if (max.y > bounds.max.y)\n                    bounds.max.y = max.y;\n            }\n        }\n\n        // find ratios\n        var width = (bounds.max.x - bounds.min.x) + 2 * padding.x,\n            height = (bounds.max.y - bounds.min.y) + 2 * padding.y,\n            viewHeight = render.canvas.height,\n            viewWidth = render.canvas.width,\n            outerRatio = viewWidth / viewHeight,\n            innerRatio = width / height,\n            scaleX = 1,\n            scaleY = 1;\n\n        // find scale factor\n        if (innerRatio > outerRatio) {\n            scaleY = innerRatio / outerRatio;\n        } else {\n            scaleX = outerRatio / innerRatio;\n        }\n\n        // enable bounds\n        render.options.hasBounds = true;\n\n        // position and size\n        render.bounds.min.x = bounds.min.x;\n        render.bounds.max.x = bounds.min.x + width * scaleX;\n        render.bounds.min.y = bounds.min.y;\n        render.bounds.max.y = bounds.min.y + height * scaleY;\n\n        // center\n        if (center) {\n            render.bounds.min.x += width * 0.5 - (width * scaleX) * 0.5;\n            render.bounds.max.x += width * 0.5 - (width * scaleX) * 0.5;\n            render.bounds.min.y += height * 0.5 - (height * scaleY) * 0.5;\n            render.bounds.max.y += height * 0.5 - (height * scaleY) * 0.5;\n        }\n\n        // padding\n        render.bounds.min.x -= padding.x;\n        render.bounds.max.x -= padding.x;\n        render.bounds.min.y -= padding.y;\n        render.bounds.max.y -= padding.y;\n\n        // update mouse\n        if (render.mouse) {\n            Mouse.setScale(render.mouse, {\n                x: (render.bounds.max.x - render.bounds.min.x) / render.canvas.width,\n                y: (render.bounds.max.y - render.bounds.min.y) / render.canvas.height\n            });\n\n            Mouse.setOffset(render.mouse, render.bounds.min);\n        }\n    };\n\n    /**\n     * Applies viewport transforms based on `render.bounds` to a render context.\n     * @method startViewTransform\n     * @param {render} render\n     */\n    Render.startViewTransform = function(render) {\n        var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n            boundsHeight = render.bounds.max.y - render.bounds.min.y,\n            boundsScaleX = boundsWidth / render.options.width,\n            boundsScaleY = boundsHeight / render.options.height;\n\n        render.context.scale(1 / boundsScaleX, 1 / boundsScaleY);\n        render.context.translate(-render.bounds.min.x, -render.bounds.min.y);\n    };\n\n    /**\n     * Resets all transforms on the render context.\n     * @method endViewTransform\n     * @param {render} render\n     */\n    Render.endViewTransform = function(render) {\n        render.context.setTransform(render.options.pixelRatio, 0, 0, render.options.pixelRatio, 0, 0);\n    };\n\n    /**\n     * Renders the given `engine`'s `Matter.World` object.\n     * This is the entry point for all rendering and should be called every time the scene changes.\n     * @method world\n     * @param {render} render\n     */\n    Render.world = function(render) {\n        var engine = render.engine,\n            world = engine.world,\n            canvas = render.canvas,\n            context = render.context,\n            options = render.options,\n            allBodies = Composite.allBodies(world),\n            allConstraints = Composite.allConstraints(world),\n            background = options.wireframes ? options.wireframeBackground : options.background,\n            bodies = [],\n            constraints = [],\n            i;\n\n        var event = {\n            timestamp: engine.timing.timestamp\n        };\n\n        Events.trigger(render, 'beforeRender', event);\n\n        // apply background if it has changed\n        if (render.currentBackground !== background)\n            _applyBackground(render, background);\n\n        // clear the canvas with a transparent fill, to allow the canvas background to show\n        context.globalCompositeOperation = 'source-in';\n        context.fillStyle = \"transparent\";\n        context.fillRect(0, 0, canvas.width, canvas.height);\n        context.globalCompositeOperation = 'source-over';\n\n        // handle bounds\n        if (options.hasBounds) {\n            // filter out bodies that are not in view\n            for (i = 0; i < allBodies.length; i++) {\n                var body = allBodies[i];\n                if (Bounds.overlaps(body.bounds, render.bounds))\n                    bodies.push(body);\n            }\n\n            // filter out constraints that are not in view\n            for (i = 0; i < allConstraints.length; i++) {\n                var constraint = allConstraints[i],\n                    bodyA = constraint.bodyA,\n                    bodyB = constraint.bodyB,\n                    pointAWorld = constraint.pointA,\n                    pointBWorld = constraint.pointB;\n\n                if (bodyA) pointAWorld = Vector.add(bodyA.position, constraint.pointA);\n                if (bodyB) pointBWorld = Vector.add(bodyB.position, constraint.pointB);\n\n                if (!pointAWorld || !pointBWorld)\n                    continue;\n\n                if (Bounds.contains(render.bounds, pointAWorld) || Bounds.contains(render.bounds, pointBWorld))\n                    constraints.push(constraint);\n            }\n\n            // transform the view\n            Render.startViewTransform(render);\n\n            // update mouse\n            if (render.mouse) {\n                Mouse.setScale(render.mouse, {\n                    x: (render.bounds.max.x - render.bounds.min.x) / render.canvas.width,\n                    y: (render.bounds.max.y - render.bounds.min.y) / render.canvas.height\n                });\n\n                Mouse.setOffset(render.mouse, render.bounds.min);\n            }\n        } else {\n            constraints = allConstraints;\n            bodies = allBodies;\n        }\n\n        if (!options.wireframes || (engine.enableSleeping && options.showSleeping)) {\n            // fully featured rendering of bodies\n            Render.bodies(render, bodies, context);\n        } else {\n            if (options.showConvexHulls)\n                Render.bodyConvexHulls(render, bodies, context);\n\n            // optimised method for wireframes only\n            Render.bodyWireframes(render, bodies, context);\n        }\n\n        if (options.showBounds)\n            Render.bodyBounds(render, bodies, context);\n\n        if (options.showAxes || options.showAngleIndicator)\n            Render.bodyAxes(render, bodies, context);\n\n        if (options.showPositions)\n            Render.bodyPositions(render, bodies, context);\n\n        if (options.showVelocity)\n            Render.bodyVelocity(render, bodies, context);\n\n        if (options.showIds)\n            Render.bodyIds(render, bodies, context);\n\n        if (options.showSeparations)\n            Render.separations(render, engine.pairs.list, context);\n\n        if (options.showCollisions)\n            Render.collisions(render, engine.pairs.list, context);\n\n        if (options.showVertexNumbers)\n            Render.vertexNumbers(render, bodies, context);\n\n        if (options.showMousePosition)\n            Render.mousePosition(render, render.mouse, context);\n\n        Render.constraints(constraints, context);\n\n        if (options.showBroadphase && engine.broadphase.controller === Grid)\n            Render.grid(render, engine.broadphase, context);\n\n        if (options.showDebug)\n            Render.debug(render, context);\n\n        if (options.hasBounds) {\n            // revert view transforms\n            Render.endViewTransform(render);\n        }\n\n        Events.trigger(render, 'afterRender', event);\n    };\n\n    /**\n     * Description\n     * @private\n     * @method debug\n     * @param {render} render\n     * @param {RenderingContext} context\n     */\n    Render.debug = function(render, context) {\n        var c = context,\n            engine = render.engine,\n            world = engine.world,\n            metrics = engine.metrics,\n            options = render.options,\n            bodies = Composite.allBodies(world),\n            space = \"    \";\n\n        if (engine.timing.timestamp - (render.debugTimestamp || 0) >= 500) {\n            var text = \"\";\n\n            if (metrics.timing) {\n                text += \"fps: \" + Math.round(metrics.timing.fps) + space;\n            }\n\n\n            render.debugString = text;\n            render.debugTimestamp = engine.timing.timestamp;\n        }\n\n        if (render.debugString) {\n            c.font = \"12px Arial\";\n\n            if (options.wireframes) {\n                c.fillStyle = 'rgba(255,255,255,0.5)';\n            } else {\n                c.fillStyle = 'rgba(0,0,0,0.5)';\n            }\n\n            var split = render.debugString.split('\\n');\n\n            for (var i = 0; i < split.length; i++) {\n                c.fillText(split[i], 50, 50 + i * 18);\n            }\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method constraints\n     * @param {constraint[]} constraints\n     * @param {RenderingContext} context\n     */\n    Render.constraints = function(constraints, context) {\n        var c = context;\n\n        for (var i = 0; i < constraints.length; i++) {\n            var constraint = constraints[i];\n\n            if (!constraint.render.visible || !constraint.pointA || !constraint.pointB)\n                continue;\n\n            var bodyA = constraint.bodyA,\n                bodyB = constraint.bodyB,\n                start,\n                end;\n\n            if (bodyA) {\n                start = Vector.add(bodyA.position, constraint.pointA);\n            } else {\n                start = constraint.pointA;\n            }\n\n            if (constraint.render.type === 'pin') {\n                c.beginPath();\n                c.arc(start.x, start.y, 3, 0, 2 * Math.PI);\n                c.closePath();\n            } else {\n                if (bodyB) {\n                    end = Vector.add(bodyB.position, constraint.pointB);\n                } else {\n                    end = constraint.pointB;\n                }\n\n                c.beginPath();\n                c.moveTo(start.x, start.y);\n\n                if (constraint.render.type === 'spring') {\n                    var delta = Vector.sub(end, start),\n                        normal = Vector.perp(Vector.normalise(delta)),\n                        coils = Math.ceil(Common.clamp(constraint.length / 5, 12, 20)),\n                        offset;\n\n                    for (var j = 1; j < coils; j += 1) {\n                        offset = j % 2 === 0 ? 1 : -1;\n\n                        c.lineTo(\n                            start.x + delta.x * (j / coils) + normal.x * offset * 4,\n                            start.y + delta.y * (j / coils) + normal.y * offset * 4\n                        );\n                    }\n                }\n\n                c.lineTo(end.x, end.y);\n            }\n\n            if (constraint.render.lineWidth) {\n                c.lineWidth = constraint.render.lineWidth;\n                c.strokeStyle = constraint.render.strokeStyle;\n                c.stroke();\n            }\n\n            if (constraint.render.anchors) {\n                c.fillStyle = constraint.render.strokeStyle;\n                c.beginPath();\n                c.arc(start.x, start.y, 3, 0, 2 * Math.PI);\n                c.arc(end.x, end.y, 3, 0, 2 * Math.PI);\n                c.closePath();\n                c.fill();\n            }\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method bodyShadows\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyShadows = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine;\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            if (body.circleRadius) {\n                c.beginPath();\n                c.arc(body.position.x, body.position.y, body.circleRadius, 0, 2 * Math.PI);\n                c.closePath();\n            } else {\n                c.beginPath();\n                c.moveTo(body.vertices[0].x, body.vertices[0].y);\n                for (var j = 1; j < body.vertices.length; j++) {\n                    c.lineTo(body.vertices[j].x, body.vertices[j].y);\n                }\n                c.closePath();\n            }\n\n            var distanceX = body.position.x - render.options.width * 0.5,\n                distanceY = body.position.y - render.options.height * 0.2,\n                distance = Math.abs(distanceX) + Math.abs(distanceY);\n\n            c.shadowColor = 'rgba(0,0,0,0.15)';\n            c.shadowOffsetX = 0.05 * distanceX;\n            c.shadowOffsetY = 0.05 * distanceY;\n            c.shadowBlur = 1 + 12 * Math.min(1, distance / 1000);\n\n            c.fill();\n\n            c.shadowColor = null;\n            c.shadowOffsetX = null;\n            c.shadowOffsetY = null;\n            c.shadowBlur = null;\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method bodies\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodies = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options,\n            showInternalEdges = options.showInternalEdges || !options.wireframes,\n            body,\n            part,\n            i,\n            k;\n\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            // handle compound parts\n            for (k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n                part = body.parts[k];\n\n                if (!part.render.visible)\n                    continue;\n\n                if (options.showSleeping && body.isSleeping) {\n                    c.globalAlpha = 0.5 * part.render.opacity;\n                } else if (part.render.opacity !== 1) {\n                    c.globalAlpha = part.render.opacity;\n                }\n\n                if (part.render.sprite && part.render.sprite.texture && !options.wireframes) {\n                    // part sprite\n                    var sprite = part.render.sprite,\n                        texture = _getTexture(render, sprite.texture);\n\n                    c.translate(part.position.x, part.position.y);\n                    c.rotate(part.angle);\n\n                    c.drawImage(\n                        texture,\n                        texture.width * -sprite.xOffset * sprite.xScale,\n                        texture.height * -sprite.yOffset * sprite.yScale,\n                        texture.width * sprite.xScale,\n                        texture.height * sprite.yScale\n                    );\n\n                    // revert translation, hopefully faster than save / restore\n                    c.rotate(-part.angle);\n                    c.translate(-part.position.x, -part.position.y);\n                } else {\n                    // part polygon\n                    if (part.circleRadius) {\n                        c.beginPath();\n                        c.arc(part.position.x, part.position.y, part.circleRadius, 0, 2 * Math.PI);\n                    } else {\n                        c.beginPath();\n                        c.moveTo(part.vertices[0].x, part.vertices[0].y);\n\n                        for (var j = 1; j < part.vertices.length; j++) {\n                            if (!part.vertices[j - 1].isInternal || showInternalEdges) {\n                                c.lineTo(part.vertices[j].x, part.vertices[j].y);\n                            } else {\n                                c.moveTo(part.vertices[j].x, part.vertices[j].y);\n                            }\n\n                            if (part.vertices[j].isInternal && !showInternalEdges) {\n                                c.moveTo(part.vertices[(j + 1) % part.vertices.length].x, part.vertices[(j + 1) % part.vertices.length].y);\n                            }\n                        }\n\n                        c.lineTo(part.vertices[0].x, part.vertices[0].y);\n                        c.closePath();\n                    }\n\n                    if (!options.wireframes) {\n                        c.fillStyle = part.render.fillStyle;\n\n                        if (part.render.lineWidth) {\n                            c.lineWidth = part.render.lineWidth;\n                            c.strokeStyle = part.render.strokeStyle;\n                            c.stroke();\n                        }\n\n                        c.fill();\n                    } else {\n                        c.lineWidth = 1;\n                        c.strokeStyle = '#bbb';\n                        c.stroke();\n                    }\n                }\n\n                c.globalAlpha = 1;\n            }\n        }\n    };\n\n    /**\n     * Optimised method for drawing body wireframes in one pass\n     * @private\n     * @method bodyWireframes\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyWireframes = function(render, bodies, context) {\n        var c = context,\n            showInternalEdges = render.options.showInternalEdges,\n            body,\n            part,\n            i,\n            j,\n            k;\n\n        c.beginPath();\n\n        // render all bodies\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            // handle compound parts\n            for (k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n                part = body.parts[k];\n\n                c.moveTo(part.vertices[0].x, part.vertices[0].y);\n\n                for (j = 1; j < part.vertices.length; j++) {\n                    if (!part.vertices[j - 1].isInternal || showInternalEdges) {\n                        c.lineTo(part.vertices[j].x, part.vertices[j].y);\n                    } else {\n                        c.moveTo(part.vertices[j].x, part.vertices[j].y);\n                    }\n\n                    if (part.vertices[j].isInternal && !showInternalEdges) {\n                        c.moveTo(part.vertices[(j + 1) % part.vertices.length].x, part.vertices[(j + 1) % part.vertices.length].y);\n                    }\n                }\n\n                c.lineTo(part.vertices[0].x, part.vertices[0].y);\n            }\n        }\n\n        c.lineWidth = 1;\n        c.strokeStyle = '#bbb';\n        c.stroke();\n    };\n\n    /**\n     * Optimised method for drawing body convex hull wireframes in one pass\n     * @private\n     * @method bodyConvexHulls\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyConvexHulls = function(render, bodies, context) {\n        var c = context,\n            body,\n            part,\n            i,\n            j,\n            k;\n\n        c.beginPath();\n\n        // render convex hulls\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible || body.parts.length === 1)\n                continue;\n\n            c.moveTo(body.vertices[0].x, body.vertices[0].y);\n\n            for (j = 1; j < body.vertices.length; j++) {\n                c.lineTo(body.vertices[j].x, body.vertices[j].y);\n            }\n\n            c.lineTo(body.vertices[0].x, body.vertices[0].y);\n        }\n\n        c.lineWidth = 1;\n        c.strokeStyle = 'rgba(255,255,255,0.2)';\n        c.stroke();\n    };\n\n    /**\n     * Renders body vertex numbers.\n     * @private\n     * @method vertexNumbers\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.vertexNumbers = function(render, bodies, context) {\n        var c = context,\n            i,\n            j,\n            k;\n\n        for (i = 0; i < bodies.length; i++) {\n            var parts = bodies[i].parts;\n            for (k = parts.length > 1 ? 1 : 0; k < parts.length; k++) {\n                var part = parts[k];\n                for (j = 0; j < part.vertices.length; j++) {\n                    c.fillStyle = 'rgba(255,255,255,0.2)';\n                    c.fillText(i + '_' + j, part.position.x + (part.vertices[j].x - part.position.x) * 0.8, part.position.y + (part.vertices[j].y - part.position.y) * 0.8);\n                }\n            }\n        }\n    };\n\n    /**\n     * Renders mouse position.\n     * @private\n     * @method mousePosition\n     * @param {render} render\n     * @param {mouse} mouse\n     * @param {RenderingContext} context\n     */\n    Render.mousePosition = function(render, mouse, context) {\n        var c = context;\n        c.fillStyle = 'rgba(255,255,255,0.8)';\n        c.fillText(mouse.position.x + '  ' + mouse.position.y, mouse.position.x + 5, mouse.position.y - 5);\n    };\n\n    /**\n     * Draws body bounds\n     * @private\n     * @method bodyBounds\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyBounds = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options;\n\n        c.beginPath();\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.render.visible) {\n                var parts = bodies[i].parts;\n                for (var j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    var part = parts[j];\n                    c.rect(part.bounds.min.x, part.bounds.min.y, part.bounds.max.x - part.bounds.min.x, part.bounds.max.y - part.bounds.min.y);\n                }\n            }\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,255,255,0.08)';\n        } else {\n            c.strokeStyle = 'rgba(0,0,0,0.1)';\n        }\n\n        c.lineWidth = 1;\n        c.stroke();\n    };\n\n    /**\n     * Draws body angle indicators and axes\n     * @private\n     * @method bodyAxes\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyAxes = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options,\n            part,\n            i,\n            j,\n            k;\n\n        c.beginPath();\n\n        for (i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                parts = body.parts;\n\n            if (!body.render.visible)\n                continue;\n\n            if (options.showAxes) {\n                // render all axes\n                for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    part = parts[j];\n                    for (k = 0; k < part.axes.length; k++) {\n                        var axis = part.axes[k];\n                        c.moveTo(part.position.x, part.position.y);\n                        c.lineTo(part.position.x + axis.x * 20, part.position.y + axis.y * 20);\n                    }\n                }\n            } else {\n                for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    part = parts[j];\n                    for (k = 0; k < part.axes.length; k++) {\n                        // render a single axis indicator\n                        c.moveTo(part.position.x, part.position.y);\n                        c.lineTo((part.vertices[0].x + part.vertices[part.vertices.length-1].x) / 2,\n                                 (part.vertices[0].y + part.vertices[part.vertices.length-1].y) / 2);\n                    }\n                }\n            }\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'indianred';\n            c.lineWidth = 1;\n        } else {\n            c.strokeStyle = 'rgba(255, 255, 255, 0.4)';\n            c.globalCompositeOperation = 'overlay';\n            c.lineWidth = 2;\n        }\n\n        c.stroke();\n        c.globalCompositeOperation = 'source-over';\n    };\n\n    /**\n     * Draws body positions\n     * @private\n     * @method bodyPositions\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyPositions = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options,\n            body,\n            part,\n            i,\n            k;\n\n        c.beginPath();\n\n        // render current positions\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            // handle compound parts\n            for (k = 0; k < body.parts.length; k++) {\n                part = body.parts[k];\n                c.arc(part.position.x, part.position.y, 3, 0, 2 * Math.PI, false);\n                c.closePath();\n            }\n        }\n\n        if (options.wireframes) {\n            c.fillStyle = 'indianred';\n        } else {\n            c.fillStyle = 'rgba(0,0,0,0.5)';\n        }\n        c.fill();\n\n        c.beginPath();\n\n        // render previous positions\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n            if (body.render.visible) {\n                c.arc(body.positionPrev.x, body.positionPrev.y, 2, 0, 2 * Math.PI, false);\n                c.closePath();\n            }\n        }\n\n        c.fillStyle = 'rgba(255,165,0,0.8)';\n        c.fill();\n    };\n\n    /**\n     * Draws body velocity\n     * @private\n     * @method bodyVelocity\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyVelocity = function(render, bodies, context) {\n        var c = context;\n\n        c.beginPath();\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            c.moveTo(body.position.x, body.position.y);\n            c.lineTo(body.position.x + (body.position.x - body.positionPrev.x) * 2, body.position.y + (body.position.y - body.positionPrev.y) * 2);\n        }\n\n        c.lineWidth = 3;\n        c.strokeStyle = 'cornflowerblue';\n        c.stroke();\n    };\n\n    /**\n     * Draws body ids\n     * @private\n     * @method bodyIds\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyIds = function(render, bodies, context) {\n        var c = context,\n            i,\n            j;\n\n        for (i = 0; i < bodies.length; i++) {\n            if (!bodies[i].render.visible)\n                continue;\n\n            var parts = bodies[i].parts;\n            for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                var part = parts[j];\n                c.font = \"12px Arial\";\n                c.fillStyle = 'rgba(255,255,255,0.5)';\n                c.fillText(part.id, part.position.x + 10, part.position.y - 10);\n            }\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method collisions\n     * @param {render} render\n     * @param {pair[]} pairs\n     * @param {RenderingContext} context\n     */\n    Render.collisions = function(render, pairs, context) {\n        var c = context,\n            options = render.options,\n            pair,\n            collision,\n            corrected,\n            bodyA,\n            bodyB,\n            i,\n            j;\n\n        c.beginPath();\n\n        // render collision positions\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            collision = pair.collision;\n            for (j = 0; j < pair.activeContacts.length; j++) {\n                var contact = pair.activeContacts[j],\n                    vertex = contact.vertex;\n                c.rect(vertex.x - 1.5, vertex.y - 1.5, 3.5, 3.5);\n            }\n        }\n\n        if (options.wireframes) {\n            c.fillStyle = 'rgba(255,255,255,0.7)';\n        } else {\n            c.fillStyle = 'orange';\n        }\n        c.fill();\n\n        c.beginPath();\n\n        // render collision normals\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            collision = pair.collision;\n\n            if (pair.activeContacts.length > 0) {\n                var normalPosX = pair.activeContacts[0].vertex.x,\n                    normalPosY = pair.activeContacts[0].vertex.y;\n\n                if (pair.activeContacts.length === 2) {\n                    normalPosX = (pair.activeContacts[0].vertex.x + pair.activeContacts[1].vertex.x) / 2;\n                    normalPosY = (pair.activeContacts[0].vertex.y + pair.activeContacts[1].vertex.y) / 2;\n                }\n\n                if (collision.bodyB === collision.supports[0].body || collision.bodyA.isStatic === true) {\n                    c.moveTo(normalPosX - collision.normal.x * 8, normalPosY - collision.normal.y * 8);\n                } else {\n                    c.moveTo(normalPosX + collision.normal.x * 8, normalPosY + collision.normal.y * 8);\n                }\n\n                c.lineTo(normalPosX, normalPosY);\n            }\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,165,0,0.7)';\n        } else {\n            c.strokeStyle = 'orange';\n        }\n\n        c.lineWidth = 1;\n        c.stroke();\n    };\n\n    /**\n     * Description\n     * @private\n     * @method separations\n     * @param {render} render\n     * @param {pair[]} pairs\n     * @param {RenderingContext} context\n     */\n    Render.separations = function(render, pairs, context) {\n        var c = context,\n            options = render.options,\n            pair,\n            collision,\n            corrected,\n            bodyA,\n            bodyB,\n            i,\n            j;\n\n        c.beginPath();\n\n        // render separations\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            collision = pair.collision;\n            bodyA = collision.bodyA;\n            bodyB = collision.bodyB;\n\n            var k = 1;\n\n            if (!bodyB.isStatic && !bodyA.isStatic) k = 0.5;\n            if (bodyB.isStatic) k = 0;\n\n            c.moveTo(bodyB.position.x, bodyB.position.y);\n            c.lineTo(bodyB.position.x - collision.penetration.x * k, bodyB.position.y - collision.penetration.y * k);\n\n            k = 1;\n\n            if (!bodyB.isStatic && !bodyA.isStatic) k = 0.5;\n            if (bodyA.isStatic) k = 0;\n\n            c.moveTo(bodyA.position.x, bodyA.position.y);\n            c.lineTo(bodyA.position.x + collision.penetration.x * k, bodyA.position.y + collision.penetration.y * k);\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,165,0,0.5)';\n        } else {\n            c.strokeStyle = 'orange';\n        }\n        c.stroke();\n    };\n\n    /**\n     * Description\n     * @private\n     * @method grid\n     * @param {render} render\n     * @param {grid} grid\n     * @param {RenderingContext} context\n     */\n    Render.grid = function(render, grid, context) {\n        var c = context,\n            options = render.options;\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,180,0,0.1)';\n        } else {\n            c.strokeStyle = 'rgba(255,180,0,0.5)';\n        }\n\n        c.beginPath();\n\n        var bucketKeys = Common.keys(grid.buckets);\n\n        for (var i = 0; i < bucketKeys.length; i++) {\n            var bucketId = bucketKeys[i];\n\n            if (grid.buckets[bucketId].length < 2)\n                continue;\n\n            var region = bucketId.split(/C|R/);\n            c.rect(0.5 + parseInt(region[1], 10) * grid.bucketWidth,\n                    0.5 + parseInt(region[2], 10) * grid.bucketHeight,\n                    grid.bucketWidth,\n                    grid.bucketHeight);\n        }\n\n        c.lineWidth = 1;\n        c.stroke();\n    };\n\n    /**\n     * Description\n     * @private\n     * @method inspector\n     * @param {inspector} inspector\n     * @param {RenderingContext} context\n     */\n    Render.inspector = function(inspector, context) {\n        var engine = inspector.engine,\n            selected = inspector.selected,\n            render = inspector.render,\n            options = render.options,\n            bounds;\n\n        if (options.hasBounds) {\n            var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n                boundsHeight = render.bounds.max.y - render.bounds.min.y,\n                boundsScaleX = boundsWidth / render.options.width,\n                boundsScaleY = boundsHeight / render.options.height;\n\n            context.scale(1 / boundsScaleX, 1 / boundsScaleY);\n            context.translate(-render.bounds.min.x, -render.bounds.min.y);\n        }\n\n        for (var i = 0; i < selected.length; i++) {\n            var item = selected[i].data;\n\n            context.translate(0.5, 0.5);\n            context.lineWidth = 1;\n            context.strokeStyle = 'rgba(255,165,0,0.9)';\n            context.setLineDash([1,2]);\n\n            switch (item.type) {\n\n            case 'body':\n\n                // render body selections\n                bounds = item.bounds;\n                context.beginPath();\n                context.rect(Math.floor(bounds.min.x - 3), Math.floor(bounds.min.y - 3),\n                             Math.floor(bounds.max.x - bounds.min.x + 6), Math.floor(bounds.max.y - bounds.min.y + 6));\n                context.closePath();\n                context.stroke();\n\n                break;\n\n            case 'constraint':\n\n                // render constraint selections\n                var point = item.pointA;\n                if (item.bodyA)\n                    point = item.pointB;\n                context.beginPath();\n                context.arc(point.x, point.y, 10, 0, 2 * Math.PI);\n                context.closePath();\n                context.stroke();\n\n                break;\n\n            }\n\n            context.setLineDash([]);\n            context.translate(-0.5, -0.5);\n        }\n\n        // render selection region\n        if (inspector.selectStart !== null) {\n            context.translate(0.5, 0.5);\n            context.lineWidth = 1;\n            context.strokeStyle = 'rgba(255,165,0,0.6)';\n            context.fillStyle = 'rgba(255,165,0,0.1)';\n            bounds = inspector.selectBounds;\n            context.beginPath();\n            context.rect(Math.floor(bounds.min.x), Math.floor(bounds.min.y),\n                         Math.floor(bounds.max.x - bounds.min.x), Math.floor(bounds.max.y - bounds.min.y));\n            context.closePath();\n            context.stroke();\n            context.fill();\n            context.translate(-0.5, -0.5);\n        }\n\n        if (options.hasBounds)\n            context.setTransform(1, 0, 0, 1, 0, 0);\n    };\n\n    /**\n     * Description\n     * @method _createCanvas\n     * @private\n     * @param {} width\n     * @param {} height\n     * @return canvas\n     */\n    var _createCanvas = function(width, height) {\n        var canvas = document.createElement('canvas');\n        canvas.width = width;\n        canvas.height = height;\n        canvas.oncontextmenu = function() { return false; };\n        canvas.onselectstart = function() { return false; };\n        return canvas;\n    };\n\n    /**\n     * Gets the pixel ratio of the canvas.\n     * @method _getPixelRatio\n     * @private\n     * @param {HTMLElement} canvas\n     * @return {Number} pixel ratio\n     */\n    var _getPixelRatio = function(canvas) {\n        var context = canvas.getContext('2d'),\n            devicePixelRatio = window.devicePixelRatio || 1,\n            backingStorePixelRatio = context.webkitBackingStorePixelRatio || context.mozBackingStorePixelRatio\n                                      || context.msBackingStorePixelRatio || context.oBackingStorePixelRatio\n                                      || context.backingStorePixelRatio || 1;\n\n        return devicePixelRatio / backingStorePixelRatio;\n    };\n\n    /**\n     * Gets the requested texture (an Image) via its path\n     * @method _getTexture\n     * @private\n     * @param {render} render\n     * @param {string} imagePath\n     * @return {Image} texture\n     */\n    var _getTexture = function(render, imagePath) {\n        var image = render.textures[imagePath];\n\n        if (image)\n            return image;\n\n        image = render.textures[imagePath] = new Image();\n        image.src = imagePath;\n\n        return image;\n    };\n\n    /**\n     * Applies the background to the canvas using CSS.\n     * @method applyBackground\n     * @private\n     * @param {render} render\n     * @param {string} background\n     */\n    var _applyBackground = function(render, background) {\n        var cssBackground = background;\n\n        if (/(jpg|gif|png)$/.test(background))\n            cssBackground = 'url(' + background + ')';\n\n        render.canvas.style.background = cssBackground;\n        render.canvas.style.backgroundSize = \"contain\";\n        render.currentBackground = background;\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired before rendering\n    *\n    * @event beforeRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after rendering\n    *\n    * @event afterRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * A back-reference to the `Matter.Render` module.\n     *\n     * @property controller\n     * @type render\n     */\n\n    /**\n     * A reference to the `Matter.Engine` instance to be used.\n     *\n     * @property engine\n     * @type engine\n     */\n\n    /**\n     * A reference to the element where the canvas is to be inserted (if `render.canvas` has not been specified)\n     *\n     * @property element\n     * @type HTMLElement\n     * @default null\n     */\n\n    /**\n     * The canvas element to render to. If not specified, one will be created if `render.element` has been specified.\n     *\n     * @property canvas\n     * @type HTMLCanvasElement\n     * @default null\n     */\n\n    /**\n     * The configuration options of the renderer.\n     *\n     * @property options\n     * @type {}\n     */\n\n    /**\n     * The target width in pixels of the `render.canvas` to be created.\n     *\n     * @property options.width\n     * @type number\n     * @default 800\n     */\n\n    /**\n     * The target height in pixels of the `render.canvas` to be created.\n     *\n     * @property options.height\n     * @type number\n     * @default 600\n     */\n\n    /**\n     * A flag that specifies if `render.bounds` should be used when rendering.\n     *\n     * @property options.hasBounds\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A `Bounds` object that specifies the drawing view region.\n     * Rendering will be automatically transformed and scaled to fit within the canvas size (`render.options.width` and `render.options.height`).\n     * This allows for creating views that can pan or zoom around the scene.\n     * You must also set `render.options.hasBounds` to `true` to enable bounded rendering.\n     *\n     * @property bounds\n     * @type bounds\n     */\n\n    /**\n     * The 2d rendering context from the `render.canvas` element.\n     *\n     * @property context\n     * @type CanvasRenderingContext2D\n     */\n\n    /**\n     * The sprite texture cache.\n     *\n     * @property textures\n     * @type {}\n     */\n\n})();\n\n},{\"../body/Composite\":2,\"../collision/Grid\":6,\"../core/Common\":14,\"../core/Events\":16,\"../core/Mouse\":19,\"../geometry/Bounds\":26,\"../geometry/Vector\":28}],32:[function(_dereq_,module,exports){\n/**\n* The `Matter.RenderPixi` module is an example renderer using pixi.js.\n* See also `Matter.Render` for a canvas based renderer.\n*\n* @class RenderPixi\n* @deprecated the Matter.RenderPixi module will soon be removed from the Matter.js core.\n* It will likely be moved to its own repository (but maintenance will be limited).\n*/\n\nvar RenderPixi = {};\n\nmodule.exports = RenderPixi;\n\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Composite = _dereq_('../body/Composite');\nvar Common = _dereq_('../core/Common');\nvar Events = _dereq_('../core/Events');\nvar Vector = _dereq_('../geometry/Vector');\n\n(function() {\n\n    var _requestAnimationFrame,\n        _cancelAnimationFrame;\n\n    if (typeof window !== 'undefined') {\n        _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\n                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame \n                                      || function(callback){ window.setTimeout(function() { callback(Common.now()); }, 1000 / 60); };\n   \n        _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame \n                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;\n    }\n    \n    /**\n     * Creates a new Pixi.js WebGL renderer\n     * @method create\n     * @param {object} options\n     * @return {RenderPixi} A new renderer\n     * @deprecated\n     */\n    RenderPixi.create = function(options) {\n        Common.warn('RenderPixi.create: Matter.RenderPixi is deprecated (see docs)');\n\n        var defaults = {\n            controller: RenderPixi,\n            engine: null,\n            element: null,\n            frameRequestId: null,\n            canvas: null,\n            renderer: null,\n            container: null,\n            spriteContainer: null,\n            pixiOptions: null,\n            options: {\n                width: 800,\n                height: 600,\n                background: '#fafafa',\n                wireframeBackground: '#222',\n                hasBounds: false,\n                enabled: true,\n                wireframes: true,\n                showSleeping: true,\n                showDebug: false,\n                showBroadphase: false,\n                showBounds: false,\n                showVelocity: false,\n                showCollisions: false,\n                showAxes: false,\n                showPositions: false,\n                showAngleIndicator: false,\n                showIds: false,\n                showShadows: false\n            }\n        };\n\n        var render = Common.extend(defaults, options),\n            transparent = !render.options.wireframes && render.options.background === 'transparent';\n\n        // init pixi\n        render.pixiOptions = render.pixiOptions || {\n            view: render.canvas,\n            transparent: transparent,\n            antialias: true,\n            backgroundColor: options.background\n        };\n\n        render.mouse = options.mouse;\n        render.engine = options.engine;\n        render.renderer = render.renderer || new PIXI.WebGLRenderer(render.options.width, render.options.height, render.pixiOptions);\n        render.container = render.container || new PIXI.Container();\n        render.spriteContainer = render.spriteContainer || new PIXI.Container();\n        render.canvas = render.canvas || render.renderer.view;\n        render.bounds = render.bounds || { \n            min: {\n                x: 0,\n                y: 0\n            }, \n            max: { \n                x: render.options.width,\n                y: render.options.height\n            }\n        };\n\n        // event listeners\n        Events.on(render.engine, 'beforeUpdate', function() {\n            RenderPixi.clear(render);\n        });\n\n        // caches\n        render.textures = {};\n        render.sprites = {};\n        render.primitives = {};\n\n        // use a sprite batch for performance\n        render.container.addChild(render.spriteContainer);\n\n        // insert canvas\n        if (Common.isElement(render.element)) {\n            render.element.appendChild(render.canvas);\n        } else {\n            Common.warn('No \"render.element\" passed, \"render.canvas\" was not inserted into document.');\n        }\n\n        // prevent menus on canvas\n        render.canvas.oncontextmenu = function() { return false; };\n        render.canvas.onselectstart = function() { return false; };\n\n        return render;\n    };\n\n    /**\n     * Continuously updates the render canvas on the `requestAnimationFrame` event.\n     * @method run\n     * @param {render} render\n     * @deprecated\n     */\n    RenderPixi.run = function(render) {\n        (function loop(time){\n            render.frameRequestId = _requestAnimationFrame(loop);\n            RenderPixi.world(render);\n        })();\n    };\n\n    /**\n     * Ends execution of `Render.run` on the given `render`, by canceling the animation frame request event loop.\n     * @method stop\n     * @param {render} render\n     * @deprecated\n     */\n    RenderPixi.stop = function(render) {\n        _cancelAnimationFrame(render.frameRequestId);\n    };\n\n    /**\n     * Clears the scene graph\n     * @method clear\n     * @param {RenderPixi} render\n     * @deprecated\n     */\n    RenderPixi.clear = function(render) {\n        var container = render.container,\n            spriteContainer = render.spriteContainer;\n\n        // clear stage container\n        while (container.children[0]) { \n            container.removeChild(container.children[0]); \n        }\n\n        // clear sprite batch\n        while (spriteContainer.children[0]) { \n            spriteContainer.removeChild(spriteContainer.children[0]); \n        }\n\n        var bgSprite = render.sprites['bg-0'];\n\n        // clear caches\n        render.textures = {};\n        render.sprites = {};\n        render.primitives = {};\n\n        // set background sprite\n        render.sprites['bg-0'] = bgSprite;\n        if (bgSprite)\n            container.addChildAt(bgSprite, 0);\n\n        // add sprite batch back into container\n        render.container.addChild(render.spriteContainer);\n\n        // reset background state\n        render.currentBackground = null;\n\n        // reset bounds transforms\n        container.scale.set(1, 1);\n        container.position.set(0, 0);\n    };\n\n    /**\n     * Sets the background of the canvas \n     * @method setBackground\n     * @param {RenderPixi} render\n     * @param {string} background\n     * @deprecated\n     */\n    RenderPixi.setBackground = function(render, background) {\n        if (render.currentBackground !== background) {\n            var isColor = background.indexOf && background.indexOf('#') !== -1,\n                bgSprite = render.sprites['bg-0'];\n\n            if (isColor) {\n                // if solid background color\n                var color = Common.colorToNumber(background);\n                render.renderer.backgroundColor = color;\n\n                // remove background sprite if existing\n                if (bgSprite)\n                    render.container.removeChild(bgSprite); \n            } else {\n                // initialise background sprite if needed\n                if (!bgSprite) {\n                    var texture = _getTexture(render, background);\n\n                    bgSprite = render.sprites['bg-0'] = new PIXI.Sprite(texture);\n                    bgSprite.position.x = 0;\n                    bgSprite.position.y = 0;\n                    render.container.addChildAt(bgSprite, 0);\n                }\n            }\n\n            render.currentBackground = background;\n        }\n    };\n\n    /**\n     * Description\n     * @method world\n     * @param {engine} engine\n     * @deprecated\n     */\n    RenderPixi.world = function(render) {\n        var engine = render.engine,\n            world = engine.world,\n            renderer = render.renderer,\n            container = render.container,\n            options = render.options,\n            bodies = Composite.allBodies(world),\n            allConstraints = Composite.allConstraints(world),\n            constraints = [],\n            i;\n\n        if (options.wireframes) {\n            RenderPixi.setBackground(render, options.wireframeBackground);\n        } else {\n            RenderPixi.setBackground(render, options.background);\n        }\n\n        // handle bounds\n        var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n            boundsHeight = render.bounds.max.y - render.bounds.min.y,\n            boundsScaleX = boundsWidth / render.options.width,\n            boundsScaleY = boundsHeight / render.options.height;\n\n        if (options.hasBounds) {\n            // Hide bodies that are not in view\n            for (i = 0; i < bodies.length; i++) {\n                var body = bodies[i];\n                body.render.sprite.visible = Bounds.overlaps(body.bounds, render.bounds);\n            }\n\n            // filter out constraints that are not in view\n            for (i = 0; i < allConstraints.length; i++) {\n                var constraint = allConstraints[i],\n                    bodyA = constraint.bodyA,\n                    bodyB = constraint.bodyB,\n                    pointAWorld = constraint.pointA,\n                    pointBWorld = constraint.pointB;\n\n                if (bodyA) pointAWorld = Vector.add(bodyA.position, constraint.pointA);\n                if (bodyB) pointBWorld = Vector.add(bodyB.position, constraint.pointB);\n\n                if (!pointAWorld || !pointBWorld)\n                    continue;\n\n                if (Bounds.contains(render.bounds, pointAWorld) || Bounds.contains(render.bounds, pointBWorld))\n                    constraints.push(constraint);\n            }\n\n            // transform the view\n            container.scale.set(1 / boundsScaleX, 1 / boundsScaleY);\n            container.position.set(-render.bounds.min.x * (1 / boundsScaleX), -render.bounds.min.y * (1 / boundsScaleY));\n        } else {\n            constraints = allConstraints;\n        }\n\n        for (i = 0; i < bodies.length; i++)\n            RenderPixi.body(render, bodies[i]);\n\n        for (i = 0; i < constraints.length; i++)\n            RenderPixi.constraint(render, constraints[i]);\n\n        renderer.render(container);\n    };\n\n\n    /**\n     * Description\n     * @method constraint\n     * @param {engine} engine\n     * @param {constraint} constraint\n     * @deprecated\n     */\n    RenderPixi.constraint = function(render, constraint) {\n        var engine = render.engine,\n            bodyA = constraint.bodyA,\n            bodyB = constraint.bodyB,\n            pointA = constraint.pointA,\n            pointB = constraint.pointB,\n            container = render.container,\n            constraintRender = constraint.render,\n            primitiveId = 'c-' + constraint.id,\n            primitive = render.primitives[primitiveId];\n\n        // initialise constraint primitive if not existing\n        if (!primitive)\n            primitive = render.primitives[primitiveId] = new PIXI.Graphics();\n\n        // don't render if constraint does not have two end points\n        if (!constraintRender.visible || !constraint.pointA || !constraint.pointB) {\n            primitive.clear();\n            return;\n        }\n\n        // add to scene graph if not already there\n        if (Common.indexOf(container.children, primitive) === -1)\n            container.addChild(primitive);\n\n        // render the constraint on every update, since they can change dynamically\n        primitive.clear();\n        primitive.beginFill(0, 0);\n        primitive.lineStyle(constraintRender.lineWidth, Common.colorToNumber(constraintRender.strokeStyle), 1);\n        \n        if (bodyA) {\n            primitive.moveTo(bodyA.position.x + pointA.x, bodyA.position.y + pointA.y);\n        } else {\n            primitive.moveTo(pointA.x, pointA.y);\n        }\n\n        if (bodyB) {\n            primitive.lineTo(bodyB.position.x + pointB.x, bodyB.position.y + pointB.y);\n        } else {\n            primitive.lineTo(pointB.x, pointB.y);\n        }\n\n        primitive.endFill();\n    };\n    \n    /**\n     * Description\n     * @method body\n     * @param {engine} engine\n     * @param {body} body\n     * @deprecated\n     */\n    RenderPixi.body = function(render, body) {\n        var engine = render.engine,\n            bodyRender = body.render;\n\n        if (!bodyRender.visible)\n            return;\n\n        if (bodyRender.sprite && bodyRender.sprite.texture) {\n            var spriteId = 'b-' + body.id,\n                sprite = render.sprites[spriteId],\n                spriteContainer = render.spriteContainer;\n\n            // initialise body sprite if not existing\n            if (!sprite)\n                sprite = render.sprites[spriteId] = _createBodySprite(render, body);\n\n            // add to scene graph if not already there\n            if (Common.indexOf(spriteContainer.children, sprite) === -1)\n                spriteContainer.addChild(sprite);\n\n            // update body sprite\n            sprite.position.x = body.position.x;\n            sprite.position.y = body.position.y;\n            sprite.rotation = body.angle;\n            sprite.scale.x = bodyRender.sprite.xScale || 1;\n            sprite.scale.y = bodyRender.sprite.yScale || 1;\n        } else {\n            var primitiveId = 'b-' + body.id,\n                primitive = render.primitives[primitiveId],\n                container = render.container;\n\n            // initialise body primitive if not existing\n            if (!primitive) {\n                primitive = render.primitives[primitiveId] = _createBodyPrimitive(render, body);\n                primitive.initialAngle = body.angle;\n            }\n\n            // add to scene graph if not already there\n            if (Common.indexOf(container.children, primitive) === -1)\n                container.addChild(primitive);\n\n            // update body primitive\n            primitive.position.x = body.position.x;\n            primitive.position.y = body.position.y;\n            primitive.rotation = body.angle - primitive.initialAngle;\n        }\n    };\n\n    /**\n     * Creates a body sprite\n     * @method _createBodySprite\n     * @private\n     * @param {RenderPixi} render\n     * @param {body} body\n     * @return {PIXI.Sprite} sprite\n     * @deprecated\n     */\n    var _createBodySprite = function(render, body) {\n        var bodyRender = body.render,\n            texturePath = bodyRender.sprite.texture,\n            texture = _getTexture(render, texturePath),\n            sprite = new PIXI.Sprite(texture);\n\n        sprite.anchor.x = body.render.sprite.xOffset;\n        sprite.anchor.y = body.render.sprite.yOffset;\n\n        return sprite;\n    };\n\n    /**\n     * Creates a body primitive\n     * @method _createBodyPrimitive\n     * @private\n     * @param {RenderPixi} render\n     * @param {body} body\n     * @return {PIXI.Graphics} graphics\n     * @deprecated\n     */\n    var _createBodyPrimitive = function(render, body) {\n        var bodyRender = body.render,\n            options = render.options,\n            primitive = new PIXI.Graphics(),\n            fillStyle = Common.colorToNumber(bodyRender.fillStyle),\n            strokeStyle = Common.colorToNumber(bodyRender.strokeStyle),\n            strokeStyleIndicator = Common.colorToNumber(bodyRender.strokeStyle),\n            strokeStyleWireframe = Common.colorToNumber('#bbb'),\n            strokeStyleWireframeIndicator = Common.colorToNumber('#CD5C5C'),\n            part;\n\n        primitive.clear();\n\n        // handle compound parts\n        for (var k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n            part = body.parts[k];\n\n            if (!options.wireframes) {\n                primitive.beginFill(fillStyle, 1);\n                primitive.lineStyle(bodyRender.lineWidth, strokeStyle, 1);\n            } else {\n                primitive.beginFill(0, 0);\n                primitive.lineStyle(1, strokeStyleWireframe, 1);\n            }\n\n            primitive.moveTo(part.vertices[0].x - body.position.x, part.vertices[0].y - body.position.y);\n\n            for (var j = 1; j < part.vertices.length; j++) {\n                primitive.lineTo(part.vertices[j].x - body.position.x, part.vertices[j].y - body.position.y);\n            }\n\n            primitive.lineTo(part.vertices[0].x - body.position.x, part.vertices[0].y - body.position.y);\n\n            primitive.endFill();\n\n            // angle indicator\n            if (options.showAngleIndicator || options.showAxes) {\n                primitive.beginFill(0, 0);\n\n                if (options.wireframes) {\n                    primitive.lineStyle(1, strokeStyleWireframeIndicator, 1);\n                } else {\n                    primitive.lineStyle(1, strokeStyleIndicator);\n                }\n\n                primitive.moveTo(part.position.x - body.position.x, part.position.y - body.position.y);\n                primitive.lineTo(((part.vertices[0].x + part.vertices[part.vertices.length-1].x) / 2 - body.position.x), \n                                 ((part.vertices[0].y + part.vertices[part.vertices.length-1].y) / 2 - body.position.y));\n\n                primitive.endFill();\n            }\n        }\n\n        return primitive;\n    };\n\n    /**\n     * Gets the requested texture (a PIXI.Texture) via its path\n     * @method _getTexture\n     * @private\n     * @param {RenderPixi} render\n     * @param {string} imagePath\n     * @return {PIXI.Texture} texture\n     * @deprecated\n     */\n    var _getTexture = function(render, imagePath) {\n        var texture = render.textures[imagePath];\n\n        if (!texture)\n            texture = render.textures[imagePath] = PIXI.Texture.fromImage(imagePath);\n\n        return texture;\n    };\n\n})();\n\n},{\"../body/Composite\":2,\"../core/Common\":14,\"../core/Events\":16,\"../geometry/Bounds\":26,\"../geometry/Vector\":28}]},{},[30])(30)\n});\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n    decomp: polygonDecomp,\n    quickDecomp: polygonQuickDecomp,\n    isSimple: polygonIsSimple,\n    removeCollinearPoints: polygonRemoveCollinearPoints,\n    makeCCW: polygonMakeCCW\n};\n\n/**\n * Compute the intersection between two lines.\n * @static\n * @method lineInt\n * @param  {Array}  l1          Line vector 1\n * @param  {Array}  l2          Line vector 2\n * @param  {Number} precision   Precision to use when checking if the lines are parallel\n * @return {Array}              The intersection point.\n */\nfunction lineInt(l1,l2,precision){\n    precision = precision || 0;\n    var i = [0,0]; // point\n    var a1, b1, c1, a2, b2, c2, det; // scalars\n    a1 = l1[1][1] - l1[0][1];\n    b1 = l1[0][0] - l1[1][0];\n    c1 = a1 * l1[0][0] + b1 * l1[0][1];\n    a2 = l2[1][1] - l2[0][1];\n    b2 = l2[0][0] - l2[1][0];\n    c2 = a2 * l2[0][0] + b2 * l2[0][1];\n    det = a1 * b2 - a2*b1;\n    if (!scalar_eq(det, 0, precision)) { // lines are not parallel\n        i[0] = (b2 * c1 - b1 * c2) / det;\n        i[1] = (a1 * c2 - a2 * c1) / det;\n    }\n    return i;\n}\n\n/**\n * Checks if two line segments intersects.\n * @method segmentsIntersect\n * @param {Array} p1 The start vertex of the first line segment.\n * @param {Array} p2 The end vertex of the first line segment.\n * @param {Array} q1 The start vertex of the second line segment.\n * @param {Array} q2 The end vertex of the second line segment.\n * @return {Boolean} True if the two line segments intersect\n */\nfunction lineSegmentsIntersect(p1, p2, q1, q2){\n\tvar dx = p2[0] - p1[0];\n\tvar dy = p2[1] - p1[1];\n\tvar da = q2[0] - q1[0];\n\tvar db = q2[1] - q1[1];\n\n\t// segments are parallel\n\tif((da*dy - db*dx) === 0){\n\t\treturn false;\n\t}\n\n\tvar s = (dx * (q1[1] - p1[1]) + dy * (p1[0] - q1[0])) / (da * dy - db * dx);\n\tvar t = (da * (p1[1] - q1[1]) + db * (q1[0] - p1[0])) / (db * dx - da * dy);\n\n\treturn (s>=0 && s<=1 && t>=0 && t<=1);\n}\n\n/**\n * Get the area of a triangle spanned by the three given points. Note that the area will be negative if the points are not given in counter-clockwise order.\n * @static\n * @method area\n * @param  {Array} a\n * @param  {Array} b\n * @param  {Array} c\n * @return {Number}\n */\nfunction triangleArea(a,b,c){\n    return (((b[0] - a[0])*(c[1] - a[1]))-((c[0] - a[0])*(b[1] - a[1])));\n}\n\nfunction isLeft(a,b,c){\n    return triangleArea(a,b,c) > 0;\n}\n\nfunction isLeftOn(a,b,c) {\n    return triangleArea(a, b, c) >= 0;\n}\n\nfunction isRight(a,b,c) {\n    return triangleArea(a, b, c) < 0;\n}\n\nfunction isRightOn(a,b,c) {\n    return triangleArea(a, b, c) <= 0;\n}\n\nvar tmpPoint1 = [],\n    tmpPoint2 = [];\n\n/**\n * Check if three points are collinear\n * @method collinear\n * @param  {Array} a\n * @param  {Array} b\n * @param  {Array} c\n * @param  {Number} [thresholdAngle=0] Threshold angle to use when comparing the vectors. The function will return true if the angle between the resulting vectors is less than this value. Use zero for max precision.\n * @return {Boolean}\n */\nfunction collinear(a,b,c,thresholdAngle) {\n    if(!thresholdAngle){\n        return triangleArea(a, b, c) === 0;\n    } else {\n        var ab = tmpPoint1,\n            bc = tmpPoint2;\n\n        ab[0] = b[0]-a[0];\n        ab[1] = b[1]-a[1];\n        bc[0] = c[0]-b[0];\n        bc[1] = c[1]-b[1];\n\n        var dot = ab[0]*bc[0] + ab[1]*bc[1],\n            magA = Math.sqrt(ab[0]*ab[0] + ab[1]*ab[1]),\n            magB = Math.sqrt(bc[0]*bc[0] + bc[1]*bc[1]),\n            angle = Math.acos(dot/(magA*magB));\n        return angle < thresholdAngle;\n    }\n}\n\nfunction sqdist(a,b){\n    var dx = b[0] - a[0];\n    var dy = b[1] - a[1];\n    return dx * dx + dy * dy;\n}\n\n/**\n * Get a vertex at position i. It does not matter if i is out of bounds, this function will just cycle.\n * @method at\n * @param  {Number} i\n * @return {Array}\n */\nfunction polygonAt(polygon, i){\n    var s = polygon.length;\n    return polygon[i < 0 ? i % s + s : i % s];\n}\n\n/**\n * Clear the polygon data\n * @method clear\n * @return {Array}\n */\nfunction polygonClear(polygon){\n    polygon.length = 0;\n}\n\n/**\n * Append points \"from\" to \"to\"-1 from an other polygon \"poly\" onto this one.\n * @method append\n * @param {Polygon} poly The polygon to get points from.\n * @param {Number}  from The vertex index in \"poly\".\n * @param {Number}  to The end vertex index in \"poly\". Note that this vertex is NOT included when appending.\n * @return {Array}\n */\nfunction polygonAppend(polygon, poly, from, to){\n    for(var i=from; i<to; i++){\n        polygon.push(poly[i]);\n    }\n}\n\n/**\n * Make sure that the polygon vertices are ordered counter-clockwise.\n * @method makeCCW\n */\nfunction polygonMakeCCW(polygon){\n    var br = 0,\n        v = polygon;\n\n    // find bottom right point\n    for (var i = 1; i < polygon.length; ++i) {\n        if (v[i][1] < v[br][1] || (v[i][1] === v[br][1] && v[i][0] > v[br][0])) {\n            br = i;\n        }\n    }\n\n    // reverse poly if clockwise\n    if (!isLeft(polygonAt(polygon, br - 1), polygonAt(polygon, br), polygonAt(polygon, br + 1))) {\n        polygonReverse(polygon);\n    }\n}\n\n/**\n * Reverse the vertices in the polygon\n * @method reverse\n */\nfunction polygonReverse(polygon){\n    var tmp = [];\n    var N = polygon.length;\n    for(var i=0; i!==N; i++){\n        tmp.push(polygon.pop());\n    }\n    for(var i=0; i!==N; i++){\n\t\tpolygon[i] = tmp[i];\n    }\n}\n\n/**\n * Check if a point in the polygon is a reflex point\n * @method isReflex\n * @param  {Number}  i\n * @return {Boolean}\n */\nfunction polygonIsReflex(polygon, i){\n    return isRight(polygonAt(polygon, i - 1), polygonAt(polygon, i), polygonAt(polygon, i + 1));\n}\n\nvar tmpLine1=[],\n    tmpLine2=[];\n\n/**\n * Check if two vertices in the polygon can see each other\n * @method canSee\n * @param  {Number} a Vertex index 1\n * @param  {Number} b Vertex index 2\n * @return {Boolean}\n */\nfunction polygonCanSee(polygon, a,b) {\n    var p, dist, l1=tmpLine1, l2=tmpLine2;\n\n    if (isLeftOn(polygonAt(polygon, a + 1), polygonAt(polygon, a), polygonAt(polygon, b)) && isRightOn(polygonAt(polygon, a - 1), polygonAt(polygon, a), polygonAt(polygon, b))) {\n        return false;\n    }\n    dist = sqdist(polygonAt(polygon, a), polygonAt(polygon, b));\n    for (var i = 0; i !== polygon.length; ++i) { // for each edge\n        if ((i + 1) % polygon.length === a || i === a){ // ignore incident edges\n            continue;\n        }\n        if (isLeftOn(polygonAt(polygon, a), polygonAt(polygon, b), polygonAt(polygon, i + 1)) && isRightOn(polygonAt(polygon, a), polygonAt(polygon, b), polygonAt(polygon, i))) { // if diag intersects an edge\n            l1[0] = polygonAt(polygon, a);\n            l1[1] = polygonAt(polygon, b);\n            l2[0] = polygonAt(polygon, i);\n            l2[1] = polygonAt(polygon, i + 1);\n            p = lineInt(l1,l2);\n            if (sqdist(polygonAt(polygon, a), p) < dist) { // if edge is blocking visibility to b\n                return false;\n            }\n        }\n    }\n\n    return true;\n}\n\n/**\n * Copy the polygon from vertex i to vertex j.\n * @method copy\n * @param  {Number} i\n * @param  {Number} j\n * @param  {Polygon} [targetPoly]   Optional target polygon to save in.\n * @return {Polygon}                The resulting copy.\n */\nfunction polygonCopy(polygon, i,j,targetPoly){\n    var p = targetPoly || [];\n    polygonClear(p);\n    if (i < j) {\n        // Insert all vertices from i to j\n        for(var k=i; k<=j; k++){\n            p.push(polygon[k]);\n        }\n\n    } else {\n\n        // Insert vertices 0 to j\n        for(var k=0; k<=j; k++){\n            p.push(polygon[k]);\n        }\n\n        // Insert vertices i to end\n        for(var k=i; k<polygon.length; k++){\n            p.push(polygon[k]);\n        }\n    }\n\n    return p;\n}\n\n/**\n * Decomposes the polygon into convex pieces. Returns a list of edges [[p1,p2],[p2,p3],...] that cuts the polygon.\n * Note that this algorithm has complexity O(N^4) and will be very slow for polygons with many vertices.\n * @method getCutEdges\n * @return {Array}\n */\nfunction polygonGetCutEdges(polygon) {\n    var min=[], tmp1=[], tmp2=[], tmpPoly = [];\n    var nDiags = Number.MAX_VALUE;\n\n    for (var i = 0; i < polygon.length; ++i) {\n        if (polygonIsReflex(polygon, i)) {\n            for (var j = 0; j < polygon.length; ++j) {\n                if (polygonCanSee(polygon, i, j)) {\n                    tmp1 = polygonGetCutEdges(polygonCopy(polygon, i, j, tmpPoly));\n                    tmp2 = polygonGetCutEdges(polygonCopy(polygon, j, i, tmpPoly));\n\n                    for(var k=0; k<tmp2.length; k++){\n                        tmp1.push(tmp2[k]);\n                    }\n\n                    if (tmp1.length < nDiags) {\n                        min = tmp1;\n                        nDiags = tmp1.length;\n                        min.push([polygonAt(polygon, i), polygonAt(polygon, j)]);\n                    }\n                }\n            }\n        }\n    }\n\n    return min;\n}\n\n/**\n * Decomposes the polygon into one or more convex sub-Polygons.\n * @method decomp\n * @return {Array} An array or Polygon objects.\n */\nfunction polygonDecomp(polygon){\n    var edges = polygonGetCutEdges(polygon);\n    if(edges.length > 0){\n        return polygonSlice(polygon, edges);\n    } else {\n        return [polygon];\n    }\n}\n\n/**\n * Slices the polygon given one or more cut edges. If given one, this function will return two polygons (false on failure). If many, an array of polygons.\n * @method slice\n * @param {Array} cutEdges A list of edges, as returned by .getCutEdges()\n * @return {Array}\n */\nfunction polygonSlice(polygon, cutEdges){\n    if(cutEdges.length === 0){\n\t\treturn [polygon];\n    }\n    if(cutEdges instanceof Array && cutEdges.length && cutEdges[0] instanceof Array && cutEdges[0].length===2 && cutEdges[0][0] instanceof Array){\n\n        var polys = [polygon];\n\n        for(var i=0; i<cutEdges.length; i++){\n            var cutEdge = cutEdges[i];\n            // Cut all polys\n            for(var j=0; j<polys.length; j++){\n                var poly = polys[j];\n                var result = polygonSlice(poly, cutEdge);\n                if(result){\n                    // Found poly! Cut and quit\n                    polys.splice(j,1);\n                    polys.push(result[0],result[1]);\n                    break;\n                }\n            }\n        }\n\n        return polys;\n    } else {\n\n        // Was given one edge\n        var cutEdge = cutEdges;\n        var i = polygon.indexOf(cutEdge[0]);\n        var j = polygon.indexOf(cutEdge[1]);\n\n        if(i !== -1 && j !== -1){\n            return [polygonCopy(polygon, i,j),\n                    polygonCopy(polygon, j,i)];\n        } else {\n            return false;\n        }\n    }\n}\n\n/**\n * Checks that the line segments of this polygon do not intersect each other.\n * @method isSimple\n * @param  {Array} path An array of vertices e.g. [[0,0],[0,1],...]\n * @return {Boolean}\n * @todo Should it check all segments with all others?\n */\nfunction polygonIsSimple(polygon){\n    var path = polygon, i;\n    // Check\n    for(i=0; i<path.length-1; i++){\n        for(var j=0; j<i-1; j++){\n            if(lineSegmentsIntersect(path[i], path[i+1], path[j], path[j+1] )){\n                return false;\n            }\n        }\n    }\n\n    // Check the segment between the last and the first point to all others\n    for(i=1; i<path.length-2; i++){\n        if(lineSegmentsIntersect(path[0], path[path.length-1], path[i], path[i+1] )){\n            return false;\n        }\n    }\n\n    return true;\n}\n\nfunction getIntersectionPoint(p1, p2, q1, q2, delta){\n\tdelta = delta || 0;\n\tvar a1 = p2[1] - p1[1];\n\tvar b1 = p1[0] - p2[0];\n\tvar c1 = (a1 * p1[0]) + (b1 * p1[1]);\n\tvar a2 = q2[1] - q1[1];\n\tvar b2 = q1[0] - q2[0];\n\tvar c2 = (a2 * q1[0]) + (b2 * q1[1]);\n\tvar det = (a1 * b2) - (a2 * b1);\n\n\tif(!scalar_eq(det,0,delta)){\n\t\treturn [((b2 * c1) - (b1 * c2)) / det, ((a1 * c2) - (a2 * c1)) / det];\n\t} else {\n\t\treturn [0,0];\n    }\n}\n\n/**\n * Quickly decompose the Polygon into convex sub-polygons.\n * @method quickDecomp\n * @param  {Array} result\n * @param  {Array} [reflexVertices]\n * @param  {Array} [steinerPoints]\n * @param  {Number} [delta]\n * @param  {Number} [maxlevel]\n * @param  {Number} [level]\n * @return {Array}\n */\nfunction polygonQuickDecomp(polygon, result,reflexVertices,steinerPoints,delta,maxlevel,level){\n    maxlevel = maxlevel || 100;\n    level = level || 0;\n    delta = delta || 25;\n    result = typeof(result)!==\"undefined\" ? result : [];\n    reflexVertices = reflexVertices || [];\n    steinerPoints = steinerPoints || [];\n\n    var upperInt=[0,0], lowerInt=[0,0], p=[0,0]; // Points\n    var upperDist=0, lowerDist=0, d=0, closestDist=0; // scalars\n    var upperIndex=0, lowerIndex=0, closestIndex=0; // Integers\n    var lowerPoly=[], upperPoly=[]; // polygons\n    var poly = polygon,\n        v = polygon;\n\n    if(v.length < 3){\n\t\treturn result;\n    }\n\n    level++;\n    if(level > maxlevel){\n        console.warn(\"quickDecomp: max level (\"+maxlevel+\") reached.\");\n        return result;\n    }\n\n    for (var i = 0; i < polygon.length; ++i) {\n        if (polygonIsReflex(poly, i)) {\n            reflexVertices.push(poly[i]);\n            upperDist = lowerDist = Number.MAX_VALUE;\n\n\n            for (var j = 0; j < polygon.length; ++j) {\n                if (isLeft(polygonAt(poly, i - 1), polygonAt(poly, i), polygonAt(poly, j)) && isRightOn(polygonAt(poly, i - 1), polygonAt(poly, i), polygonAt(poly, j - 1))) { // if line intersects with an edge\n                    p = getIntersectionPoint(polygonAt(poly, i - 1), polygonAt(poly, i), polygonAt(poly, j), polygonAt(poly, j - 1)); // find the point of intersection\n                    if (isRight(polygonAt(poly, i + 1), polygonAt(poly, i), p)) { // make sure it's inside the poly\n                        d = sqdist(poly[i], p);\n                        if (d < lowerDist) { // keep only the closest intersection\n                            lowerDist = d;\n                            lowerInt = p;\n                            lowerIndex = j;\n                        }\n                    }\n                }\n                if (isLeft(polygonAt(poly, i + 1), polygonAt(poly, i), polygonAt(poly, j + 1)) && isRightOn(polygonAt(poly, i + 1), polygonAt(poly, i), polygonAt(poly, j))) {\n                    p = getIntersectionPoint(polygonAt(poly, i + 1), polygonAt(poly, i), polygonAt(poly, j), polygonAt(poly, j + 1));\n                    if (isLeft(polygonAt(poly, i - 1), polygonAt(poly, i), p)) {\n                        d = sqdist(poly[i], p);\n                        if (d < upperDist) {\n                            upperDist = d;\n                            upperInt = p;\n                            upperIndex = j;\n                        }\n                    }\n                }\n            }\n\n            // if there are no vertices to connect to, choose a point in the middle\n            if (lowerIndex === (upperIndex + 1) % polygon.length) {\n                //console.log(\"Case 1: Vertex(\"+i+\"), lowerIndex(\"+lowerIndex+\"), upperIndex(\"+upperIndex+\"), poly.size(\"+polygon.length+\")\");\n                p[0] = (lowerInt[0] + upperInt[0]) / 2;\n                p[1] = (lowerInt[1] + upperInt[1]) / 2;\n                steinerPoints.push(p);\n\n                if (i < upperIndex) {\n                    //lowerPoly.insert(lowerPoly.end(), poly.begin() + i, poly.begin() + upperIndex + 1);\n                    polygonAppend(lowerPoly, poly, i, upperIndex+1);\n                    lowerPoly.push(p);\n                    upperPoly.push(p);\n                    if (lowerIndex !== 0){\n                        //upperPoly.insert(upperPoly.end(), poly.begin() + lowerIndex, poly.end());\n                        polygonAppend(upperPoly, poly,lowerIndex,poly.length);\n                    }\n                    //upperPoly.insert(upperPoly.end(), poly.begin(), poly.begin() + i + 1);\n                    polygonAppend(upperPoly, poly,0,i+1);\n                } else {\n                    if (i !== 0){\n                        //lowerPoly.insert(lowerPoly.end(), poly.begin() + i, poly.end());\n                        polygonAppend(lowerPoly, poly,i,poly.length);\n                    }\n                    //lowerPoly.insert(lowerPoly.end(), poly.begin(), poly.begin() + upperIndex + 1);\n                    polygonAppend(lowerPoly, poly,0,upperIndex+1);\n                    lowerPoly.push(p);\n                    upperPoly.push(p);\n                    //upperPoly.insert(upperPoly.end(), poly.begin() + lowerIndex, poly.begin() + i + 1);\n                    polygonAppend(upperPoly, poly,lowerIndex,i+1);\n                }\n            } else {\n                // connect to the closest point within the triangle\n                //console.log(\"Case 2: Vertex(\"+i+\"), closestIndex(\"+closestIndex+\"), poly.size(\"+polygon.length+\")\\n\");\n\n                if (lowerIndex > upperIndex) {\n                    upperIndex += polygon.length;\n                }\n                closestDist = Number.MAX_VALUE;\n\n                if(upperIndex < lowerIndex){\n                    return result;\n                }\n\n                for (var j = lowerIndex; j <= upperIndex; ++j) {\n                    if (isLeftOn(polygonAt(poly, i - 1), polygonAt(poly, i), polygonAt(poly, j)) && isRightOn(polygonAt(poly, i + 1), polygonAt(poly, i), polygonAt(poly, j))) {\n                        d = sqdist(polygonAt(poly, i), polygonAt(poly, j));\n                        if (d < closestDist) {\n                            closestDist = d;\n                            closestIndex = j % polygon.length;\n                        }\n                    }\n                }\n\n                if (i < closestIndex) {\n                    polygonAppend(lowerPoly, poly,i,closestIndex+1);\n                    if (closestIndex !== 0){\n                        polygonAppend(upperPoly, poly,closestIndex,v.length);\n                    }\n                    polygonAppend(upperPoly, poly,0,i+1);\n                } else {\n                    if (i !== 0){\n                        polygonAppend(lowerPoly, poly,i,v.length);\n                    }\n                    polygonAppend(lowerPoly, poly,0,closestIndex+1);\n                    polygonAppend(upperPoly, poly,closestIndex,i+1);\n                }\n            }\n\n            // solve smallest poly first\n            if (lowerPoly.length < upperPoly.length) {\n                polygonQuickDecomp(lowerPoly,result,reflexVertices,steinerPoints,delta,maxlevel,level);\n                polygonQuickDecomp(upperPoly,result,reflexVertices,steinerPoints,delta,maxlevel,level);\n            } else {\n                polygonQuickDecomp(upperPoly,result,reflexVertices,steinerPoints,delta,maxlevel,level);\n                polygonQuickDecomp(lowerPoly,result,reflexVertices,steinerPoints,delta,maxlevel,level);\n            }\n\n            return result;\n        }\n    }\n    result.push(polygon);\n\n    return result;\n}\n\n/**\n * Remove collinear points in the polygon.\n * @method removeCollinearPoints\n * @param  {Number} [precision] The threshold angle to use when determining whether two edges are collinear. Use zero for finest precision.\n * @return {Number}           The number of points removed\n */\nfunction polygonRemoveCollinearPoints(polygon, precision){\n    var num = 0;\n    for(var i=polygon.length-1; polygon.length>3 && i>=0; --i){\n        if(collinear(polygonAt(polygon, i-1),polygonAt(polygon, i),polygonAt(polygon, i+1),precision)){\n            // Remove the middle point\n            polygon.splice(i%polygon.length,1);\n            num++;\n        }\n    }\n    return num;\n}\n\n/**\n * Check if two scalars are equal\n * @static\n * @method eq\n * @param  {Number} a\n * @param  {Number} b\n * @param  {Number} [precision]\n * @return {Boolean}\n */\nfunction scalar_eq(a,b,precision){\n    precision = precision || 0;\n    return Math.abs(a-b) < precision;\n}\n\n\n/***/ }),\n/* 30 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = register;\n/* unused harmony export unregister */\n// In production, we register a service worker to serve assets from local cache.\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\nvar isLocalhost=Boolean(window.location.hostname==='localhost'||// [::1] is the IPv6 localhost address.\nwindow.location.hostname==='[::1]'||// 127.0.0.1/8 is considered localhost for IPv4.\nwindow.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));function register(){if(\"production\"==='production'&&'serviceWorker'in navigator){// The URL constructor is available in all browsers that support SW.\nvar publicUrl=new URL(\"/reactscorch\",window.location);if(publicUrl.origin!==window.location.origin){// Our service worker won't work if PUBLIC_URL is on a different origin\n// from what our page is served on. This might happen if a CDN is used to\n// serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\nreturn;}window.addEventListener('load',function(){var swUrl=\"/reactscorch\"+'/service-worker.js';if(isLocalhost){// This is running on localhost. Lets check if a service worker still exists or not.\ncheckValidServiceWorker(swUrl);// Add some additional logging to localhost, pointing developers to the\n// service worker/PWA documentation.\nnavigator.serviceWorker.ready.then(function(){console.log('This web app is being served cache-first by a service '+'worker. To learn more, visit https://goo.gl/SC7cgQ');});}else{// Is not local host. Just register service worker\nregisterValidSW(swUrl);}});}}function registerValidSW(swUrl){navigator.serviceWorker.register(swUrl).then(function(registration){registration.onupdatefound=function(){var installingWorker=registration.installing;installingWorker.onstatechange=function(){if(installingWorker.state==='installed'){if(navigator.serviceWorker.controller){// At this point, the old content will have been purged and\n// the fresh content will have been added to the cache.\n// It's the perfect time to display a \"New content is\n// available; please refresh.\" message in your web app.\nconsole.log('New content is available; please refresh.');}else{// At this point, everything has been precached.\n// It's the perfect time to display a\n// \"Content is cached for offline use.\" message.\nconsole.log('Content is cached for offline use.');}}};};}).catch(function(error){console.error('Error during service worker registration:',error);});}function checkValidServiceWorker(swUrl){// Check if the service worker can be found. If it can't reload the page.\nfetch(swUrl).then(function(response){// Ensure service worker exists, and that we really are getting a JS file.\nif(response.status===404||response.headers.get('content-type').indexOf('javascript')===-1){// No service worker found. Probably a different app. Reload the page.\nnavigator.serviceWorker.ready.then(function(registration){registration.unregister().then(function(){window.location.reload();});});}else{// Service worker found. Proceed as normal.\nregisterValidSW(swUrl);}}).catch(function(){console.log('No internet connection found. App is running in offline mode.');});}function unregister(){if('serviceWorker'in navigator){navigator.serviceWorker.ready.then(function(registration){registration.unregister();});}}\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// static/js/main.3d72f697.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/reactscorch/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap ef00486a98d05a0691af","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react/index.js\n// module id = 0\n// module chunks = 0","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\n} catch(e) {\n\t// This works if the window reference is available\n\tif(typeof window === \"object\")\n\t\tg = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 1\n// module chunks = 0","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/object-assign/index.js\n// module id = 2\n// module chunks = 0","'use strict';\n\nvar asap = require('asap/raw');\n\nfunction noop() {}\n\n// States:\n//\n// 0 - pending\n// 1 - fulfilled with _value\n// 2 - rejected with _value\n// 3 - adopted the state of another promise, _value\n//\n// once the state is no longer pending (0) it is immutable\n\n// All `_` prefixed properties will be reduced to `_{random number}`\n// at build time to obfuscate them and discourage their use.\n// We don't use symbols or Object.defineProperty to fully hide them\n// because the performance isn't good enough.\n\n\n// to avoid using try/catch inside critical functions, we\n// extract them to here.\nvar LAST_ERROR = null;\nvar IS_ERROR = {};\nfunction getThen(obj) {\n  try {\n    return obj.then;\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nfunction tryCallOne(fn, a) {\n  try {\n    return fn(a);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\nfunction tryCallTwo(fn, a, b) {\n  try {\n    fn(a, b);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nmodule.exports = Promise;\n\nfunction Promise(fn) {\n  if (typeof this !== 'object') {\n    throw new TypeError('Promises must be constructed via new');\n  }\n  if (typeof fn !== 'function') {\n    throw new TypeError('Promise constructor\\'s argument is not a function');\n  }\n  this._75 = 0;\n  this._83 = 0;\n  this._18 = null;\n  this._38 = null;\n  if (fn === noop) return;\n  doResolve(fn, this);\n}\nPromise._47 = null;\nPromise._71 = null;\nPromise._44 = noop;\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  if (this.constructor !== Promise) {\n    return safeThen(this, onFulfilled, onRejected);\n  }\n  var res = new Promise(noop);\n  handle(this, new Handler(onFulfilled, onRejected, res));\n  return res;\n};\n\nfunction safeThen(self, onFulfilled, onRejected) {\n  return new self.constructor(function (resolve, reject) {\n    var res = new Promise(noop);\n    res.then(resolve, reject);\n    handle(self, new Handler(onFulfilled, onRejected, res));\n  });\n}\nfunction handle(self, deferred) {\n  while (self._83 === 3) {\n    self = self._18;\n  }\n  if (Promise._47) {\n    Promise._47(self);\n  }\n  if (self._83 === 0) {\n    if (self._75 === 0) {\n      self._75 = 1;\n      self._38 = deferred;\n      return;\n    }\n    if (self._75 === 1) {\n      self._75 = 2;\n      self._38 = [self._38, deferred];\n      return;\n    }\n    self._38.push(deferred);\n    return;\n  }\n  handleResolved(self, deferred);\n}\n\nfunction handleResolved(self, deferred) {\n  asap(function() {\n    var cb = self._83 === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      if (self._83 === 1) {\n        resolve(deferred.promise, self._18);\n      } else {\n        reject(deferred.promise, self._18);\n      }\n      return;\n    }\n    var ret = tryCallOne(cb, self._18);\n    if (ret === IS_ERROR) {\n      reject(deferred.promise, LAST_ERROR);\n    } else {\n      resolve(deferred.promise, ret);\n    }\n  });\n}\nfunction resolve(self, newValue) {\n  // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n  if (newValue === self) {\n    return reject(\n      self,\n      new TypeError('A promise cannot be resolved with itself.')\n    );\n  }\n  if (\n    newValue &&\n    (typeof newValue === 'object' || typeof newValue === 'function')\n  ) {\n    var then = getThen(newValue);\n    if (then === IS_ERROR) {\n      return reject(self, LAST_ERROR);\n    }\n    if (\n      then === self.then &&\n      newValue instanceof Promise\n    ) {\n      self._83 = 3;\n      self._18 = newValue;\n      finale(self);\n      return;\n    } else if (typeof then === 'function') {\n      doResolve(then.bind(newValue), self);\n      return;\n    }\n  }\n  self._83 = 1;\n  self._18 = newValue;\n  finale(self);\n}\n\nfunction reject(self, newValue) {\n  self._83 = 2;\n  self._18 = newValue;\n  if (Promise._71) {\n    Promise._71(self, newValue);\n  }\n  finale(self);\n}\nfunction finale(self) {\n  if (self._75 === 1) {\n    handle(self, self._38);\n    self._38 = null;\n  }\n  if (self._75 === 2) {\n    for (var i = 0; i < self._38.length; i++) {\n      handle(self, self._38[i]);\n    }\n    self._38 = null;\n  }\n}\n\nfunction Handler(onFulfilled, onRejected, promise){\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, promise) {\n  var done = false;\n  var res = tryCallTwo(fn, function (value) {\n    if (done) return;\n    done = true;\n    resolve(promise, value);\n  }, function (reason) {\n    if (done) return;\n    done = true;\n    reject(promise, reason);\n  });\n  if (!done && res === IS_ERROR) {\n    done = true;\n    reject(promise, LAST_ERROR);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-scripts/node_modules/promise/lib/core.js\n// module id = 3\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar validateFormat = function validateFormat(format) {};\n\nif (process.env.NODE_ENV !== 'production') {\n  validateFormat = function validateFormat(format) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  };\n}\n\nfunction invariant(condition, format, a, b, c, d, e, f) {\n  validateFormat(format);\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n}\n\nmodule.exports = invariant;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/fbjs/lib/invariant.js\n// module id = 4\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar emptyObject = {};\n\nif (process.env.NODE_ENV !== 'production') {\n  Object.freeze(emptyObject);\n}\n\nmodule.exports = emptyObject;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/fbjs/lib/emptyObject.js\n// module id = 5\n// module chunks = 0","\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nfunction makeEmptyFunction(arg) {\n  return function () {\n    return arg;\n  };\n}\n\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\nvar emptyFunction = function emptyFunction() {};\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\nemptyFunction.thatReturnsThis = function () {\n  return this;\n};\nemptyFunction.thatReturnsArgument = function (arg) {\n  return arg;\n};\n\nmodule.exports = emptyFunction;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/fbjs/lib/emptyFunction.js\n// module id = 6\n// module chunks = 0","// @remove-on-eject-begin\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// @remove-on-eject-end\n'use strict';\n\nif (typeof Promise === 'undefined') {\n  // Rejection tracking prevents a common issue where React gets into an\n  // inconsistent state due to an error, but it gets swallowed by a Promise,\n  // and the user has no idea what causes React's erratic future behavior.\n  require('promise/lib/rejection-tracking').enable();\n  window.Promise = require('promise/lib/es6-extensions.js');\n}\n\n// fetch() polyfill for making API calls.\nrequire('whatwg-fetch');\n\n// Object.assign() is commonly used with React.\n// It will use the native implementation if it's present and isn't buggy.\nObject.assign = require('object-assign');\n\n// In tests, polyfill requestAnimationFrame since jsdom doesn't provide it yet.\n// We don't polyfill it in the browser--this is user's responsibility.\nif (process.env.NODE_ENV === 'test') {\n  require('raf').polyfill(global);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-scripts/config/polyfills.js\n// module id = 9\n// module chunks = 0","'use strict';\n\nvar Promise = require('./core');\n\nvar DEFAULT_WHITELIST = [\n  ReferenceError,\n  TypeError,\n  RangeError\n];\n\nvar enabled = false;\nexports.disable = disable;\nfunction disable() {\n  enabled = false;\n  Promise._47 = null;\n  Promise._71 = null;\n}\n\nexports.enable = enable;\nfunction enable(options) {\n  options = options || {};\n  if (enabled) disable();\n  enabled = true;\n  var id = 0;\n  var displayId = 0;\n  var rejections = {};\n  Promise._47 = function (promise) {\n    if (\n      promise._83 === 2 && // IS REJECTED\n      rejections[promise._56]\n    ) {\n      if (rejections[promise._56].logged) {\n        onHandled(promise._56);\n      } else {\n        clearTimeout(rejections[promise._56].timeout);\n      }\n      delete rejections[promise._56];\n    }\n  };\n  Promise._71 = function (promise, err) {\n    if (promise._75 === 0) { // not yet handled\n      promise._56 = id++;\n      rejections[promise._56] = {\n        displayId: null,\n        error: err,\n        timeout: setTimeout(\n          onUnhandled.bind(null, promise._56),\n          // For reference errors and type errors, this almost always\n          // means the programmer made a mistake, so log them after just\n          // 100ms\n          // otherwise, wait 2 seconds to see if they get handled\n          matchWhitelist(err, DEFAULT_WHITELIST)\n            ? 100\n            : 2000\n        ),\n        logged: false\n      };\n    }\n  };\n  function onUnhandled(id) {\n    if (\n      options.allRejections ||\n      matchWhitelist(\n        rejections[id].error,\n        options.whitelist || DEFAULT_WHITELIST\n      )\n    ) {\n      rejections[id].displayId = displayId++;\n      if (options.onUnhandled) {\n        rejections[id].logged = true;\n        options.onUnhandled(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      } else {\n        rejections[id].logged = true;\n        logError(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      }\n    }\n  }\n  function onHandled(id) {\n    if (rejections[id].logged) {\n      if (options.onHandled) {\n        options.onHandled(rejections[id].displayId, rejections[id].error);\n      } else if (!rejections[id].onUnhandled) {\n        console.warn(\n          'Promise Rejection Handled (id: ' + rejections[id].displayId + '):'\n        );\n        console.warn(\n          '  This means you can ignore any previous messages of the form \"Possible Unhandled Promise Rejection\" with id ' +\n          rejections[id].displayId + '.'\n        );\n      }\n    }\n  }\n}\n\nfunction logError(id, error) {\n  console.warn('Possible Unhandled Promise Rejection (id: ' + id + '):');\n  var errStr = (error && (error.stack || error)) + '';\n  errStr.split('\\n').forEach(function (line) {\n    console.warn('  ' + line);\n  });\n}\n\nfunction matchWhitelist(error, list) {\n  return list.some(function (cls) {\n    return error instanceof cls;\n  });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-scripts/node_modules/promise/lib/rejection-tracking.js\n// module id = 10\n// module chunks = 0","\"use strict\";\n\n// Use the fastest means possible to execute a task in its own turn, with\n// priority over other events including IO, animation, reflow, and redraw\n// events in browsers.\n//\n// An exception thrown by a task will permanently interrupt the processing of\n// subsequent tasks. The higher level `asap` function ensures that if an\n// exception is thrown by a task, that the task queue will continue flushing as\n// soon as possible, but if you use `rawAsap` directly, you are responsible to\n// either ensure that no exceptions are thrown from your task, or to manually\n// call `rawAsap.requestFlush` if an exception is thrown.\nmodule.exports = rawAsap;\nfunction rawAsap(task) {\n    if (!queue.length) {\n        requestFlush();\n        flushing = true;\n    }\n    // Equivalent to push, but avoids a function call.\n    queue[queue.length] = task;\n}\n\nvar queue = [];\n// Once a flush has been requested, no further calls to `requestFlush` are\n// necessary until the next `flush` completes.\nvar flushing = false;\n// `requestFlush` is an implementation-specific method that attempts to kick\n// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n// the event queue before yielding to the browser's own event loop.\nvar requestFlush;\n// The position of the next task to execute in the task queue. This is\n// preserved between calls to `flush` so that it can be resumed if\n// a task throws an exception.\nvar index = 0;\n// If a task schedules additional tasks recursively, the task queue can grow\n// unbounded. To prevent memory exhaustion, the task queue will periodically\n// truncate already-completed tasks.\nvar capacity = 1024;\n\n// The flush function processes all tasks that have been scheduled with\n// `rawAsap` unless and until one of those tasks throws an exception.\n// If a task throws an exception, `flush` ensures that its state will remain\n// consistent and will resume where it left off when called again.\n// However, `flush` does not make any arrangements to be called again if an\n// exception is thrown.\nfunction flush() {\n    while (index < queue.length) {\n        var currentIndex = index;\n        // Advance the index before calling the task. This ensures that we will\n        // begin flushing on the next task the task throws an error.\n        index = index + 1;\n        queue[currentIndex].call();\n        // Prevent leaking memory for long chains of recursive calls to `asap`.\n        // If we call `asap` within tasks scheduled by `asap`, the queue will\n        // grow, but to avoid an O(n) walk for every task we execute, we don't\n        // shift tasks off the queue after they have been executed.\n        // Instead, we periodically shift 1024 tasks off the queue.\n        if (index > capacity) {\n            // Manually shift all values starting at the index back to the\n            // beginning of the queue.\n            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n                queue[scan] = queue[scan + index];\n            }\n            queue.length -= index;\n            index = 0;\n        }\n    }\n    queue.length = 0;\n    index = 0;\n    flushing = false;\n}\n\n// `requestFlush` is implemented using a strategy based on data collected from\n// every available SauceLabs Selenium web driver worker at time of writing.\n// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\n// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n// have WebKitMutationObserver but not un-prefixed MutationObserver.\n// Must use `global` or `self` instead of `window` to work in both frames and web\n// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\n/* globals self */\nvar scope = typeof global !== \"undefined\" ? global : self;\nvar BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver;\n\n// MutationObservers are desirable because they have high priority and work\n// reliably everywhere they are implemented.\n// They are implemented in all modern browsers.\n//\n// - Android 4-4.3\n// - Chrome 26-34\n// - Firefox 14-29\n// - Internet Explorer 11\n// - iPad Safari 6-7.1\n// - iPhone Safari 7-7.1\n// - Safari 6-7\nif (typeof BrowserMutationObserver === \"function\") {\n    requestFlush = makeRequestCallFromMutationObserver(flush);\n\n// MessageChannels are desirable because they give direct access to the HTML\n// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n// 11-12, and in web workers in many engines.\n// Although message channels yield to any queued rendering and IO tasks, they\n// would be better than imposing the 4ms delay of timers.\n// However, they do not work reliably in Internet Explorer or Safari.\n\n// Internet Explorer 10 is the only browser that has setImmediate but does\n// not have MutationObservers.\n// Although setImmediate yields to the browser's renderer, it would be\n// preferrable to falling back to setTimeout since it does not have\n// the minimum 4ms penalty.\n// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n// Desktop to a lesser extent) that renders both setImmediate and\n// MessageChannel useless for the purposes of ASAP.\n// https://github.com/kriskowal/q/issues/396\n\n// Timers are implemented universally.\n// We fall back to timers in workers in most engines, and in foreground\n// contexts in the following browsers.\n// However, note that even this simple case requires nuances to operate in a\n// broad spectrum of browsers.\n//\n// - Firefox 3-13\n// - Internet Explorer 6-9\n// - iPad Safari 4.3\n// - Lynx 2.8.7\n} else {\n    requestFlush = makeRequestCallFromTimer(flush);\n}\n\n// `requestFlush` requests that the high priority event queue be flushed as\n// soon as possible.\n// This is useful to prevent an error thrown in a task from stalling the event\n// queue if the exception handled by Node.js’s\n// `process.on(\"uncaughtException\")` or by a domain.\nrawAsap.requestFlush = requestFlush;\n\n// To request a high priority event, we induce a mutation observer by toggling\n// the text of a text node between \"1\" and \"-1\".\nfunction makeRequestCallFromMutationObserver(callback) {\n    var toggle = 1;\n    var observer = new BrowserMutationObserver(callback);\n    var node = document.createTextNode(\"\");\n    observer.observe(node, {characterData: true});\n    return function requestCall() {\n        toggle = -toggle;\n        node.data = toggle;\n    };\n}\n\n// The message channel technique was discovered by Malte Ubl and was the\n// original foundation for this library.\n// http://www.nonblocking.io/2011/06/windownexttick.html\n\n// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n// page's first load. Thankfully, this version of Safari supports\n// MutationObservers, so we don't need to fall back in that case.\n\n// function makeRequestCallFromMessageChannel(callback) {\n//     var channel = new MessageChannel();\n//     channel.port1.onmessage = callback;\n//     return function requestCall() {\n//         channel.port2.postMessage(0);\n//     };\n// }\n\n// For reasons explained above, we are also unable to use `setImmediate`\n// under any circumstances.\n// Even if we were, there is another bug in Internet Explorer 10.\n// It is not sufficient to assign `setImmediate` to `requestFlush` because\n// `setImmediate` must be called *by name* and therefore must be wrapped in a\n// closure.\n// Never forget.\n\n// function makeRequestCallFromSetImmediate(callback) {\n//     return function requestCall() {\n//         setImmediate(callback);\n//     };\n// }\n\n// Safari 6.0 has a problem where timers will get lost while the user is\n// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n// mutation observers, so that implementation is used instead.\n// However, if we ever elect to use timers in Safari, the prevalent work-around\n// is to add a scroll event listener that calls for a flush.\n\n// `setTimeout` does not call the passed callback if the delay is less than\n// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n// even then.\n\nfunction makeRequestCallFromTimer(callback) {\n    return function requestCall() {\n        // We dispatch a timeout with a specified delay of 0 for engines that\n        // can reliably accommodate that request. This will usually be snapped\n        // to a 4 milisecond delay, but once we're flushing, there's no delay\n        // between events.\n        var timeoutHandle = setTimeout(handleTimer, 0);\n        // However, since this timer gets frequently dropped in Firefox\n        // workers, we enlist an interval handle that will try to fire\n        // an event 20 times per second until it succeeds.\n        var intervalHandle = setInterval(handleTimer, 50);\n\n        function handleTimer() {\n            // Whichever timer succeeds will cancel both timers and\n            // execute the callback.\n            clearTimeout(timeoutHandle);\n            clearInterval(intervalHandle);\n            callback();\n        }\n    };\n}\n\n// This is for `asap.js` only.\n// Its name will be periodically randomized to break any code that depends on\n// its existence.\nrawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;\n\n// ASAP was originally a nextTick shim included in Q. This was factored out\n// into this ASAP package. It was later adapted to RSVP which made further\n// amendments. These decisions, particularly to marginalize MessageChannel and\n// to capture the MutationObserver implementation in a closure, were integrated\n// back into ASAP proper.\n// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/asap/browser-raw.js\n// module id = 11\n// module chunks = 0","'use strict';\n\n//This file contains the ES6 extensions to the core Promises/A+ API\n\nvar Promise = require('./core.js');\n\nmodule.exports = Promise;\n\n/* Static Functions */\n\nvar TRUE = valuePromise(true);\nvar FALSE = valuePromise(false);\nvar NULL = valuePromise(null);\nvar UNDEFINED = valuePromise(undefined);\nvar ZERO = valuePromise(0);\nvar EMPTYSTRING = valuePromise('');\n\nfunction valuePromise(value) {\n  var p = new Promise(Promise._44);\n  p._83 = 1;\n  p._18 = value;\n  return p;\n}\nPromise.resolve = function (value) {\n  if (value instanceof Promise) return value;\n\n  if (value === null) return NULL;\n  if (value === undefined) return UNDEFINED;\n  if (value === true) return TRUE;\n  if (value === false) return FALSE;\n  if (value === 0) return ZERO;\n  if (value === '') return EMPTYSTRING;\n\n  if (typeof value === 'object' || typeof value === 'function') {\n    try {\n      var then = value.then;\n      if (typeof then === 'function') {\n        return new Promise(then.bind(value));\n      }\n    } catch (ex) {\n      return new Promise(function (resolve, reject) {\n        reject(ex);\n      });\n    }\n  }\n  return valuePromise(value);\n};\n\nPromise.all = function (arr) {\n  var args = Array.prototype.slice.call(arr);\n\n  return new Promise(function (resolve, reject) {\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n    function res(i, val) {\n      if (val && (typeof val === 'object' || typeof val === 'function')) {\n        if (val instanceof Promise && val.then === Promise.prototype.then) {\n          while (val._83 === 3) {\n            val = val._18;\n          }\n          if (val._83 === 1) return res(i, val._18);\n          if (val._83 === 2) reject(val._18);\n          val.then(function (val) {\n            res(i, val);\n          }, reject);\n          return;\n        } else {\n          var then = val.then;\n          if (typeof then === 'function') {\n            var p = new Promise(then.bind(val));\n            p.then(function (val) {\n              res(i, val);\n            }, reject);\n            return;\n          }\n        }\n      }\n      args[i] = val;\n      if (--remaining === 0) {\n        resolve(args);\n      }\n    }\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.reject = function (value) {\n  return new Promise(function (resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function (values) {\n  return new Promise(function (resolve, reject) {\n    values.forEach(function(value){\n      Promise.resolve(value).then(resolve, reject);\n    });\n  });\n};\n\n/* Prototype Methods */\n\nPromise.prototype['catch'] = function (onRejected) {\n  return this.then(null, onRejected);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-scripts/node_modules/promise/lib/es6-extensions.js\n// module id = 12\n// module chunks = 0","(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1])\n      }, this)\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    rawHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = 'status' in options ? options.status : 200\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-scripts/node_modules/whatwg-fetch/fetch.js\n// module id = 13\n// module chunks = 0","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","/** @license React v16.4.1\n * react.production.min.js\n *\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var k=require(\"object-assign\"),n=require(\"fbjs/lib/invariant\"),p=require(\"fbjs/lib/emptyObject\"),q=require(\"fbjs/lib/emptyFunction\"),r=\"function\"===typeof Symbol&&Symbol.for,t=r?Symbol.for(\"react.element\"):60103,u=r?Symbol.for(\"react.portal\"):60106,v=r?Symbol.for(\"react.fragment\"):60107,w=r?Symbol.for(\"react.strict_mode\"):60108,x=r?Symbol.for(\"react.profiler\"):60114,y=r?Symbol.for(\"react.provider\"):60109,z=r?Symbol.for(\"react.context\"):60110,A=r?Symbol.for(\"react.async_mode\"):60111,B=\nr?Symbol.for(\"react.forward_ref\"):60112;r&&Symbol.for(\"react.timeout\");var C=\"function\"===typeof Symbol&&Symbol.iterator;function D(a){for(var b=arguments.length-1,e=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=0;c<b;c++)e+=\"&args[]=\"+encodeURIComponent(arguments[c+1]);n(!1,\"Minified React error #\"+a+\"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \",e)}\nvar E={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}};function F(a,b,e){this.props=a;this.context=b;this.refs=p;this.updater=e||E}F.prototype.isReactComponent={};F.prototype.setState=function(a,b){\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a?D(\"85\"):void 0;this.updater.enqueueSetState(this,a,b,\"setState\")};F.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function G(){}\nG.prototype=F.prototype;function H(a,b,e){this.props=a;this.context=b;this.refs=p;this.updater=e||E}var I=H.prototype=new G;I.constructor=H;k(I,F.prototype);I.isPureReactComponent=!0;var J={current:null},K=Object.prototype.hasOwnProperty,L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,e){var c=void 0,d={},g=null,h=null;if(null!=b)for(c in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(g=\"\"+b.key),b)K.call(b,c)&&!L.hasOwnProperty(c)&&(d[c]=b[c]);var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){for(var l=Array(f),m=0;m<f;m++)l[m]=arguments[m+2];d.children=l}if(a&&a.defaultProps)for(c in f=a.defaultProps,f)void 0===d[c]&&(d[c]=f[c]);return{$$typeof:t,type:a,key:g,ref:h,props:d,_owner:J.current}}\nfunction N(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===t}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+(\"\"+a).replace(/[=:]/g,function(a){return b[a]})}var O=/\\/+/g,P=[];function Q(a,b,e,c){if(P.length){var d=P.pop();d.result=a;d.keyPrefix=b;d.func=e;d.context=c;d.count=0;return d}return{result:a,keyPrefix:b,func:e,context:c,count:0}}function R(a){a.result=null;a.keyPrefix=null;a.func=null;a.context=null;a.count=0;10>P.length&&P.push(a)}\nfunction S(a,b,e,c){var d=typeof a;if(\"undefined\"===d||\"boolean\"===d)a=null;var g=!1;if(null===a)g=!0;else switch(d){case \"string\":case \"number\":g=!0;break;case \"object\":switch(a.$$typeof){case t:case u:g=!0}}if(g)return e(c,a,\"\"===b?\".\"+T(a,0):b),1;g=0;b=\"\"===b?\".\":b+\":\";if(Array.isArray(a))for(var h=0;h<a.length;h++){d=a[h];var f=b+T(d,h);g+=S(d,f,e,c)}else if(null===a||\"undefined\"===typeof a?f=null:(f=C&&a[C]||a[\"@@iterator\"],f=\"function\"===typeof f?f:null),\"function\"===typeof f)for(a=f.call(a),\nh=0;!(d=a.next()).done;)d=d.value,f=b+T(d,h++),g+=S(d,f,e,c);else\"object\"===d&&(e=\"\"+a,D(\"31\",\"[object Object]\"===e?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":e,\"\"));return g}function T(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(a.key):b.toString(36)}function U(a,b){a.func.call(a.context,b,a.count++)}\nfunction V(a,b,e){var c=a.result,d=a.keyPrefix;a=a.func.call(a.context,b,a.count++);Array.isArray(a)?W(a,c,e,q.thatReturnsArgument):null!=a&&(N(a)&&(b=d+(!a.key||b&&b.key===a.key?\"\":(\"\"+a.key).replace(O,\"$&/\")+\"/\")+e,a={$$typeof:t,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}),c.push(a))}function W(a,b,e,c,d){var g=\"\";null!=e&&(g=(\"\"+e).replace(O,\"$&/\")+\"/\");b=Q(b,g,c,d);null==a||S(a,\"\",V,b);R(b)}\nvar X={Children:{map:function(a,b,e){if(null==a)return a;var c=[];W(a,c,null,b,e);return c},forEach:function(a,b,e){if(null==a)return a;b=Q(null,null,b,e);null==a||S(a,\"\",U,b);R(b)},count:function(a){return null==a?0:S(a,\"\",q.thatReturnsNull,null)},toArray:function(a){var b=[];W(a,b,null,q.thatReturnsArgument);return b},only:function(a){N(a)?void 0:D(\"143\");return a}},createRef:function(){return{current:null}},Component:F,PureComponent:H,createContext:function(a,b){void 0===b&&(b=null);a={$$typeof:z,\n_calculateChangedBits:b,_defaultValue:a,_currentValue:a,_currentValue2:a,_changedBits:0,_changedBits2:0,Provider:null,Consumer:null};a.Provider={$$typeof:y,_context:a};return a.Consumer=a},forwardRef:function(a){return{$$typeof:B,render:a}},Fragment:v,StrictMode:w,unstable_AsyncMode:A,unstable_Profiler:x,createElement:M,cloneElement:function(a,b,e){null===a||void 0===a?D(\"267\",a):void 0;var c=void 0,d=k({},a.props),g=a.key,h=a.ref,f=a._owner;if(null!=b){void 0!==b.ref&&(h=b.ref,f=J.current);void 0!==\nb.key&&(g=\"\"+b.key);var l=void 0;a.type&&a.type.defaultProps&&(l=a.type.defaultProps);for(c in b)K.call(b,c)&&!L.hasOwnProperty(c)&&(d[c]=void 0===b[c]&&void 0!==l?l[c]:b[c])}c=arguments.length-2;if(1===c)d.children=e;else if(1<c){l=Array(c);for(var m=0;m<c;m++)l[m]=arguments[m+2];d.children=l}return{$$typeof:t,type:a.type,key:g,ref:h,props:d,_owner:f}},createFactory:function(a){var b=M.bind(null,a);b.type=a;return b},isValidElement:N,version:\"16.4.1\",__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentOwner:J,\nassign:k}},Y={default:X},Z=Y&&X||Y;module.exports=Z.default?Z.default:Z;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react/cjs/react.production.min.js\n// module id = 15\n// module chunks = 0","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-dom/index.js\n// module id = 16\n// module chunks = 0","/** @license React v16.4.1\n * react-dom.production.min.js\n *\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var aa=require(\"fbjs/lib/invariant\"),ba=require(\"react\"),m=require(\"fbjs/lib/ExecutionEnvironment\"),p=require(\"object-assign\"),v=require(\"fbjs/lib/emptyFunction\"),da=require(\"fbjs/lib/getActiveElement\"),ea=require(\"fbjs/lib/shallowEqual\"),fa=require(\"fbjs/lib/containsNode\"),ha=require(\"fbjs/lib/emptyObject\");\nfunction A(a){for(var b=arguments.length-1,c=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,d=0;d<b;d++)c+=\"&args[]=\"+encodeURIComponent(arguments[d+1]);aa(!1,\"Minified React error #\"+a+\"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \",c)}ba?void 0:A(\"227\");\nfunction ia(a,b,c,d,e,f,g,h,k){this._hasCaughtError=!1;this._caughtError=null;var n=Array.prototype.slice.call(arguments,3);try{b.apply(c,n)}catch(r){this._caughtError=r,this._hasCaughtError=!0}}\nvar B={_caughtError:null,_hasCaughtError:!1,_rethrowError:null,_hasRethrowError:!1,invokeGuardedCallback:function(a,b,c,d,e,f,g,h,k){ia.apply(B,arguments)},invokeGuardedCallbackAndCatchFirstError:function(a,b,c,d,e,f,g,h,k){B.invokeGuardedCallback.apply(this,arguments);if(B.hasCaughtError()){var n=B.clearCaughtError();B._hasRethrowError||(B._hasRethrowError=!0,B._rethrowError=n)}},rethrowCaughtError:function(){return ka.apply(B,arguments)},hasCaughtError:function(){return B._hasCaughtError},clearCaughtError:function(){if(B._hasCaughtError){var a=\nB._caughtError;B._caughtError=null;B._hasCaughtError=!1;return a}A(\"198\")}};function ka(){if(B._hasRethrowError){var a=B._rethrowError;B._rethrowError=null;B._hasRethrowError=!1;throw a;}}var la=null,ma={};\nfunction na(){if(la)for(var a in ma){var b=ma[a],c=la.indexOf(a);-1<c?void 0:A(\"96\",a);if(!oa[c]){b.extractEvents?void 0:A(\"97\",a);oa[c]=b;c=b.eventTypes;for(var d in c){var e=void 0;var f=c[d],g=b,h=d;pa.hasOwnProperty(h)?A(\"99\",h):void 0;pa[h]=f;var k=f.phasedRegistrationNames;if(k){for(e in k)k.hasOwnProperty(e)&&qa(k[e],g,h);e=!0}else f.registrationName?(qa(f.registrationName,g,h),e=!0):e=!1;e?void 0:A(\"98\",d,a)}}}}\nfunction qa(a,b,c){ra[a]?A(\"100\",a):void 0;ra[a]=b;sa[a]=b.eventTypes[c].dependencies}var oa=[],pa={},ra={},sa={};function ta(a){la?A(\"101\"):void 0;la=Array.prototype.slice.call(a);na()}function ua(a){var b=!1,c;for(c in a)if(a.hasOwnProperty(c)){var d=a[c];ma.hasOwnProperty(c)&&ma[c]===d||(ma[c]?A(\"102\",c):void 0,ma[c]=d,b=!0)}b&&na()}\nvar va={plugins:oa,eventNameDispatchConfigs:pa,registrationNameModules:ra,registrationNameDependencies:sa,possibleRegistrationNames:null,injectEventPluginOrder:ta,injectEventPluginsByName:ua},wa=null,xa=null,ya=null;function za(a,b,c,d){b=a.type||\"unknown-event\";a.currentTarget=ya(d);B.invokeGuardedCallbackAndCatchFirstError(b,c,void 0,a);a.currentTarget=null}\nfunction Aa(a,b){null==b?A(\"30\"):void 0;if(null==a)return b;if(Array.isArray(a)){if(Array.isArray(b))return a.push.apply(a,b),a;a.push(b);return a}return Array.isArray(b)?[a].concat(b):[a,b]}function Ba(a,b,c){Array.isArray(a)?a.forEach(b,c):a&&b.call(c,a)}var Ca=null;\nfunction Da(a,b){if(a){var c=a._dispatchListeners,d=a._dispatchInstances;if(Array.isArray(c))for(var e=0;e<c.length&&!a.isPropagationStopped();e++)za(a,b,c[e],d[e]);else c&&za(a,b,c,d);a._dispatchListeners=null;a._dispatchInstances=null;a.isPersistent()||a.constructor.release(a)}}function Ea(a){return Da(a,!0)}function Fa(a){return Da(a,!1)}var Ga={injectEventPluginOrder:ta,injectEventPluginsByName:ua};\nfunction Ha(a,b){var c=a.stateNode;if(!c)return null;var d=wa(c);if(!d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;c&&\"function\"!==typeof c?A(\"231\",b,typeof c):void 0;\nreturn c}function Ia(a,b){null!==a&&(Ca=Aa(Ca,a));a=Ca;Ca=null;a&&(b?Ba(a,Ea):Ba(a,Fa),Ca?A(\"95\"):void 0,B.rethrowCaughtError())}function Ja(a,b,c,d){for(var e=null,f=0;f<oa.length;f++){var g=oa[f];g&&(g=g.extractEvents(a,b,c,d))&&(e=Aa(e,g))}Ia(e,!1)}var Ka={injection:Ga,getListener:Ha,runEventsInBatch:Ia,runExtractedEventsInBatch:Ja},La=Math.random().toString(36).slice(2),C=\"__reactInternalInstance$\"+La,Ma=\"__reactEventHandlers$\"+La;\nfunction Na(a){if(a[C])return a[C];for(;!a[C];)if(a.parentNode)a=a.parentNode;else return null;a=a[C];return 5===a.tag||6===a.tag?a:null}function Oa(a){if(5===a.tag||6===a.tag)return a.stateNode;A(\"33\")}function Pa(a){return a[Ma]||null}var Qa={precacheFiberNode:function(a,b){b[C]=a},getClosestInstanceFromNode:Na,getInstanceFromNode:function(a){a=a[C];return!a||5!==a.tag&&6!==a.tag?null:a},getNodeFromInstance:Oa,getFiberCurrentPropsFromNode:Pa,updateFiberProps:function(a,b){a[Ma]=b}};\nfunction F(a){do a=a.return;while(a&&5!==a.tag);return a?a:null}function Ra(a,b,c){for(var d=[];a;)d.push(a),a=F(a);for(a=d.length;0<a--;)b(d[a],\"captured\",c);for(a=0;a<d.length;a++)b(d[a],\"bubbled\",c)}function Sa(a,b,c){if(b=Ha(a,c.dispatchConfig.phasedRegistrationNames[b]))c._dispatchListeners=Aa(c._dispatchListeners,b),c._dispatchInstances=Aa(c._dispatchInstances,a)}function Ta(a){a&&a.dispatchConfig.phasedRegistrationNames&&Ra(a._targetInst,Sa,a)}\nfunction Ua(a){if(a&&a.dispatchConfig.phasedRegistrationNames){var b=a._targetInst;b=b?F(b):null;Ra(b,Sa,a)}}function Va(a,b,c){a&&c&&c.dispatchConfig.registrationName&&(b=Ha(a,c.dispatchConfig.registrationName))&&(c._dispatchListeners=Aa(c._dispatchListeners,b),c._dispatchInstances=Aa(c._dispatchInstances,a))}function Xa(a){a&&a.dispatchConfig.registrationName&&Va(a._targetInst,null,a)}function Ya(a){Ba(a,Ta)}\nfunction Za(a,b,c,d){if(c&&d)a:{var e=c;for(var f=d,g=0,h=e;h;h=F(h))g++;h=0;for(var k=f;k;k=F(k))h++;for(;0<g-h;)e=F(e),g--;for(;0<h-g;)f=F(f),h--;for(;g--;){if(e===f||e===f.alternate)break a;e=F(e);f=F(f)}e=null}else e=null;f=e;for(e=[];c&&c!==f;){g=c.alternate;if(null!==g&&g===f)break;e.push(c);c=F(c)}for(c=[];d&&d!==f;){g=d.alternate;if(null!==g&&g===f)break;c.push(d);d=F(d)}for(d=0;d<e.length;d++)Va(e[d],\"bubbled\",a);for(a=c.length;0<a--;)Va(c[a],\"captured\",b)}\nvar $a={accumulateTwoPhaseDispatches:Ya,accumulateTwoPhaseDispatchesSkipTarget:function(a){Ba(a,Ua)},accumulateEnterLeaveDispatches:Za,accumulateDirectDispatches:function(a){Ba(a,Xa)}};function ab(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;c[\"ms\"+a]=\"MS\"+b;c[\"O\"+a]=\"o\"+b.toLowerCase();return c}\nvar bb={animationend:ab(\"Animation\",\"AnimationEnd\"),animationiteration:ab(\"Animation\",\"AnimationIteration\"),animationstart:ab(\"Animation\",\"AnimationStart\"),transitionend:ab(\"Transition\",\"TransitionEnd\")},cb={},db={};m.canUseDOM&&(db=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete bb.animationend.animation,delete bb.animationiteration.animation,delete bb.animationstart.animation),\"TransitionEvent\"in window||delete bb.transitionend.transition);\nfunction eb(a){if(cb[a])return cb[a];if(!bb[a])return a;var b=bb[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in db)return cb[a]=b[c];return a}var fb=eb(\"animationend\"),gb=eb(\"animationiteration\"),hb=eb(\"animationstart\"),ib=eb(\"transitionend\"),jb=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),kb=null;\nfunction lb(){!kb&&m.canUseDOM&&(kb=\"textContent\"in document.documentElement?\"textContent\":\"innerText\");return kb}var G={_root:null,_startText:null,_fallbackText:null};function mb(){if(G._fallbackText)return G._fallbackText;var a,b=G._startText,c=b.length,d,e=nb(),f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);G._fallbackText=e.slice(a,1<d?1-d:void 0);return G._fallbackText}function nb(){return\"value\"in G._root?G._root.value:G._root[lb()]}\nvar ob=\"dispatchConfig _targetInst nativeEvent isDefaultPrevented isPropagationStopped _dispatchListeners _dispatchInstances\".split(\" \"),pb={type:null,target:null,currentTarget:v.thatReturnsNull,eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};\nfunction H(a,b,c,d){this.dispatchConfig=a;this._targetInst=b;this.nativeEvent=c;a=this.constructor.Interface;for(var e in a)a.hasOwnProperty(e)&&((b=a[e])?this[e]=b(c):\"target\"===e?this.target=d:this[e]=c[e]);this.isDefaultPrevented=(null!=c.defaultPrevented?c.defaultPrevented:!1===c.returnValue)?v.thatReturnsTrue:v.thatReturnsFalse;this.isPropagationStopped=v.thatReturnsFalse;return this}\np(H.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&(a.returnValue=!1),this.isDefaultPrevented=v.thatReturnsTrue)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=v.thatReturnsTrue)},persist:function(){this.isPersistent=v.thatReturnsTrue},isPersistent:v.thatReturnsFalse,\ndestructor:function(){var a=this.constructor.Interface,b;for(b in a)this[b]=null;for(a=0;a<ob.length;a++)this[ob[a]]=null}});H.Interface=pb;H.extend=function(a){function b(){}function c(){return d.apply(this,arguments)}var d=this;b.prototype=d.prototype;var e=new b;p(e,c.prototype);c.prototype=e;c.prototype.constructor=c;c.Interface=p({},d.Interface,a);c.extend=d.extend;qb(c);return c};qb(H);\nfunction rb(a,b,c,d){if(this.eventPool.length){var e=this.eventPool.pop();this.call(e,a,b,c,d);return e}return new this(a,b,c,d)}function sb(a){a instanceof this?void 0:A(\"223\");a.destructor();10>this.eventPool.length&&this.eventPool.push(a)}function qb(a){a.eventPool=[];a.getPooled=rb;a.release=sb}var tb=H.extend({data:null}),ub=H.extend({data:null}),vb=[9,13,27,32],wb=m.canUseDOM&&\"CompositionEvent\"in window,xb=null;m.canUseDOM&&\"documentMode\"in document&&(xb=document.documentMode);\nvar yb=m.canUseDOM&&\"TextEvent\"in window&&!xb,zb=m.canUseDOM&&(!wb||xb&&8<xb&&11>=xb),Ab=String.fromCharCode(32),Bb={beforeInput:{phasedRegistrationNames:{bubbled:\"onBeforeInput\",captured:\"onBeforeInputCapture\"},dependencies:[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]},compositionEnd:{phasedRegistrationNames:{bubbled:\"onCompositionEnd\",captured:\"onCompositionEndCapture\"},dependencies:\"blur compositionend keydown keypress keyup mousedown\".split(\" \")},compositionStart:{phasedRegistrationNames:{bubbled:\"onCompositionStart\",\ncaptured:\"onCompositionStartCapture\"},dependencies:\"blur compositionstart keydown keypress keyup mousedown\".split(\" \")},compositionUpdate:{phasedRegistrationNames:{bubbled:\"onCompositionUpdate\",captured:\"onCompositionUpdateCapture\"},dependencies:\"blur compositionupdate keydown keypress keyup mousedown\".split(\" \")}},Cb=!1;\nfunction Db(a,b){switch(a){case \"keyup\":return-1!==vb.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"blur\":return!0;default:return!1}}function Eb(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var Fb=!1;function Gb(a,b){switch(a){case \"compositionend\":return Eb(b);case \"keypress\":if(32!==b.which)return null;Cb=!0;return Ab;case \"textInput\":return a=b.data,a===Ab&&Cb?null:a;default:return null}}\nfunction Hb(a,b){if(Fb)return\"compositionend\"===a||!wb&&Db(a,b)?(a=mb(),G._root=null,G._startText=null,G._fallbackText=null,Fb=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return zb?null:b.data;default:return null}}\nvar Ib={eventTypes:Bb,extractEvents:function(a,b,c,d){var e=void 0;var f=void 0;if(wb)b:{switch(a){case \"compositionstart\":e=Bb.compositionStart;break b;case \"compositionend\":e=Bb.compositionEnd;break b;case \"compositionupdate\":e=Bb.compositionUpdate;break b}e=void 0}else Fb?Db(a,c)&&(e=Bb.compositionEnd):\"keydown\"===a&&229===c.keyCode&&(e=Bb.compositionStart);e?(zb&&(Fb||e!==Bb.compositionStart?e===Bb.compositionEnd&&Fb&&(f=mb()):(G._root=d,G._startText=nb(),Fb=!0)),e=tb.getPooled(e,b,c,d),f?e.data=\nf:(f=Eb(c),null!==f&&(e.data=f)),Ya(e),f=e):f=null;(a=yb?Gb(a,c):Hb(a,c))?(b=ub.getPooled(Bb.beforeInput,b,c,d),b.data=a,Ya(b)):b=null;return null===f?b:null===b?f:[f,b]}},Jb=null,Kb={injectFiberControlledHostComponent:function(a){Jb=a}},Lb=null,Mb=null;function Nb(a){if(a=xa(a)){Jb&&\"function\"===typeof Jb.restoreControlledState?void 0:A(\"194\");var b=wa(a.stateNode);Jb.restoreControlledState(a.stateNode,a.type,b)}}function Ob(a){Lb?Mb?Mb.push(a):Mb=[a]:Lb=a}\nfunction Pb(){return null!==Lb||null!==Mb}function Qb(){if(Lb){var a=Lb,b=Mb;Mb=Lb=null;Nb(a);if(b)for(a=0;a<b.length;a++)Nb(b[a])}}var Rb={injection:Kb,enqueueStateRestore:Ob,needsStateRestore:Pb,restoreStateIfNeeded:Qb};function Sb(a,b){return a(b)}function Tb(a,b,c){return a(b,c)}function Ub(){}var Vb=!1;function Wb(a,b){if(Vb)return a(b);Vb=!0;try{return Sb(a,b)}finally{Vb=!1,Pb()&&(Ub(),Qb())}}\nvar Xb={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Yb(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!Xb[a.type]:\"textarea\"===b?!0:!1}function Zb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}\nfunction $b(a,b){if(!m.canUseDOM||b&&!(\"addEventListener\"in document))return!1;a=\"on\"+a;b=a in document;b||(b=document.createElement(\"div\"),b.setAttribute(a,\"return;\"),b=\"function\"===typeof b[a]);return b}function ac(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction bc(a){var b=ac(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function cc(a){a._valueTracker||(a._valueTracker=bc(a))}function dc(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=ac(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}\nvar ec=ba.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,fc=\"function\"===typeof Symbol&&Symbol.for,gc=fc?Symbol.for(\"react.element\"):60103,hc=fc?Symbol.for(\"react.portal\"):60106,ic=fc?Symbol.for(\"react.fragment\"):60107,jc=fc?Symbol.for(\"react.strict_mode\"):60108,kc=fc?Symbol.for(\"react.profiler\"):60114,lc=fc?Symbol.for(\"react.provider\"):60109,mc=fc?Symbol.for(\"react.context\"):60110,pc=fc?Symbol.for(\"react.async_mode\"):60111,qc=fc?Symbol.for(\"react.forward_ref\"):60112,rc=fc?Symbol.for(\"react.timeout\"):\n60113,sc=\"function\"===typeof Symbol&&Symbol.iterator;function tc(a){if(null===a||\"undefined\"===typeof a)return null;a=sc&&a[sc]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nfunction uc(a){var b=a.type;if(\"function\"===typeof b)return b.displayName||b.name;if(\"string\"===typeof b)return b;switch(b){case pc:return\"AsyncMode\";case mc:return\"Context.Consumer\";case ic:return\"ReactFragment\";case hc:return\"ReactPortal\";case kc:return\"Profiler(\"+a.pendingProps.id+\")\";case lc:return\"Context.Provider\";case jc:return\"StrictMode\";case rc:return\"Timeout\"}if(\"object\"===typeof b&&null!==b)switch(b.$$typeof){case qc:return a=b.render.displayName||b.render.name||\"\",\"\"!==a?\"ForwardRef(\"+\na+\")\":\"ForwardRef\"}return null}function vc(a){var b=\"\";do{a:switch(a.tag){case 0:case 1:case 2:case 5:var c=a._debugOwner,d=a._debugSource;var e=uc(a);var f=null;c&&(f=uc(c));c=d;e=\"\\n    in \"+(e||\"Unknown\")+(c?\" (at \"+c.fileName.replace(/^.*[\\\\\\/]/,\"\")+\":\"+c.lineNumber+\")\":f?\" (created by \"+f+\")\":\"\");break a;default:e=\"\"}b+=e;a=a.return}while(a);return b}\nvar wc=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,xc={},zc={};function Ac(a){if(zc.hasOwnProperty(a))return!0;if(xc.hasOwnProperty(a))return!1;if(wc.test(a))return zc[a]=!0;xc[a]=!0;return!1}\nfunction Bc(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}function Cc(a,b,c,d){if(null===b||\"undefined\"===typeof b||Bc(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}\nfunction I(a,b,c,d,e){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b}var J={};\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){J[a]=new I(a,0,!1,a,null)});\n[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];J[b]=new I(b,1,!1,a[1],null)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){J[a]=new I(a,2,!1,a.toLowerCase(),null)});[\"autoReverse\",\"externalResourcesRequired\",\"preserveAlpha\"].forEach(function(a){J[a]=new I(a,2,!1,a,null)});\n\"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){J[a]=new I(a,3,!1,a.toLowerCase(),null)});[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){J[a]=new I(a,3,!0,a.toLowerCase(),null)});[\"capture\",\"download\"].forEach(function(a){J[a]=new I(a,4,!1,a.toLowerCase(),null)});\n[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){J[a]=new I(a,6,!1,a.toLowerCase(),null)});[\"rowSpan\",\"start\"].forEach(function(a){J[a]=new I(a,5,!1,a.toLowerCase(),null)});var Dc=/[\\-:]([a-z])/g;function Ec(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(Dc,\nEc);J[b]=new I(b,1,!1,a,null)});\"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(Dc,Ec);J[b]=new I(b,1,!1,a,\"http://www.w3.org/1999/xlink\")});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(Dc,Ec);J[b]=new I(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\")});J.tabIndex=new I(\"tabIndex\",1,!1,\"tabindex\",null);\nfunction Fc(a,b,c,d){var e=J.hasOwnProperty(b)?J[b]:null;var f=null!==e?0===e.type:d?!1:!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1]?!1:!0;f||(Cc(b,c,e,d)&&(c=null),d||null===e?Ac(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c))))}\nfunction Gc(a,b){var c=b.checked;return p({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Hc(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Ic(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function Jc(a,b){b=b.checked;null!=b&&Fc(a,\"checked\",b,!1)}\nfunction Kc(a,b){Jc(a,b);var c=Ic(b.value);if(null!=c)if(\"number\"===b.type){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);b.hasOwnProperty(\"value\")?Lc(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&Lc(a,b.type,Ic(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction Mc(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){b=\"\"+a._wrapperState.initialValue;var d=a.value;c||b===d||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!a.defaultChecked;a.defaultChecked=!a.defaultChecked;\"\"!==c&&(a.name=c)}function Lc(a,b,c){if(\"number\"!==b||a.ownerDocument.activeElement!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}\nfunction Ic(a){switch(typeof a){case \"boolean\":case \"number\":case \"object\":case \"string\":case \"undefined\":return a;default:return\"\"}}var Nc={change:{phasedRegistrationNames:{bubbled:\"onChange\",captured:\"onChangeCapture\"},dependencies:\"blur change click focus input keydown keyup selectionchange\".split(\" \")}};function Oc(a,b,c){a=H.getPooled(Nc.change,a,b,c);a.type=\"change\";Ob(c);Ya(a);return a}var Pc=null,Qc=null;function Rc(a){Ia(a,!1)}function Sc(a){var b=Oa(a);if(dc(b))return a}\nfunction Tc(a,b){if(\"change\"===a)return b}var Uc=!1;m.canUseDOM&&(Uc=$b(\"input\")&&(!document.documentMode||9<document.documentMode));function Vc(){Pc&&(Pc.detachEvent(\"onpropertychange\",Wc),Qc=Pc=null)}function Wc(a){\"value\"===a.propertyName&&Sc(Qc)&&(a=Oc(Qc,a,Zb(a)),Wb(Rc,a))}function Xc(a,b,c){\"focus\"===a?(Vc(),Pc=b,Qc=c,Pc.attachEvent(\"onpropertychange\",Wc)):\"blur\"===a&&Vc()}function Yc(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return Sc(Qc)}\nfunction Zc(a,b){if(\"click\"===a)return Sc(b)}function $c(a,b){if(\"input\"===a||\"change\"===a)return Sc(b)}\nvar ad={eventTypes:Nc,_isInputEventSupported:Uc,extractEvents:function(a,b,c,d){var e=b?Oa(b):window,f=void 0,g=void 0,h=e.nodeName&&e.nodeName.toLowerCase();\"select\"===h||\"input\"===h&&\"file\"===e.type?f=Tc:Yb(e)?Uc?f=$c:(f=Yc,g=Xc):(h=e.nodeName)&&\"input\"===h.toLowerCase()&&(\"checkbox\"===e.type||\"radio\"===e.type)&&(f=Zc);if(f&&(f=f(a,b)))return Oc(f,c,d);g&&g(a,e,b);\"blur\"===a&&(a=e._wrapperState)&&a.controlled&&\"number\"===e.type&&Lc(e,\"number\",e.value)}},bd=H.extend({view:null,detail:null}),cd={Alt:\"altKey\",\nControl:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function dd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=cd[a])?!!b[a]:!1}function ed(){return dd}\nvar fd=bd.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:ed,button:null,buttons:null,relatedTarget:function(a){return a.relatedTarget||(a.fromElement===a.srcElement?a.toElement:a.fromElement)}}),gd=fd.extend({pointerId:null,width:null,height:null,pressure:null,tiltX:null,tiltY:null,pointerType:null,isPrimary:null}),hd={mouseEnter:{registrationName:\"onMouseEnter\",dependencies:[\"mouseout\",\"mouseover\"]},\nmouseLeave:{registrationName:\"onMouseLeave\",dependencies:[\"mouseout\",\"mouseover\"]},pointerEnter:{registrationName:\"onPointerEnter\",dependencies:[\"pointerout\",\"pointerover\"]},pointerLeave:{registrationName:\"onPointerLeave\",dependencies:[\"pointerout\",\"pointerover\"]}},id={eventTypes:hd,extractEvents:function(a,b,c,d){var e=\"mouseover\"===a||\"pointerover\"===a,f=\"mouseout\"===a||\"pointerout\"===a;if(e&&(c.relatedTarget||c.fromElement)||!f&&!e)return null;e=d.window===d?d:(e=d.ownerDocument)?e.defaultView||\ne.parentWindow:window;f?(f=b,b=(b=c.relatedTarget||c.toElement)?Na(b):null):f=null;if(f===b)return null;var g=void 0,h=void 0,k=void 0,n=void 0;if(\"mouseout\"===a||\"mouseover\"===a)g=fd,h=hd.mouseLeave,k=hd.mouseEnter,n=\"mouse\";else if(\"pointerout\"===a||\"pointerover\"===a)g=gd,h=hd.pointerLeave,k=hd.pointerEnter,n=\"pointer\";a=null==f?e:Oa(f);e=null==b?e:Oa(b);h=g.getPooled(h,f,c,d);h.type=n+\"leave\";h.target=a;h.relatedTarget=e;c=g.getPooled(k,b,c,d);c.type=n+\"enter\";c.target=e;c.relatedTarget=a;Za(h,\nc,f,b);return[h,c]}};function jd(a){var b=a;if(a.alternate)for(;b.return;)b=b.return;else{if(0!==(b.effectTag&2))return 1;for(;b.return;)if(b=b.return,0!==(b.effectTag&2))return 1}return 3===b.tag?2:3}function kd(a){2!==jd(a)?A(\"188\"):void 0}\nfunction ld(a){var b=a.alternate;if(!b)return b=jd(a),3===b?A(\"188\"):void 0,1===b?null:a;for(var c=a,d=b;;){var e=c.return,f=e?e.alternate:null;if(!e||!f)break;if(e.child===f.child){for(var g=e.child;g;){if(g===c)return kd(e),a;if(g===d)return kd(e),b;g=g.sibling}A(\"188\")}if(c.return!==d.return)c=e,d=f;else{g=!1;for(var h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===c){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}g?\nvoid 0:A(\"189\")}}c.alternate!==d?A(\"190\"):void 0}3!==c.tag?A(\"188\"):void 0;return c.stateNode.current===c?a:b}function md(a){a=ld(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}\nfunction nd(a){a=ld(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child&&4!==b.tag)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}var od=H.extend({animationName:null,elapsedTime:null,pseudoElement:null}),pd=H.extend({clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),qd=bd.extend({relatedTarget:null});\nfunction rd(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}\nvar sd={Esc:\"Escape\",Spacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},td={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",\n116:\"F5\",117:\"F6\",118:\"F7\",119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},ud=bd.extend({key:function(a){if(a.key){var b=sd[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=rd(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?td[a.keyCode]||\"Unidentified\":\"\"},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:ed,charCode:function(a){return\"keypress\"===\na.type?rd(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===a.type?rd(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),vd=fd.extend({dataTransfer:null}),wd=bd.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:ed}),xd=H.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),yd=fd.extend({deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in\na?-a.wheelDeltaX:0},deltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:null,deltaMode:null}),zd=[[\"abort\",\"abort\"],[fb,\"animationEnd\"],[gb,\"animationIteration\"],[hb,\"animationStart\"],[\"canplay\",\"canPlay\"],[\"canplaythrough\",\"canPlayThrough\"],[\"drag\",\"drag\"],[\"dragenter\",\"dragEnter\"],[\"dragexit\",\"dragExit\"],[\"dragleave\",\"dragLeave\"],[\"dragover\",\"dragOver\"],[\"durationchange\",\"durationChange\"],[\"emptied\",\"emptied\"],[\"encrypted\",\"encrypted\"],\n[\"ended\",\"ended\"],[\"error\",\"error\"],[\"gotpointercapture\",\"gotPointerCapture\"],[\"load\",\"load\"],[\"loadeddata\",\"loadedData\"],[\"loadedmetadata\",\"loadedMetadata\"],[\"loadstart\",\"loadStart\"],[\"lostpointercapture\",\"lostPointerCapture\"],[\"mousemove\",\"mouseMove\"],[\"mouseout\",\"mouseOut\"],[\"mouseover\",\"mouseOver\"],[\"playing\",\"playing\"],[\"pointermove\",\"pointerMove\"],[\"pointerout\",\"pointerOut\"],[\"pointerover\",\"pointerOver\"],[\"progress\",\"progress\"],[\"scroll\",\"scroll\"],[\"seeking\",\"seeking\"],[\"stalled\",\"stalled\"],\n[\"suspend\",\"suspend\"],[\"timeupdate\",\"timeUpdate\"],[\"toggle\",\"toggle\"],[\"touchmove\",\"touchMove\"],[ib,\"transitionEnd\"],[\"waiting\",\"waiting\"],[\"wheel\",\"wheel\"]],Ad={},Bd={};function Cd(a,b){var c=a[0];a=a[1];var d=\"on\"+(a[0].toUpperCase()+a.slice(1));b={phasedRegistrationNames:{bubbled:d,captured:d+\"Capture\"},dependencies:[c],isInteractive:b};Ad[a]=b;Bd[c]=b}\n[[\"blur\",\"blur\"],[\"cancel\",\"cancel\"],[\"click\",\"click\"],[\"close\",\"close\"],[\"contextmenu\",\"contextMenu\"],[\"copy\",\"copy\"],[\"cut\",\"cut\"],[\"dblclick\",\"doubleClick\"],[\"dragend\",\"dragEnd\"],[\"dragstart\",\"dragStart\"],[\"drop\",\"drop\"],[\"focus\",\"focus\"],[\"input\",\"input\"],[\"invalid\",\"invalid\"],[\"keydown\",\"keyDown\"],[\"keypress\",\"keyPress\"],[\"keyup\",\"keyUp\"],[\"mousedown\",\"mouseDown\"],[\"mouseup\",\"mouseUp\"],[\"paste\",\"paste\"],[\"pause\",\"pause\"],[\"play\",\"play\"],[\"pointercancel\",\"pointerCancel\"],[\"pointerdown\",\"pointerDown\"],\n[\"pointerup\",\"pointerUp\"],[\"ratechange\",\"rateChange\"],[\"reset\",\"reset\"],[\"seeked\",\"seeked\"],[\"submit\",\"submit\"],[\"touchcancel\",\"touchCancel\"],[\"touchend\",\"touchEnd\"],[\"touchstart\",\"touchStart\"],[\"volumechange\",\"volumeChange\"]].forEach(function(a){Cd(a,!0)});zd.forEach(function(a){Cd(a,!1)});\nvar Dd={eventTypes:Ad,isInteractiveTopLevelEventType:function(a){a=Bd[a];return void 0!==a&&!0===a.isInteractive},extractEvents:function(a,b,c,d){var e=Bd[a];if(!e)return null;switch(a){case \"keypress\":if(0===rd(c))return null;case \"keydown\":case \"keyup\":a=ud;break;case \"blur\":case \"focus\":a=qd;break;case \"click\":if(2===c.button)return null;case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":a=fd;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":a=\nvd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":a=wd;break;case fb:case gb:case hb:a=od;break;case ib:a=xd;break;case \"scroll\":a=bd;break;case \"wheel\":a=yd;break;case \"copy\":case \"cut\":case \"paste\":a=pd;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":a=gd;break;default:a=H}b=a.getPooled(e,b,c,d);Ya(b);return b}},Ed=Dd.isInteractiveTopLevelEventType,\nFd=[];function Gd(a){var b=a.targetInst;do{if(!b){a.ancestors.push(b);break}var c;for(c=b;c.return;)c=c.return;c=3!==c.tag?null:c.stateNode.containerInfo;if(!c)break;a.ancestors.push(b);b=Na(c)}while(b);for(c=0;c<a.ancestors.length;c++)b=a.ancestors[c],Ja(a.topLevelType,b,a.nativeEvent,Zb(a.nativeEvent))}var Hd=!0;function Id(a){Hd=!!a}function K(a,b){if(!b)return null;var c=(Ed(a)?Kd:Ld).bind(null,a);b.addEventListener(a,c,!1)}\nfunction Md(a,b){if(!b)return null;var c=(Ed(a)?Kd:Ld).bind(null,a);b.addEventListener(a,c,!0)}function Kd(a,b){Tb(Ld,a,b)}function Ld(a,b){if(Hd){var c=Zb(b);c=Na(c);null===c||\"number\"!==typeof c.tag||2===jd(c)||(c=null);if(Fd.length){var d=Fd.pop();d.topLevelType=a;d.nativeEvent=b;d.targetInst=c;a=d}else a={topLevelType:a,nativeEvent:b,targetInst:c,ancestors:[]};try{Wb(Gd,a)}finally{a.topLevelType=null,a.nativeEvent=null,a.targetInst=null,a.ancestors.length=0,10>Fd.length&&Fd.push(a)}}}\nvar Nd={get _enabled(){return Hd},setEnabled:Id,isEnabled:function(){return Hd},trapBubbledEvent:K,trapCapturedEvent:Md,dispatchEvent:Ld},Od={},Pd=0,Qd=\"_reactListenersID\"+(\"\"+Math.random()).slice(2);function Rd(a){Object.prototype.hasOwnProperty.call(a,Qd)||(a[Qd]=Pd++,Od[a[Qd]]={});return Od[a[Qd]]}function Sd(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Td(a,b){var c=Sd(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Sd(c)}}function Ud(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\nvar Vd=m.canUseDOM&&\"documentMode\"in document&&11>=document.documentMode,Wd={select:{phasedRegistrationNames:{bubbled:\"onSelect\",captured:\"onSelectCapture\"},dependencies:\"blur contextmenu focus keydown keyup mousedown mouseup selectionchange\".split(\" \")}},Xd=null,Yd=null,Zd=null,$d=!1;\nfunction ae(a,b){if($d||null==Xd||Xd!==da())return null;var c=Xd;\"selectionStart\"in c&&Ud(c)?c={start:c.selectionStart,end:c.selectionEnd}:window.getSelection?(c=window.getSelection(),c={anchorNode:c.anchorNode,anchorOffset:c.anchorOffset,focusNode:c.focusNode,focusOffset:c.focusOffset}):c=void 0;return Zd&&ea(Zd,c)?null:(Zd=c,a=H.getPooled(Wd.select,Yd,a,b),a.type=\"select\",a.target=Xd,Ya(a),a)}\nvar be={eventTypes:Wd,extractEvents:function(a,b,c,d){var e=d.window===d?d.document:9===d.nodeType?d:d.ownerDocument,f;if(!(f=!e)){a:{e=Rd(e);f=sa.onSelect;for(var g=0;g<f.length;g++){var h=f[g];if(!e.hasOwnProperty(h)||!e[h]){e=!1;break a}}e=!0}f=!e}if(f)return null;e=b?Oa(b):window;switch(a){case \"focus\":if(Yb(e)||\"true\"===e.contentEditable)Xd=e,Yd=b,Zd=null;break;case \"blur\":Zd=Yd=Xd=null;break;case \"mousedown\":$d=!0;break;case \"contextmenu\":case \"mouseup\":return $d=!1,ae(c,d);case \"selectionchange\":if(Vd)break;\ncase \"keydown\":case \"keyup\":return ae(c,d)}return null}};Ga.injectEventPluginOrder(\"ResponderEventPlugin SimpleEventPlugin TapEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin\".split(\" \"));wa=Qa.getFiberCurrentPropsFromNode;xa=Qa.getInstanceFromNode;ya=Qa.getNodeFromInstance;Ga.injectEventPluginsByName({SimpleEventPlugin:Dd,EnterLeaveEventPlugin:id,ChangeEventPlugin:ad,SelectEventPlugin:be,BeforeInputEventPlugin:Ib});\nvar ce=\"function\"===typeof requestAnimationFrame?requestAnimationFrame:void 0,de=Date,ee=setTimeout,fe=clearTimeout,ge=void 0;if(\"object\"===typeof performance&&\"function\"===typeof performance.now){var he=performance;ge=function(){return he.now()}}else ge=function(){return de.now()};var ie=void 0,je=void 0;\nif(m.canUseDOM){var ke=\"function\"===typeof ce?ce:function(){A(\"276\")},L=null,le=null,me=-1,ne=!1,oe=!1,pe=0,qe=33,re=33,se={didTimeout:!1,timeRemaining:function(){var a=pe-ge();return 0<a?a:0}},ue=function(a,b){var c=a.scheduledCallback,d=!1;try{c(b),d=!0}finally{je(a),d||(ne=!0,window.postMessage(te,\"*\"))}},te=\"__reactIdleCallback$\"+Math.random().toString(36).slice(2);window.addEventListener(\"message\",function(a){if(a.source===window&&a.data===te&&(ne=!1,null!==L)){if(null!==L){var b=ge();if(!(-1===\nme||me>b)){a=-1;for(var c=[],d=L;null!==d;){var e=d.timeoutTime;-1!==e&&e<=b?c.push(d):-1!==e&&(-1===a||e<a)&&(a=e);d=d.next}if(0<c.length)for(se.didTimeout=!0,b=0,d=c.length;b<d;b++)ue(c[b],se);me=a}}for(a=ge();0<pe-a&&null!==L;)a=L,se.didTimeout=!1,ue(a,se),a=ge();null===L||oe||(oe=!0,ke(ve))}},!1);var ve=function(a){oe=!1;var b=a-pe+re;b<re&&qe<re?(8>b&&(b=8),re=b<qe?qe:b):qe=b;pe=a+re;ne||(ne=!0,window.postMessage(te,\"*\"))};ie=function(a,b){var c=-1;null!=b&&\"number\"===typeof b.timeout&&(c=ge()+\nb.timeout);if(-1===me||-1!==c&&c<me)me=c;a={scheduledCallback:a,timeoutTime:c,prev:null,next:null};null===L?L=a:(b=a.prev=le,null!==b&&(b.next=a));le=a;oe||(oe=!0,ke(ve));return a};je=function(a){if(null!==a.prev||L===a){var b=a.next,c=a.prev;a.next=null;a.prev=null;null!==b?null!==c?(c.next=b,b.prev=c):(b.prev=null,L=b):null!==c?(c.next=null,le=c):le=L=null}}}else{var we=new Map;ie=function(a){var b={scheduledCallback:a,timeoutTime:0,next:null,prev:null},c=ee(function(){a({timeRemaining:function(){return Infinity},\ndidTimeout:!1})});we.set(a,c);return b};je=function(a){var b=we.get(a.scheduledCallback);we.delete(a);fe(b)}}function xe(a){var b=\"\";ba.Children.forEach(a,function(a){null==a||\"string\"!==typeof a&&\"number\"!==typeof a||(b+=a)});return b}function ye(a,b){a=p({children:void 0},b);if(b=xe(b.children))a.children=b;return a}\nfunction ze(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+c;b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction Ae(a,b){var c=b.value;a._wrapperState={initialValue:null!=c?c:b.defaultValue,wasMultiple:!!b.multiple}}function Be(a,b){null!=b.dangerouslySetInnerHTML?A(\"91\"):void 0;return p({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function Ce(a,b){var c=b.value;null==c&&(c=b.defaultValue,b=b.children,null!=b&&(null!=c?A(\"92\"):void 0,Array.isArray(b)&&(1>=b.length?void 0:A(\"93\"),b=b[0]),c=\"\"+b),null==c&&(c=\"\"));a._wrapperState={initialValue:\"\"+c}}\nfunction De(a,b){var c=b.value;null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&(a.defaultValue=c));null!=b.defaultValue&&(a.defaultValue=b.defaultValue)}function Ee(a){var b=a.textContent;b===a._wrapperState.initialValue&&(a.value=b)}var Fe={html:\"http://www.w3.org/1999/xhtml\",mathml:\"http://www.w3.org/1998/Math/MathML\",svg:\"http://www.w3.org/2000/svg\"};\nfunction Ge(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}function He(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?Ge(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar Ie=void 0,Je=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==Fe.svg||\"innerHTML\"in a)a.innerHTML=b;else{Ie=Ie||document.createElement(\"div\");Ie.innerHTML=\"<svg>\"+b+\"</svg>\";for(b=Ie.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction Ke(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar Le={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,\nstopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},Me=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(Le).forEach(function(a){Me.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);Le[b]=Le[a]})});\nfunction Ne(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\");var e=c;var f=b[c];e=null==f||\"boolean\"===typeof f||\"\"===f?\"\":d||\"number\"!==typeof f||0===f||Le.hasOwnProperty(e)&&Le[e]?(\"\"+f).trim():f+\"px\";\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var Oe=p({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction Pe(a,b,c){b&&(Oe[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML?A(\"137\",a,c()):void 0),null!=b.dangerouslySetInnerHTML&&(null!=b.children?A(\"60\"):void 0,\"object\"===typeof b.dangerouslySetInnerHTML&&\"__html\"in b.dangerouslySetInnerHTML?void 0:A(\"61\")),null!=b.style&&\"object\"!==typeof b.style?A(\"62\",c()):void 0)}\nfunction Qe(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}var Re=v.thatReturns(\"\");\nfunction Se(a,b){a=9===a.nodeType||11===a.nodeType?a:a.ownerDocument;var c=Rd(a);b=sa[b];for(var d=0;d<b.length;d++){var e=b[d];if(!c.hasOwnProperty(e)||!c[e]){switch(e){case \"scroll\":Md(\"scroll\",a);break;case \"focus\":case \"blur\":Md(\"focus\",a);Md(\"blur\",a);c.blur=!0;c.focus=!0;break;case \"cancel\":case \"close\":$b(e,!0)&&Md(e,a);break;case \"invalid\":case \"submit\":case \"reset\":break;default:-1===jb.indexOf(e)&&K(e,a)}c[e]=!0}}}\nfunction Te(a,b,c,d){c=9===c.nodeType?c:c.ownerDocument;d===Fe.html&&(d=Ge(a));d===Fe.html?\"script\"===a?(a=c.createElement(\"div\"),a.innerHTML=\"<script>\\x3c/script>\",a=a.removeChild(a.firstChild)):a=\"string\"===typeof b.is?c.createElement(a,{is:b.is}):c.createElement(a):a=c.createElementNS(d,a);return a}function Ue(a,b){return(9===b.nodeType?b:b.ownerDocument).createTextNode(a)}\nfunction Ve(a,b,c,d){var e=Qe(b,c);switch(b){case \"iframe\":case \"object\":K(\"load\",a);var f=c;break;case \"video\":case \"audio\":for(f=0;f<jb.length;f++)K(jb[f],a);f=c;break;case \"source\":K(\"error\",a);f=c;break;case \"img\":case \"image\":case \"link\":K(\"error\",a);K(\"load\",a);f=c;break;case \"form\":K(\"reset\",a);K(\"submit\",a);f=c;break;case \"details\":K(\"toggle\",a);f=c;break;case \"input\":Hc(a,c);f=Gc(a,c);K(\"invalid\",a);Se(d,\"onChange\");break;case \"option\":f=ye(a,c);break;case \"select\":Ae(a,c);f=p({},c,{value:void 0});\nK(\"invalid\",a);Se(d,\"onChange\");break;case \"textarea\":Ce(a,c);f=Be(a,c);K(\"invalid\",a);Se(d,\"onChange\");break;default:f=c}Pe(b,f,Re);var g=f,h;for(h in g)if(g.hasOwnProperty(h)){var k=g[h];\"style\"===h?Ne(a,k,Re):\"dangerouslySetInnerHTML\"===h?(k=k?k.__html:void 0,null!=k&&Je(a,k)):\"children\"===h?\"string\"===typeof k?(\"textarea\"!==b||\"\"!==k)&&Ke(a,k):\"number\"===typeof k&&Ke(a,\"\"+k):\"suppressContentEditableWarning\"!==h&&\"suppressHydrationWarning\"!==h&&\"autoFocus\"!==h&&(ra.hasOwnProperty(h)?null!=k&&Se(d,\nh):null!=k&&Fc(a,h,k,e))}switch(b){case \"input\":cc(a);Mc(a,c,!1);break;case \"textarea\":cc(a);Ee(a,c);break;case \"option\":null!=c.value&&a.setAttribute(\"value\",c.value);break;case \"select\":a.multiple=!!c.multiple;b=c.value;null!=b?ze(a,!!c.multiple,b,!1):null!=c.defaultValue&&ze(a,!!c.multiple,c.defaultValue,!0);break;default:\"function\"===typeof f.onClick&&(a.onclick=v)}}\nfunction We(a,b,c,d,e){var f=null;switch(b){case \"input\":c=Gc(a,c);d=Gc(a,d);f=[];break;case \"option\":c=ye(a,c);d=ye(a,d);f=[];break;case \"select\":c=p({},c,{value:void 0});d=p({},d,{value:void 0});f=[];break;case \"textarea\":c=Be(a,c);d=Be(a,d);f=[];break;default:\"function\"!==typeof c.onClick&&\"function\"===typeof d.onClick&&(a.onclick=v)}Pe(b,d,Re);b=a=void 0;var g=null;for(a in c)if(!d.hasOwnProperty(a)&&c.hasOwnProperty(a)&&null!=c[a])if(\"style\"===a){var h=c[a];for(b in h)h.hasOwnProperty(b)&&(g||\n(g={}),g[b]=\"\")}else\"dangerouslySetInnerHTML\"!==a&&\"children\"!==a&&\"suppressContentEditableWarning\"!==a&&\"suppressHydrationWarning\"!==a&&\"autoFocus\"!==a&&(ra.hasOwnProperty(a)?f||(f=[]):(f=f||[]).push(a,null));for(a in d){var k=d[a];h=null!=c?c[a]:void 0;if(d.hasOwnProperty(a)&&k!==h&&(null!=k||null!=h))if(\"style\"===a)if(h){for(b in h)!h.hasOwnProperty(b)||k&&k.hasOwnProperty(b)||(g||(g={}),g[b]=\"\");for(b in k)k.hasOwnProperty(b)&&h[b]!==k[b]&&(g||(g={}),g[b]=k[b])}else g||(f||(f=[]),f.push(a,g)),\ng=k;else\"dangerouslySetInnerHTML\"===a?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(f=f||[]).push(a,\"\"+k)):\"children\"===a?h===k||\"string\"!==typeof k&&\"number\"!==typeof k||(f=f||[]).push(a,\"\"+k):\"suppressContentEditableWarning\"!==a&&\"suppressHydrationWarning\"!==a&&(ra.hasOwnProperty(a)?(null!=k&&Se(e,a),f||h===k||(f=[])):(f=f||[]).push(a,k))}g&&(f=f||[]).push(\"style\",g);return f}\nfunction Xe(a,b,c,d,e){\"input\"===c&&\"radio\"===e.type&&null!=e.name&&Jc(a,e);Qe(c,d);d=Qe(c,e);for(var f=0;f<b.length;f+=2){var g=b[f],h=b[f+1];\"style\"===g?Ne(a,h,Re):\"dangerouslySetInnerHTML\"===g?Je(a,h):\"children\"===g?Ke(a,h):Fc(a,g,h,d)}switch(c){case \"input\":Kc(a,e);break;case \"textarea\":De(a,e);break;case \"select\":a._wrapperState.initialValue=void 0,b=a._wrapperState.wasMultiple,a._wrapperState.wasMultiple=!!e.multiple,c=e.value,null!=c?ze(a,!!e.multiple,c,!1):b!==!!e.multiple&&(null!=e.defaultValue?\nze(a,!!e.multiple,e.defaultValue,!0):ze(a,!!e.multiple,e.multiple?[]:\"\",!1))}}\nfunction Ye(a,b,c,d,e){switch(b){case \"iframe\":case \"object\":K(\"load\",a);break;case \"video\":case \"audio\":for(d=0;d<jb.length;d++)K(jb[d],a);break;case \"source\":K(\"error\",a);break;case \"img\":case \"image\":case \"link\":K(\"error\",a);K(\"load\",a);break;case \"form\":K(\"reset\",a);K(\"submit\",a);break;case \"details\":K(\"toggle\",a);break;case \"input\":Hc(a,c);K(\"invalid\",a);Se(e,\"onChange\");break;case \"select\":Ae(a,c);K(\"invalid\",a);Se(e,\"onChange\");break;case \"textarea\":Ce(a,c),K(\"invalid\",a),Se(e,\"onChange\")}Pe(b,\nc,Re);d=null;for(var f in c)if(c.hasOwnProperty(f)){var g=c[f];\"children\"===f?\"string\"===typeof g?a.textContent!==g&&(d=[\"children\",g]):\"number\"===typeof g&&a.textContent!==\"\"+g&&(d=[\"children\",\"\"+g]):ra.hasOwnProperty(f)&&null!=g&&Se(e,f)}switch(b){case \"input\":cc(a);Mc(a,c,!0);break;case \"textarea\":cc(a);Ee(a,c);break;case \"select\":case \"option\":break;default:\"function\"===typeof c.onClick&&(a.onclick=v)}return d}function Ze(a,b){return a.nodeValue!==b}\nvar $e={createElement:Te,createTextNode:Ue,setInitialProperties:Ve,diffProperties:We,updateProperties:Xe,diffHydratedProperties:Ye,diffHydratedText:Ze,warnForUnmatchedText:function(){},warnForDeletedHydratableElement:function(){},warnForDeletedHydratableText:function(){},warnForInsertedHydratedElement:function(){},warnForInsertedHydratedText:function(){},restoreControlledState:function(a,b,c){switch(b){case \"input\":Kc(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;\nc=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Pa(d);e?void 0:A(\"90\");dc(d);Kc(d,e)}}}break;case \"textarea\":De(a,c);break;case \"select\":b=c.value,null!=b&&ze(a,!!c.multiple,b,!1)}}},af=null,bf=null;function cf(a,b){switch(a){case \"button\":case \"input\":case \"select\":case \"textarea\":return!!b.autoFocus}return!1}\nfunction df(a,b){return\"textarea\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&\"string\"===typeof b.dangerouslySetInnerHTML.__html}var ef=ge,ff=ie,gf=je;function hf(a){for(a=a.nextSibling;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a}function jf(a){for(a=a.firstChild;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a}new Set;var kf=[],lf=-1;function mf(a){return{current:a}}\nfunction M(a){0>lf||(a.current=kf[lf],kf[lf]=null,lf--)}function N(a,b){lf++;kf[lf]=a.current;a.current=b}var nf=mf(ha),O=mf(!1),of=ha;function pf(a){return qf(a)?of:nf.current}\nfunction rf(a,b){var c=a.type.contextTypes;if(!c)return ha;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}function qf(a){return 2===a.tag&&null!=a.type.childContextTypes}function sf(a){qf(a)&&(M(O,a),M(nf,a))}function tf(a){M(O,a);M(nf,a)}\nfunction uf(a,b,c){nf.current!==ha?A(\"168\"):void 0;N(nf,b,a);N(O,c,a)}function vf(a,b){var c=a.stateNode,d=a.type.childContextTypes;if(\"function\"!==typeof c.getChildContext)return b;c=c.getChildContext();for(var e in c)e in d?void 0:A(\"108\",uc(a)||\"Unknown\",e);return p({},b,c)}function wf(a){if(!qf(a))return!1;var b=a.stateNode;b=b&&b.__reactInternalMemoizedMergedChildContext||ha;of=nf.current;N(nf,b,a);N(O,O.current,a);return!0}\nfunction xf(a,b){var c=a.stateNode;c?void 0:A(\"169\");if(b){var d=vf(a,of);c.__reactInternalMemoizedMergedChildContext=d;M(O,a);M(nf,a);N(nf,d,a)}else M(O,a);N(O,b,a)}\nfunction yf(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=null;this.index=0;this.ref=null;this.pendingProps=b;this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.effectTag=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.expirationTime=0;this.alternate=null}\nfunction zf(a,b,c){var d=a.alternate;null===d?(d=new yf(a.tag,b,a.key,a.mode),d.type=a.type,d.stateNode=a.stateNode,d.alternate=a,a.alternate=d):(d.pendingProps=b,d.effectTag=0,d.nextEffect=null,d.firstEffect=null,d.lastEffect=null);d.expirationTime=c;d.child=a.child;d.memoizedProps=a.memoizedProps;d.memoizedState=a.memoizedState;d.updateQueue=a.updateQueue;d.sibling=a.sibling;d.index=a.index;d.ref=a.ref;return d}\nfunction Af(a,b,c){var d=a.type,e=a.key;a=a.props;if(\"function\"===typeof d)var f=d.prototype&&d.prototype.isReactComponent?2:0;else if(\"string\"===typeof d)f=5;else switch(d){case ic:return Bf(a.children,b,c,e);case pc:f=11;b|=3;break;case jc:f=11;b|=2;break;case kc:return d=new yf(15,a,e,b|4),d.type=kc,d.expirationTime=c,d;case rc:f=16;b|=2;break;default:a:{switch(\"object\"===typeof d&&null!==d?d.$$typeof:null){case lc:f=13;break a;case mc:f=12;break a;case qc:f=14;break a;default:A(\"130\",null==d?\nd:typeof d,\"\")}f=void 0}}b=new yf(f,a,e,b);b.type=d;b.expirationTime=c;return b}function Bf(a,b,c,d){a=new yf(10,a,d,b);a.expirationTime=c;return a}function Cf(a,b,c){a=new yf(6,a,null,b);a.expirationTime=c;return a}function Df(a,b,c){b=new yf(4,null!==a.children?a.children:[],a.key,b);b.expirationTime=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}\nfunction Ef(a,b,c){b=new yf(3,null,null,b?3:0);a={current:b,containerInfo:a,pendingChildren:null,earliestPendingTime:0,latestPendingTime:0,earliestSuspendedTime:0,latestSuspendedTime:0,latestPingedTime:0,pendingCommitExpirationTime:0,finishedWork:null,context:null,pendingContext:null,hydrate:c,remainingExpirationTime:0,firstBatch:null,nextScheduledRoot:null};return b.stateNode=a}var Ff=null,Gf=null;function Hf(a){return function(b){try{return a(b)}catch(c){}}}\nfunction If(a){if(\"undefined\"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var b=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(b.isDisabled||!b.supportsFiber)return!0;try{var c=b.inject(a);Ff=Hf(function(a){return b.onCommitFiberRoot(c,a)});Gf=Hf(function(a){return b.onCommitFiberUnmount(c,a)})}catch(d){}return!0}function Jf(a){\"function\"===typeof Ff&&Ff(a)}function Kf(a){\"function\"===typeof Gf&&Gf(a)}var Lf=!1;\nfunction Mf(a){return{expirationTime:0,baseState:a,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function Nf(a){return{expirationTime:a.expirationTime,baseState:a.baseState,firstUpdate:a.firstUpdate,lastUpdate:a.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}\nfunction Of(a){return{expirationTime:a,tag:0,payload:null,callback:null,next:null,nextEffect:null}}function Pf(a,b,c){null===a.lastUpdate?a.firstUpdate=a.lastUpdate=b:(a.lastUpdate.next=b,a.lastUpdate=b);if(0===a.expirationTime||a.expirationTime>c)a.expirationTime=c}\nfunction Qf(a,b,c){var d=a.alternate;if(null===d){var e=a.updateQueue;var f=null;null===e&&(e=a.updateQueue=Mf(a.memoizedState))}else e=a.updateQueue,f=d.updateQueue,null===e?null===f?(e=a.updateQueue=Mf(a.memoizedState),f=d.updateQueue=Mf(d.memoizedState)):e=a.updateQueue=Nf(f):null===f&&(f=d.updateQueue=Nf(e));null===f||e===f?Pf(e,b,c):null===e.lastUpdate||null===f.lastUpdate?(Pf(e,b,c),Pf(f,b,c)):(Pf(e,b,c),f.lastUpdate=b)}\nfunction Rf(a,b,c){var d=a.updateQueue;d=null===d?a.updateQueue=Mf(a.memoizedState):Sf(a,d);null===d.lastCapturedUpdate?d.firstCapturedUpdate=d.lastCapturedUpdate=b:(d.lastCapturedUpdate.next=b,d.lastCapturedUpdate=b);if(0===d.expirationTime||d.expirationTime>c)d.expirationTime=c}function Sf(a,b){var c=a.alternate;null!==c&&b===c.updateQueue&&(b=a.updateQueue=Nf(b));return b}\nfunction Tf(a,b,c,d,e,f){switch(c.tag){case 1:return a=c.payload,\"function\"===typeof a?a.call(f,d,e):a;case 3:a.effectTag=a.effectTag&-1025|64;case 0:a=c.payload;e=\"function\"===typeof a?a.call(f,d,e):a;if(null===e||void 0===e)break;return p({},d,e);case 2:Lf=!0}return d}\nfunction Uf(a,b,c,d,e){Lf=!1;if(!(0===b.expirationTime||b.expirationTime>e)){b=Sf(a,b);for(var f=b.baseState,g=null,h=0,k=b.firstUpdate,n=f;null!==k;){var r=k.expirationTime;if(r>e){if(null===g&&(g=k,f=n),0===h||h>r)h=r}else n=Tf(a,b,k,n,c,d),null!==k.callback&&(a.effectTag|=32,k.nextEffect=null,null===b.lastEffect?b.firstEffect=b.lastEffect=k:(b.lastEffect.nextEffect=k,b.lastEffect=k));k=k.next}r=null;for(k=b.firstCapturedUpdate;null!==k;){var w=k.expirationTime;if(w>e){if(null===r&&(r=k,null===\ng&&(f=n)),0===h||h>w)h=w}else n=Tf(a,b,k,n,c,d),null!==k.callback&&(a.effectTag|=32,k.nextEffect=null,null===b.lastCapturedEffect?b.firstCapturedEffect=b.lastCapturedEffect=k:(b.lastCapturedEffect.nextEffect=k,b.lastCapturedEffect=k));k=k.next}null===g&&(b.lastUpdate=null);null===r?b.lastCapturedUpdate=null:a.effectTag|=32;null===g&&null===r&&(f=n);b.baseState=f;b.firstUpdate=g;b.firstCapturedUpdate=r;b.expirationTime=h;a.memoizedState=n}}\nfunction Vf(a,b){\"function\"!==typeof a?A(\"191\",a):void 0;a.call(b)}\nfunction Wf(a,b,c){null!==b.firstCapturedUpdate&&(null!==b.lastUpdate&&(b.lastUpdate.next=b.firstCapturedUpdate,b.lastUpdate=b.lastCapturedUpdate),b.firstCapturedUpdate=b.lastCapturedUpdate=null);a=b.firstEffect;for(b.firstEffect=b.lastEffect=null;null!==a;){var d=a.callback;null!==d&&(a.callback=null,Vf(d,c));a=a.nextEffect}a=b.firstCapturedEffect;for(b.firstCapturedEffect=b.lastCapturedEffect=null;null!==a;)b=a.callback,null!==b&&(a.callback=null,Vf(b,c)),a=a.nextEffect}\nfunction Xf(a,b){return{value:a,source:b,stack:vc(b)}}var Yf=mf(null),Zf=mf(null),$f=mf(0);function ag(a){var b=a.type._context;N($f,b._changedBits,a);N(Zf,b._currentValue,a);N(Yf,a,a);b._currentValue=a.pendingProps.value;b._changedBits=a.stateNode}function bg(a){var b=$f.current,c=Zf.current;M(Yf,a);M(Zf,a);M($f,a);a=a.type._context;a._currentValue=c;a._changedBits=b}var cg={},dg=mf(cg),eg=mf(cg),fg=mf(cg);function gg(a){a===cg?A(\"174\"):void 0;return a}\nfunction ig(a,b){N(fg,b,a);N(eg,a,a);N(dg,cg,a);var c=b.nodeType;switch(c){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:He(null,\"\");break;default:c=8===c?b.parentNode:b,b=c.namespaceURI||null,c=c.tagName,b=He(b,c)}M(dg,a);N(dg,b,a)}function jg(a){M(dg,a);M(eg,a);M(fg,a)}function kg(a){eg.current===a&&(M(dg,a),M(eg,a))}function lg(a,b,c){var d=a.memoizedState;b=b(c,d);d=null===b||void 0===b?d:p({},d,b);a.memoizedState=d;a=a.updateQueue;null!==a&&0===a.expirationTime&&(a.baseState=d)}\nvar pg={isMounted:function(a){return(a=a._reactInternalFiber)?2===jd(a):!1},enqueueSetState:function(a,b,c){a=a._reactInternalFiber;var d=mg();d=ng(d,a);var e=Of(d);e.payload=b;void 0!==c&&null!==c&&(e.callback=c);Qf(a,e,d);og(a,d)},enqueueReplaceState:function(a,b,c){a=a._reactInternalFiber;var d=mg();d=ng(d,a);var e=Of(d);e.tag=1;e.payload=b;void 0!==c&&null!==c&&(e.callback=c);Qf(a,e,d);og(a,d)},enqueueForceUpdate:function(a,b){a=a._reactInternalFiber;var c=mg();c=ng(c,a);var d=Of(c);d.tag=2;void 0!==\nb&&null!==b&&(d.callback=b);Qf(a,d,c);og(a,c)}};function qg(a,b,c,d,e,f){var g=a.stateNode;a=a.type;return\"function\"===typeof g.shouldComponentUpdate?g.shouldComponentUpdate(c,e,f):a.prototype&&a.prototype.isPureReactComponent?!ea(b,c)||!ea(d,e):!0}\nfunction rg(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&pg.enqueueReplaceState(b,b.state,null)}\nfunction sg(a,b){var c=a.type,d=a.stateNode,e=a.pendingProps,f=pf(a);d.props=e;d.state=a.memoizedState;d.refs=ha;d.context=rf(a,f);f=a.updateQueue;null!==f&&(Uf(a,f,e,d,b),d.state=a.memoizedState);f=a.type.getDerivedStateFromProps;\"function\"===typeof f&&(lg(a,f,e),d.state=a.memoizedState);\"function\"===typeof c.getDerivedStateFromProps||\"function\"===typeof d.getSnapshotBeforeUpdate||\"function\"!==typeof d.UNSAFE_componentWillMount&&\"function\"!==typeof d.componentWillMount||(c=d.state,\"function\"===typeof d.componentWillMount&&\nd.componentWillMount(),\"function\"===typeof d.UNSAFE_componentWillMount&&d.UNSAFE_componentWillMount(),c!==d.state&&pg.enqueueReplaceState(d,d.state,null),f=a.updateQueue,null!==f&&(Uf(a,f,e,d,b),d.state=a.memoizedState));\"function\"===typeof d.componentDidMount&&(a.effectTag|=4)}var tg=Array.isArray;\nfunction ug(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;var d=void 0;c&&(2!==c.tag?A(\"110\"):void 0,d=c.stateNode);d?void 0:A(\"147\",a);var e=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===e)return b.ref;b=function(a){var b=d.refs===ha?d.refs={}:d.refs;null===a?delete b[e]:b[e]=a};b._stringRef=e;return b}\"string\"!==typeof a?A(\"148\"):void 0;c._owner?void 0:A(\"254\",a)}return a}\nfunction vg(a,b){\"textarea\"!==a.type&&A(\"31\",\"[object Object]\"===Object.prototype.toString.call(b)?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":b,\"\")}\nfunction wg(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c;c.nextEffect=null;c.effectTag=8}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b,c){a=zf(a,b,c);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.effectTag=\n2,c):d;b.effectTag=2;return c}function g(b){a&&null===b.alternate&&(b.effectTag=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=Cf(c,a.mode,d),b.return=a,b;b=e(b,c,d);b.return=a;return b}function k(a,b,c,d){if(null!==b&&b.type===c.type)return d=e(b,c.props,d),d.ref=ug(a,b,c),d.return=a,d;d=Af(c,a.mode,d);d.ref=ug(a,b,c);d.return=a;return d}function n(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=\nDf(c,a.mode,d),b.return=a,b;b=e(b,c.children||[],d);b.return=a;return b}function r(a,b,c,d,f){if(null===b||10!==b.tag)return b=Bf(c,a.mode,d,f),b.return=a,b;b=e(b,c,d);b.return=a;return b}function w(a,b,c){if(\"string\"===typeof b||\"number\"===typeof b)return b=Cf(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case gc:return c=Af(b,a.mode,c),c.ref=ug(a,null,b),c.return=a,c;case hc:return b=Df(b,a.mode,c),b.return=a,b}if(tg(b)||tc(b))return b=Bf(b,a.mode,c,null),b.return=\na,b;vg(a,b)}return null}function P(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case gc:return c.key===e?c.type===ic?r(a,b,c.props.children,d,e):k(a,b,c,d):null;case hc:return c.key===e?n(a,b,c,d):null}if(tg(c)||tc(c))return null!==e?null:r(a,b,c,d,null);vg(a,c)}return null}function nc(a,b,c,d,e){if(\"string\"===typeof d||\"number\"===typeof d)return a=a.get(c)||null,h(b,a,\"\"+d,e);\nif(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case gc:return a=a.get(null===d.key?c:d.key)||null,d.type===ic?r(b,a,d.props.children,e,d.key):k(b,a,d,e);case hc:return a=a.get(null===d.key?c:d.key)||null,n(b,a,d,e)}if(tg(d)||tc(d))return a=a.get(c)||null,r(b,a,d,e,null);vg(b,d)}return null}function Jd(e,g,h,k){for(var u=null,x=null,t=g,q=g=0,n=null;null!==t&&q<h.length;q++){t.index>q?(n=t,t=null):n=t.sibling;var l=P(e,t,h[q],k);if(null===l){null===t&&(t=n);break}a&&t&&null===l.alternate&&b(e,\nt);g=f(l,g,q);null===x?u=l:x.sibling=l;x=l;t=n}if(q===h.length)return c(e,t),u;if(null===t){for(;q<h.length;q++)if(t=w(e,h[q],k))g=f(t,g,q),null===x?u=t:x.sibling=t,x=t;return u}for(t=d(e,t);q<h.length;q++)if(n=nc(t,e,q,h[q],k))a&&null!==n.alternate&&t.delete(null===n.key?q:n.key),g=f(n,g,q),null===x?u=n:x.sibling=n,x=n;a&&t.forEach(function(a){return b(e,a)});return u}function E(e,g,h,k){var u=tc(h);\"function\"!==typeof u?A(\"150\"):void 0;h=u.call(h);null==h?A(\"151\"):void 0;for(var t=u=null,n=g,x=\ng=0,y=null,l=h.next();null!==n&&!l.done;x++,l=h.next()){n.index>x?(y=n,n=null):y=n.sibling;var r=P(e,n,l.value,k);if(null===r){n||(n=y);break}a&&n&&null===r.alternate&&b(e,n);g=f(r,g,x);null===t?u=r:t.sibling=r;t=r;n=y}if(l.done)return c(e,n),u;if(null===n){for(;!l.done;x++,l=h.next())l=w(e,l.value,k),null!==l&&(g=f(l,g,x),null===t?u=l:t.sibling=l,t=l);return u}for(n=d(e,n);!l.done;x++,l=h.next())l=nc(n,e,x,l.value,k),null!==l&&(a&&null!==l.alternate&&n.delete(null===l.key?x:l.key),g=f(l,g,x),null===\nt?u=l:t.sibling=l,t=l);a&&n.forEach(function(a){return b(e,a)});return u}return function(a,d,f,h){var k=\"object\"===typeof f&&null!==f&&f.type===ic&&null===f.key;k&&(f=f.props.children);var n=\"object\"===typeof f&&null!==f;if(n)switch(f.$$typeof){case gc:a:{n=f.key;for(k=d;null!==k;){if(k.key===n)if(10===k.tag?f.type===ic:k.type===f.type){c(a,k.sibling);d=e(k,f.type===ic?f.props.children:f.props,h);d.ref=ug(a,k,f);d.return=a;a=d;break a}else{c(a,k);break}else b(a,k);k=k.sibling}f.type===ic?(d=Bf(f.props.children,\na.mode,h,f.key),d.return=a,a=d):(h=Af(f,a.mode,h),h.ref=ug(a,d,f),h.return=a,a=h)}return g(a);case hc:a:{for(k=f.key;null!==d;){if(d.key===k)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[],h);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=Df(f,a.mode,h);d.return=a;a=d}return g(a)}if(\"string\"===typeof f||\"number\"===typeof f)return f=\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f,h),d.return=\na,a=d):(c(a,d),d=Cf(f,a.mode,h),d.return=a,a=d),g(a);if(tg(f))return Jd(a,d,f,h);if(tc(f))return E(a,d,f,h);n&&vg(a,f);if(\"undefined\"===typeof f&&!k)switch(a.tag){case 2:case 1:h=a.type,A(\"152\",h.displayName||h.name||\"Component\")}return c(a,d)}}var xg=wg(!0),yg=wg(!1),zg=null,Ag=null,Bg=!1;function Cg(a,b){var c=new yf(5,null,null,0);c.type=\"DELETED\";c.stateNode=b;c.return=a;c.effectTag=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}\nfunction Dg(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,!0):!1;default:return!1}}function Eg(a){if(Bg){var b=Ag;if(b){var c=b;if(!Dg(a,b)){b=hf(c);if(!b||!Dg(a,b)){a.effectTag|=2;Bg=!1;zg=a;return}Cg(zg,c)}zg=a;Ag=jf(b)}else a.effectTag|=2,Bg=!1,zg=a}}\nfunction Fg(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag;)a=a.return;zg=a}function Gg(a){if(a!==zg)return!1;if(!Bg)return Fg(a),Bg=!0,!1;var b=a.type;if(5!==a.tag||\"head\"!==b&&\"body\"!==b&&!df(b,a.memoizedProps))for(b=Ag;b;)Cg(a,b),b=hf(b);Fg(a);Ag=zg?hf(a.stateNode):null;return!0}function Hg(){Ag=zg=null;Bg=!1}function Q(a,b,c){Ig(a,b,c,b.expirationTime)}function Ig(a,b,c,d){b.child=null===a?yg(b,null,c,d):xg(b,a.child,c,d)}\nfunction Jg(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.effectTag|=128}function Kg(a,b,c,d,e){Jg(a,b);var f=0!==(b.effectTag&64);if(!c&&!f)return d&&xf(b,!1),R(a,b);c=b.stateNode;ec.current=b;var g=f?null:c.render();b.effectTag|=1;f&&(Ig(a,b,null,e),b.child=null);Ig(a,b,g,e);b.memoizedState=c.state;b.memoizedProps=c.props;d&&xf(b,!0);return b.child}\nfunction Lg(a){var b=a.stateNode;b.pendingContext?uf(a,b.pendingContext,b.pendingContext!==b.context):b.context&&uf(a,b.context,!1);ig(a,b.containerInfo)}\nfunction Mg(a,b,c,d){var e=a.child;null!==e&&(e.return=a);for(;null!==e;){switch(e.tag){case 12:var f=e.stateNode|0;if(e.type===b&&0!==(f&c)){for(f=e;null!==f;){var g=f.alternate;if(0===f.expirationTime||f.expirationTime>d)f.expirationTime=d,null!==g&&(0===g.expirationTime||g.expirationTime>d)&&(g.expirationTime=d);else if(null!==g&&(0===g.expirationTime||g.expirationTime>d))g.expirationTime=d;else break;f=f.return}f=null}else f=e.child;break;case 13:f=e.type===a.type?null:e.child;break;default:f=\ne.child}if(null!==f)f.return=e;else for(f=e;null!==f;){if(f===a){f=null;break}e=f.sibling;if(null!==e){e.return=f.return;f=e;break}f=f.return}e=f}}\nfunction Qg(a,b,c){var d=b.type._context,e=b.pendingProps,f=b.memoizedProps,g=!0;if(O.current)g=!1;else if(f===e)return b.stateNode=0,ag(b),R(a,b);var h=e.value;b.memoizedProps=e;if(null===f)h=1073741823;else if(f.value===e.value){if(f.children===e.children&&g)return b.stateNode=0,ag(b),R(a,b);h=0}else{var k=f.value;if(k===h&&(0!==k||1/k===1/h)||k!==k&&h!==h){if(f.children===e.children&&g)return b.stateNode=0,ag(b),R(a,b);h=0}else if(h=\"function\"===typeof d._calculateChangedBits?d._calculateChangedBits(k,\nh):1073741823,h|=0,0===h){if(f.children===e.children&&g)return b.stateNode=0,ag(b),R(a,b)}else Mg(b,d,h,c)}b.stateNode=h;ag(b);Q(a,b,e.children);return b.child}function R(a,b){null!==a&&b.child!==a.child?A(\"153\"):void 0;if(null!==b.child){a=b.child;var c=zf(a,a.pendingProps,a.expirationTime);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=zf(a,a.pendingProps,a.expirationTime),c.return=b;c.sibling=null}return b.child}\nfunction Rg(a,b,c){if(0===b.expirationTime||b.expirationTime>c){switch(b.tag){case 3:Lg(b);break;case 2:wf(b);break;case 4:ig(b,b.stateNode.containerInfo);break;case 13:ag(b)}return null}switch(b.tag){case 0:null!==a?A(\"155\"):void 0;var d=b.type,e=b.pendingProps,f=pf(b);f=rf(b,f);d=d(e,f);b.effectTag|=1;\"object\"===typeof d&&null!==d&&\"function\"===typeof d.render&&void 0===d.$$typeof?(f=b.type,b.tag=2,b.memoizedState=null!==d.state&&void 0!==d.state?d.state:null,f=f.getDerivedStateFromProps,\"function\"===\ntypeof f&&lg(b,f,e),e=wf(b),d.updater=pg,b.stateNode=d,d._reactInternalFiber=b,sg(b,c),a=Kg(a,b,!0,e,c)):(b.tag=1,Q(a,b,d),b.memoizedProps=e,a=b.child);return a;case 1:return e=b.type,c=b.pendingProps,O.current||b.memoizedProps!==c?(d=pf(b),d=rf(b,d),e=e(c,d),b.effectTag|=1,Q(a,b,e),b.memoizedProps=c,a=b.child):a=R(a,b),a;case 2:e=wf(b);if(null===a)if(null===b.stateNode){var g=b.pendingProps,h=b.type;d=pf(b);var k=2===b.tag&&null!=b.type.contextTypes;f=k?rf(b,d):ha;g=new h(g,f);b.memoizedState=null!==\ng.state&&void 0!==g.state?g.state:null;g.updater=pg;b.stateNode=g;g._reactInternalFiber=b;k&&(k=b.stateNode,k.__reactInternalMemoizedUnmaskedChildContext=d,k.__reactInternalMemoizedMaskedChildContext=f);sg(b,c);d=!0}else{h=b.type;d=b.stateNode;k=b.memoizedProps;f=b.pendingProps;d.props=k;var n=d.context;g=pf(b);g=rf(b,g);var r=h.getDerivedStateFromProps;(h=\"function\"===typeof r||\"function\"===typeof d.getSnapshotBeforeUpdate)||\"function\"!==typeof d.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof d.componentWillReceiveProps||\n(k!==f||n!==g)&&rg(b,d,f,g);Lf=!1;var w=b.memoizedState;n=d.state=w;var P=b.updateQueue;null!==P&&(Uf(b,P,f,d,c),n=b.memoizedState);k!==f||w!==n||O.current||Lf?(\"function\"===typeof r&&(lg(b,r,f),n=b.memoizedState),(k=Lf||qg(b,k,f,w,n,g))?(h||\"function\"!==typeof d.UNSAFE_componentWillMount&&\"function\"!==typeof d.componentWillMount||(\"function\"===typeof d.componentWillMount&&d.componentWillMount(),\"function\"===typeof d.UNSAFE_componentWillMount&&d.UNSAFE_componentWillMount()),\"function\"===typeof d.componentDidMount&&\n(b.effectTag|=4)):(\"function\"===typeof d.componentDidMount&&(b.effectTag|=4),b.memoizedProps=f,b.memoizedState=n),d.props=f,d.state=n,d.context=g,d=k):(\"function\"===typeof d.componentDidMount&&(b.effectTag|=4),d=!1)}else h=b.type,d=b.stateNode,f=b.memoizedProps,k=b.pendingProps,d.props=f,n=d.context,g=pf(b),g=rf(b,g),r=h.getDerivedStateFromProps,(h=\"function\"===typeof r||\"function\"===typeof d.getSnapshotBeforeUpdate)||\"function\"!==typeof d.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof d.componentWillReceiveProps||\n(f!==k||n!==g)&&rg(b,d,k,g),Lf=!1,n=b.memoizedState,w=d.state=n,P=b.updateQueue,null!==P&&(Uf(b,P,k,d,c),w=b.memoizedState),f!==k||n!==w||O.current||Lf?(\"function\"===typeof r&&(lg(b,r,k),w=b.memoizedState),(r=Lf||qg(b,f,k,n,w,g))?(h||\"function\"!==typeof d.UNSAFE_componentWillUpdate&&\"function\"!==typeof d.componentWillUpdate||(\"function\"===typeof d.componentWillUpdate&&d.componentWillUpdate(k,w,g),\"function\"===typeof d.UNSAFE_componentWillUpdate&&d.UNSAFE_componentWillUpdate(k,w,g)),\"function\"===typeof d.componentDidUpdate&&\n(b.effectTag|=4),\"function\"===typeof d.getSnapshotBeforeUpdate&&(b.effectTag|=256)):(\"function\"!==typeof d.componentDidUpdate||f===a.memoizedProps&&n===a.memoizedState||(b.effectTag|=4),\"function\"!==typeof d.getSnapshotBeforeUpdate||f===a.memoizedProps&&n===a.memoizedState||(b.effectTag|=256),b.memoizedProps=k,b.memoizedState=w),d.props=k,d.state=w,d.context=g,d=r):(\"function\"!==typeof d.componentDidUpdate||f===a.memoizedProps&&n===a.memoizedState||(b.effectTag|=4),\"function\"!==typeof d.getSnapshotBeforeUpdate||\nf===a.memoizedProps&&n===a.memoizedState||(b.effectTag|=256),d=!1);return Kg(a,b,d,e,c);case 3:Lg(b);e=b.updateQueue;if(null!==e)if(d=b.memoizedState,d=null!==d?d.element:null,Uf(b,e,b.pendingProps,null,c),e=b.memoizedState.element,e===d)Hg(),a=R(a,b);else{d=b.stateNode;if(d=(null===a||null===a.child)&&d.hydrate)Ag=jf(b.stateNode.containerInfo),zg=b,d=Bg=!0;d?(b.effectTag|=2,b.child=yg(b,null,e,c)):(Hg(),Q(a,b,e));a=b.child}else Hg(),a=R(a,b);return a;case 5:a:{gg(fg.current);e=gg(dg.current);d=He(e,\nb.type);e!==d&&(N(eg,b,b),N(dg,d,b));null===a&&Eg(b);e=b.type;k=b.memoizedProps;d=b.pendingProps;f=null!==a?a.memoizedProps:null;if(!O.current&&k===d){if(k=b.mode&1&&!!d.hidden)b.expirationTime=1073741823;if(!k||1073741823!==c){a=R(a,b);break a}}k=d.children;df(e,d)?k=null:f&&df(e,f)&&(b.effectTag|=16);Jg(a,b);1073741823!==c&&b.mode&1&&d.hidden?(b.expirationTime=1073741823,b.memoizedProps=d,a=null):(Q(a,b,k),b.memoizedProps=d,a=b.child)}return a;case 6:return null===a&&Eg(b),b.memoizedProps=b.pendingProps,\nnull;case 16:return null;case 4:return ig(b,b.stateNode.containerInfo),e=b.pendingProps,O.current||b.memoizedProps!==e?(null===a?b.child=xg(b,null,e,c):Q(a,b,e),b.memoizedProps=e,a=b.child):a=R(a,b),a;case 14:return e=b.type.render,c=b.pendingProps,d=b.ref,O.current||b.memoizedProps!==c||d!==(null!==a?a.ref:null)?(e=e(c,d),Q(a,b,e),b.memoizedProps=c,a=b.child):a=R(a,b),a;case 10:return c=b.pendingProps,O.current||b.memoizedProps!==c?(Q(a,b,c),b.memoizedProps=c,a=b.child):a=R(a,b),a;case 11:return c=\nb.pendingProps.children,O.current||null!==c&&b.memoizedProps!==c?(Q(a,b,c),b.memoizedProps=c,a=b.child):a=R(a,b),a;case 15:return c=b.pendingProps,b.memoizedProps===c?a=R(a,b):(Q(a,b,c.children),b.memoizedProps=c,a=b.child),a;case 13:return Qg(a,b,c);case 12:a:if(d=b.type,f=b.pendingProps,k=b.memoizedProps,e=d._currentValue,g=d._changedBits,O.current||0!==g||k!==f){b.memoizedProps=f;h=f.unstable_observedBits;if(void 0===h||null===h)h=1073741823;b.stateNode=h;if(0!==(g&h))Mg(b,d,g,c);else if(k===f){a=\nR(a,b);break a}c=f.children;c=c(e);b.effectTag|=1;Q(a,b,c);a=b.child}else a=R(a,b);return a;default:A(\"156\")}}function Sg(a){a.effectTag|=4}var Tg=void 0,Ug=void 0,Vg=void 0;Tg=function(){};Ug=function(a,b,c){(b.updateQueue=c)&&Sg(b)};Vg=function(a,b,c,d){c!==d&&Sg(b)};\nfunction Wg(a,b){var c=b.pendingProps;switch(b.tag){case 1:return null;case 2:return sf(b),null;case 3:jg(b);tf(b);var d=b.stateNode;d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)Gg(b),b.effectTag&=-3;Tg(b);return null;case 5:kg(b);d=gg(fg.current);var e=b.type;if(null!==a&&null!=b.stateNode){var f=a.memoizedProps,g=b.stateNode,h=gg(dg.current);g=We(g,e,f,c,d);Ug(a,b,g,e,f,c,d,h);a.ref!==b.ref&&(b.effectTag|=128)}else{if(!c)return null===b.stateNode?\nA(\"166\"):void 0,null;a=gg(dg.current);if(Gg(b))c=b.stateNode,e=b.type,f=b.memoizedProps,c[C]=b,c[Ma]=f,d=Ye(c,e,f,a,d),b.updateQueue=d,null!==d&&Sg(b);else{a=Te(e,c,d,a);a[C]=b;a[Ma]=c;a:for(f=b.child;null!==f;){if(5===f.tag||6===f.tag)a.appendChild(f.stateNode);else if(4!==f.tag&&null!==f.child){f.child.return=f;f=f.child;continue}if(f===b)break;for(;null===f.sibling;){if(null===f.return||f.return===b)break a;f=f.return}f.sibling.return=f.return;f=f.sibling}Ve(a,e,c,d);cf(e,c)&&Sg(b);b.stateNode=\na}null!==b.ref&&(b.effectTag|=128)}return null;case 6:if(a&&null!=b.stateNode)Vg(a,b,a.memoizedProps,c);else{if(\"string\"!==typeof c)return null===b.stateNode?A(\"166\"):void 0,null;d=gg(fg.current);gg(dg.current);Gg(b)?(d=b.stateNode,c=b.memoizedProps,d[C]=b,Ze(d,c)&&Sg(b)):(d=Ue(c,d),d[C]=b,b.stateNode=d)}return null;case 14:return null;case 16:return null;case 10:return null;case 11:return null;case 15:return null;case 4:return jg(b),Tg(b),null;case 13:return bg(b),null;case 12:return null;case 0:A(\"167\");\ndefault:A(\"156\")}}function Xg(a,b){var c=b.source;null===b.stack&&null!==c&&vc(c);null!==c&&uc(c);b=b.value;null!==a&&2===a.tag&&uc(a);try{b&&b.suppressReactErrorLogging||console.error(b)}catch(d){d&&d.suppressReactErrorLogging||console.error(d)}}function Yg(a){var b=a.ref;if(null!==b)if(\"function\"===typeof b)try{b(null)}catch(c){Zg(a,c)}else b.current=null}\nfunction $g(a){\"function\"===typeof Kf&&Kf(a);switch(a.tag){case 2:Yg(a);var b=a.stateNode;if(\"function\"===typeof b.componentWillUnmount)try{b.props=a.memoizedProps,b.state=a.memoizedState,b.componentWillUnmount()}catch(c){Zg(a,c)}break;case 5:Yg(a);break;case 4:ah(a)}}function bh(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction ch(a){a:{for(var b=a.return;null!==b;){if(bh(b)){var c=b;break a}b=b.return}A(\"160\");c=void 0}var d=b=void 0;switch(c.tag){case 5:b=c.stateNode;d=!1;break;case 3:b=c.stateNode.containerInfo;d=!0;break;case 4:b=c.stateNode.containerInfo;d=!0;break;default:A(\"161\")}c.effectTag&16&&(Ke(b,\"\"),c.effectTag&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c.return||bh(c.return)){c=null;break a}c=c.return}c.sibling.return=c.return;for(c=c.sibling;5!==c.tag&&6!==c.tag;){if(c.effectTag&2)continue b;\nif(null===c.child||4===c.tag)continue b;else c.child.return=c,c=c.child}if(!(c.effectTag&2)){c=c.stateNode;break a}}for(var e=a;;){if(5===e.tag||6===e.tag)if(c)if(d){var f=b,g=e.stateNode,h=c;8===f.nodeType?f.parentNode.insertBefore(g,h):f.insertBefore(g,h)}else b.insertBefore(e.stateNode,c);else d?(f=b,g=e.stateNode,8===f.nodeType?f.parentNode.insertBefore(g,f):f.appendChild(g)):b.appendChild(e.stateNode);else if(4!==e.tag&&null!==e.child){e.child.return=e;e=e.child;continue}if(e===a)break;for(;null===\ne.sibling;){if(null===e.return||e.return===a)return;e=e.return}e.sibling.return=e.return;e=e.sibling}}\nfunction ah(a){for(var b=a,c=!1,d=void 0,e=void 0;;){if(!c){c=b.return;a:for(;;){null===c?A(\"160\"):void 0;switch(c.tag){case 5:d=c.stateNode;e=!1;break a;case 3:d=c.stateNode.containerInfo;e=!0;break a;case 4:d=c.stateNode.containerInfo;e=!0;break a}c=c.return}c=!0}if(5===b.tag||6===b.tag){a:for(var f=b,g=f;;)if($g(g),null!==g.child&&4!==g.tag)g.child.return=g,g=g.child;else{if(g===f)break;for(;null===g.sibling;){if(null===g.return||g.return===f)break a;g=g.return}g.sibling.return=g.return;g=g.sibling}e?\n(f=d,g=b.stateNode,8===f.nodeType?f.parentNode.removeChild(g):f.removeChild(g)):d.removeChild(b.stateNode)}else if(4===b.tag?d=b.stateNode.containerInfo:$g(b),null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return;b=b.return;4===b.tag&&(c=!1)}b.sibling.return=b.return;b=b.sibling}}\nfunction dh(a,b){switch(b.tag){case 2:break;case 5:var c=b.stateNode;if(null!=c){var d=b.memoizedProps;a=null!==a?a.memoizedProps:d;var e=b.type,f=b.updateQueue;b.updateQueue=null;null!==f&&(c[Ma]=d,Xe(c,f,e,a,d))}break;case 6:null===b.stateNode?A(\"162\"):void 0;b.stateNode.nodeValue=b.memoizedProps;break;case 3:break;case 15:break;case 16:break;default:A(\"163\")}}function eh(a,b,c){c=Of(c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){fh(d);Xg(a,b)};return c}\nfunction gh(a,b,c){c=Of(c);c.tag=3;var d=a.stateNode;null!==d&&\"function\"===typeof d.componentDidCatch&&(c.callback=function(){null===hh?hh=new Set([this]):hh.add(this);var c=b.value,d=b.stack;Xg(a,b);this.componentDidCatch(c,{componentStack:null!==d?d:\"\"})});return c}\nfunction ih(a,b,c,d,e,f){c.effectTag|=512;c.firstEffect=c.lastEffect=null;d=Xf(d,c);a=b;do{switch(a.tag){case 3:a.effectTag|=1024;d=eh(a,d,f);Rf(a,d,f);return;case 2:if(b=d,c=a.stateNode,0===(a.effectTag&64)&&null!==c&&\"function\"===typeof c.componentDidCatch&&(null===hh||!hh.has(c))){a.effectTag|=1024;d=gh(a,b,f);Rf(a,d,f);return}}a=a.return}while(null!==a)}\nfunction jh(a){switch(a.tag){case 2:sf(a);var b=a.effectTag;return b&1024?(a.effectTag=b&-1025|64,a):null;case 3:return jg(a),tf(a),b=a.effectTag,b&1024?(a.effectTag=b&-1025|64,a):null;case 5:return kg(a),null;case 16:return b=a.effectTag,b&1024?(a.effectTag=b&-1025|64,a):null;case 4:return jg(a),null;case 13:return bg(a),null;default:return null}}var kh=ef(),lh=2,mh=kh,nh=0,oh=0,ph=!1,S=null,qh=null,T=0,rh=-1,sh=!1,U=null,th=!1,uh=!1,hh=null;\nfunction vh(){if(null!==S)for(var a=S.return;null!==a;){var b=a;switch(b.tag){case 2:sf(b);break;case 3:jg(b);tf(b);break;case 5:kg(b);break;case 4:jg(b);break;case 13:bg(b)}a=a.return}qh=null;T=0;rh=-1;sh=!1;S=null;uh=!1}\nfunction wh(a){for(;;){var b=a.alternate,c=a.return,d=a.sibling;if(0===(a.effectTag&512)){b=Wg(b,a,T);var e=a;if(1073741823===T||1073741823!==e.expirationTime){var f=0;switch(e.tag){case 3:case 2:var g=e.updateQueue;null!==g&&(f=g.expirationTime)}for(g=e.child;null!==g;)0!==g.expirationTime&&(0===f||f>g.expirationTime)&&(f=g.expirationTime),g=g.sibling;e.expirationTime=f}if(null!==b)return b;null!==c&&0===(c.effectTag&512)&&(null===c.firstEffect&&(c.firstEffect=a.firstEffect),null!==a.lastEffect&&\n(null!==c.lastEffect&&(c.lastEffect.nextEffect=a.firstEffect),c.lastEffect=a.lastEffect),1<a.effectTag&&(null!==c.lastEffect?c.lastEffect.nextEffect=a:c.firstEffect=a,c.lastEffect=a));if(null!==d)return d;if(null!==c)a=c;else{uh=!0;break}}else{a=jh(a,sh,T);if(null!==a)return a.effectTag&=511,a;null!==c&&(c.firstEffect=c.lastEffect=null,c.effectTag|=512);if(null!==d)return d;if(null!==c)a=c;else break}}return null}\nfunction xh(a){var b=Rg(a.alternate,a,T);null===b&&(b=wh(a));ec.current=null;return b}\nfunction yh(a,b,c){ph?A(\"243\"):void 0;ph=!0;if(b!==T||a!==qh||null===S)vh(),qh=a,T=b,rh=-1,S=zf(qh.current,null,T),a.pendingCommitExpirationTime=0;var d=!1;sh=!c||T<=lh;do{try{if(c)for(;null!==S&&!zh();)S=xh(S);else for(;null!==S;)S=xh(S)}catch(f){if(null===S)d=!0,fh(f);else{null===S?A(\"271\"):void 0;c=S;var e=c.return;if(null===e){d=!0;fh(f);break}ih(a,e,c,f,sh,T,mh);S=wh(c)}}break}while(1);ph=!1;if(d)return null;if(null===S){if(uh)return a.pendingCommitExpirationTime=b,a.current.alternate;sh?A(\"262\"):\nvoid 0;0<=rh&&setTimeout(function(){var b=a.current.expirationTime;0!==b&&(0===a.remainingExpirationTime||a.remainingExpirationTime<b)&&Ah(a,b)},rh);Bh(a.current.expirationTime)}return null}\nfunction Zg(a,b){var c;a:{ph&&!th?A(\"263\"):void 0;for(c=a.return;null!==c;){switch(c.tag){case 2:var d=c.stateNode;if(\"function\"===typeof c.type.getDerivedStateFromCatch||\"function\"===typeof d.componentDidCatch&&(null===hh||!hh.has(d))){a=Xf(b,a);a=gh(c,a,1);Qf(c,a,1);og(c,1);c=void 0;break a}break;case 3:a=Xf(b,a);a=eh(c,a,1);Qf(c,a,1);og(c,1);c=void 0;break a}c=c.return}3===a.tag&&(c=Xf(b,a),c=eh(a,c,1),Qf(a,c,1),og(a,1));c=void 0}return c}\nfunction Ch(){var a=2+25*(((mg()-2+500)/25|0)+1);a<=nh&&(a=nh+1);return nh=a}function ng(a,b){a=0!==oh?oh:ph?th?1:T:b.mode&1?Dh?2+10*(((a-2+15)/10|0)+1):2+25*(((a-2+500)/25|0)+1):1;Dh&&(0===Eh||a>Eh)&&(Eh=a);return a}\nfunction og(a,b){for(;null!==a;){if(0===a.expirationTime||a.expirationTime>b)a.expirationTime=b;null!==a.alternate&&(0===a.alternate.expirationTime||a.alternate.expirationTime>b)&&(a.alternate.expirationTime=b);if(null===a.return)if(3===a.tag){var c=a.stateNode;!ph&&0!==T&&b<T&&vh();var d=c.current.expirationTime;ph&&!th&&qh===c||Ah(c,d);Fh>Gh&&A(\"185\")}else break;a=a.return}}function mg(){mh=ef()-kh;return lh=(mh/10|0)+2}\nfunction Hh(a){var b=oh;oh=2+25*(((mg()-2+500)/25|0)+1);try{return a()}finally{oh=b}}function Ih(a,b,c,d,e){var f=oh;oh=1;try{return a(b,c,d,e)}finally{oh=f}}var Jh=null,V=null,Kh=0,Lh=void 0,W=!1,X=null,Y=0,Eh=0,Mh=!1,Nh=!1,Oh=null,Ph=null,Z=!1,Qh=!1,Dh=!1,Rh=null,Gh=1E3,Fh=0,Sh=1;function Th(a){if(0!==Kh){if(a>Kh)return;null!==Lh&&gf(Lh)}var b=ef()-kh;Kh=a;Lh=ff(Uh,{timeout:10*(a-2)-b})}\nfunction Ah(a,b){if(null===a.nextScheduledRoot)a.remainingExpirationTime=b,null===V?(Jh=V=a,a.nextScheduledRoot=a):(V=V.nextScheduledRoot=a,V.nextScheduledRoot=Jh);else{var c=a.remainingExpirationTime;if(0===c||b<c)a.remainingExpirationTime=b}W||(Z?Qh&&(X=a,Y=1,Vh(a,1,!1)):1===b?Wh():Th(b))}\nfunction Xh(){var a=0,b=null;if(null!==V)for(var c=V,d=Jh;null!==d;){var e=d.remainingExpirationTime;if(0===e){null===c||null===V?A(\"244\"):void 0;if(d===d.nextScheduledRoot){Jh=V=d.nextScheduledRoot=null;break}else if(d===Jh)Jh=e=d.nextScheduledRoot,V.nextScheduledRoot=e,d.nextScheduledRoot=null;else if(d===V){V=c;V.nextScheduledRoot=Jh;d.nextScheduledRoot=null;break}else c.nextScheduledRoot=d.nextScheduledRoot,d.nextScheduledRoot=null;d=c.nextScheduledRoot}else{if(0===a||e<a)a=e,b=d;if(d===V)break;\nc=d;d=d.nextScheduledRoot}}c=X;null!==c&&c===b&&1===a?Fh++:Fh=0;X=b;Y=a}function Uh(a){Yh(0,!0,a)}function Wh(){Yh(1,!1,null)}function Yh(a,b,c){Ph=c;Xh();if(b)for(;null!==X&&0!==Y&&(0===a||a>=Y)&&(!Mh||mg()>=Y);)mg(),Vh(X,Y,!Mh),Xh();else for(;null!==X&&0!==Y&&(0===a||a>=Y);)Vh(X,Y,!1),Xh();null!==Ph&&(Kh=0,Lh=null);0!==Y&&Th(Y);Ph=null;Mh=!1;Zh()}function $h(a,b){W?A(\"253\"):void 0;X=a;Y=b;Vh(a,b,!1);Wh();Zh()}\nfunction Zh(){Fh=0;if(null!==Rh){var a=Rh;Rh=null;for(var b=0;b<a.length;b++){var c=a[b];try{c._onComplete()}catch(d){Nh||(Nh=!0,Oh=d)}}}if(Nh)throw a=Oh,Oh=null,Nh=!1,a;}function Vh(a,b,c){W?A(\"245\"):void 0;W=!0;c?(c=a.finishedWork,null!==c?ai(a,c,b):(c=yh(a,b,!0),null!==c&&(zh()?a.finishedWork=c:ai(a,c,b)))):(c=a.finishedWork,null!==c?ai(a,c,b):(c=yh(a,b,!1),null!==c&&ai(a,c,b)));W=!1}\nfunction ai(a,b,c){var d=a.firstBatch;if(null!==d&&d._expirationTime<=c&&(null===Rh?Rh=[d]:Rh.push(d),d._defer)){a.finishedWork=b;a.remainingExpirationTime=0;return}a.finishedWork=null;th=ph=!0;c=b.stateNode;c.current===b?A(\"177\"):void 0;d=c.pendingCommitExpirationTime;0===d?A(\"261\"):void 0;c.pendingCommitExpirationTime=0;mg();ec.current=null;if(1<b.effectTag)if(null!==b.lastEffect){b.lastEffect.nextEffect=b;var e=b.firstEffect}else e=b;else e=b.firstEffect;af=Hd;var f=da();if(Ud(f)){if(\"selectionStart\"in\nf)var g={start:f.selectionStart,end:f.selectionEnd};else a:{var h=window.getSelection&&window.getSelection();if(h&&0!==h.rangeCount){g=h.anchorNode;var k=h.anchorOffset,n=h.focusNode;h=h.focusOffset;try{g.nodeType,n.nodeType}catch(Wa){g=null;break a}var r=0,w=-1,P=-1,nc=0,Jd=0,E=f,t=null;b:for(;;){for(var x;;){E!==g||0!==k&&3!==E.nodeType||(w=r+k);E!==n||0!==h&&3!==E.nodeType||(P=r+h);3===E.nodeType&&(r+=E.nodeValue.length);if(null===(x=E.firstChild))break;t=E;E=x}for(;;){if(E===f)break b;t===g&&\n++nc===k&&(w=r);t===n&&++Jd===h&&(P=r);if(null!==(x=E.nextSibling))break;E=t;t=E.parentNode}E=x}g=-1===w||-1===P?null:{start:w,end:P}}else g=null}g=g||{start:0,end:0}}else g=null;bf={focusedElem:f,selectionRange:g};Id(!1);for(U=e;null!==U;){f=!1;g=void 0;try{for(;null!==U;){if(U.effectTag&256){var u=U.alternate;k=U;switch(k.tag){case 2:if(k.effectTag&256&&null!==u){var y=u.memoizedProps,D=u.memoizedState,ja=k.stateNode;ja.props=k.memoizedProps;ja.state=k.memoizedState;var mi=ja.getSnapshotBeforeUpdate(y,\nD);ja.__reactInternalSnapshotBeforeUpdate=mi}break;case 3:case 5:case 6:case 4:break;default:A(\"163\")}}U=U.nextEffect}}catch(Wa){f=!0,g=Wa}f&&(null===U?A(\"178\"):void 0,Zg(U,g),null!==U&&(U=U.nextEffect))}for(U=e;null!==U;){u=!1;y=void 0;try{for(;null!==U;){var q=U.effectTag;q&16&&Ke(U.stateNode,\"\");if(q&128){var z=U.alternate;if(null!==z){var l=z.ref;null!==l&&(\"function\"===typeof l?l(null):l.current=null)}}switch(q&14){case 2:ch(U);U.effectTag&=-3;break;case 6:ch(U);U.effectTag&=-3;dh(U.alternate,\nU);break;case 4:dh(U.alternate,U);break;case 8:D=U,ah(D),D.return=null,D.child=null,D.alternate&&(D.alternate.child=null,D.alternate.return=null)}U=U.nextEffect}}catch(Wa){u=!0,y=Wa}u&&(null===U?A(\"178\"):void 0,Zg(U,y),null!==U&&(U=U.nextEffect))}l=bf;z=da();q=l.focusedElem;u=l.selectionRange;if(z!==q&&fa(document.documentElement,q)){null!==u&&Ud(q)&&(z=u.start,l=u.end,void 0===l&&(l=z),\"selectionStart\"in q?(q.selectionStart=z,q.selectionEnd=Math.min(l,q.value.length)):window.getSelection&&(z=window.getSelection(),\ny=q[lb()].length,l=Math.min(u.start,y),u=void 0===u.end?l:Math.min(u.end,y),!z.extend&&l>u&&(y=u,u=l,l=y),y=Td(q,l),D=Td(q,u),y&&D&&(1!==z.rangeCount||z.anchorNode!==y.node||z.anchorOffset!==y.offset||z.focusNode!==D.node||z.focusOffset!==D.offset)&&(ja=document.createRange(),ja.setStart(y.node,y.offset),z.removeAllRanges(),l>u?(z.addRange(ja),z.extend(D.node,D.offset)):(ja.setEnd(D.node,D.offset),z.addRange(ja)))));z=[];for(l=q;l=l.parentNode;)1===l.nodeType&&z.push({element:l,left:l.scrollLeft,\ntop:l.scrollTop});\"function\"===typeof q.focus&&q.focus();for(q=0;q<z.length;q++)l=z[q],l.element.scrollLeft=l.left,l.element.scrollTop=l.top}bf=null;Id(af);af=null;c.current=b;for(U=e;null!==U;){e=!1;q=void 0;try{for(z=d;null!==U;){var hg=U.effectTag;if(hg&36){var oc=U.alternate;l=U;u=z;switch(l.tag){case 2:var ca=l.stateNode;if(l.effectTag&4)if(null===oc)ca.props=l.memoizedProps,ca.state=l.memoizedState,ca.componentDidMount();else{var wi=oc.memoizedProps,xi=oc.memoizedState;ca.props=l.memoizedProps;\nca.state=l.memoizedState;ca.componentDidUpdate(wi,xi,ca.__reactInternalSnapshotBeforeUpdate)}var Ng=l.updateQueue;null!==Ng&&(ca.props=l.memoizedProps,ca.state=l.memoizedState,Wf(l,Ng,ca,u));break;case 3:var Og=l.updateQueue;if(null!==Og){y=null;if(null!==l.child)switch(l.child.tag){case 5:y=l.child.stateNode;break;case 2:y=l.child.stateNode}Wf(l,Og,y,u)}break;case 5:var yi=l.stateNode;null===oc&&l.effectTag&4&&cf(l.type,l.memoizedProps)&&yi.focus();break;case 6:break;case 4:break;case 15:break;case 16:break;\ndefault:A(\"163\")}}if(hg&128){l=void 0;var yc=U.ref;if(null!==yc){var Pg=U.stateNode;switch(U.tag){case 5:l=Pg;break;default:l=Pg}\"function\"===typeof yc?yc(l):yc.current=l}}var zi=U.nextEffect;U.nextEffect=null;U=zi}}catch(Wa){e=!0,q=Wa}e&&(null===U?A(\"178\"):void 0,Zg(U,q),null!==U&&(U=U.nextEffect))}ph=th=!1;\"function\"===typeof Jf&&Jf(b.stateNode);b=c.current.expirationTime;0===b&&(hh=null);a.remainingExpirationTime=b}function zh(){return null===Ph||Ph.timeRemaining()>Sh?!1:Mh=!0}\nfunction fh(a){null===X?A(\"246\"):void 0;X.remainingExpirationTime=0;Nh||(Nh=!0,Oh=a)}function Bh(a){null===X?A(\"246\"):void 0;X.remainingExpirationTime=a}function bi(a,b){var c=Z;Z=!0;try{return a(b)}finally{(Z=c)||W||Wh()}}function ci(a,b){if(Z&&!Qh){Qh=!0;try{return a(b)}finally{Qh=!1}}return a(b)}function di(a,b){W?A(\"187\"):void 0;var c=Z;Z=!0;try{return Ih(a,b)}finally{Z=c,Wh()}}\nfunction ei(a,b,c){if(Dh)return a(b,c);Z||W||0===Eh||(Yh(Eh,!1,null),Eh=0);var d=Dh,e=Z;Z=Dh=!0;try{return a(b,c)}finally{Dh=d,(Z=e)||W||Wh()}}function fi(a){var b=Z;Z=!0;try{Ih(a)}finally{(Z=b)||W||Yh(1,!1,null)}}\nfunction gi(a,b,c,d,e){var f=b.current;if(c){c=c._reactInternalFiber;var g;b:{2===jd(c)&&2===c.tag?void 0:A(\"170\");for(g=c;3!==g.tag;){if(qf(g)){g=g.stateNode.__reactInternalMemoizedMergedChildContext;break b}(g=g.return)?void 0:A(\"171\")}g=g.stateNode.context}c=qf(c)?vf(c,g):g}else c=ha;null===b.context?b.context=c:b.pendingContext=c;b=e;e=Of(d);e.payload={element:a};b=void 0===b?null:b;null!==b&&(e.callback=b);Qf(f,e,d);og(f,d);return d}\nfunction hi(a){var b=a._reactInternalFiber;void 0===b&&(\"function\"===typeof a.render?A(\"188\"):A(\"268\",Object.keys(a)));a=md(b);return null===a?null:a.stateNode}function ii(a,b,c,d){var e=b.current,f=mg();e=ng(f,e);return gi(a,b,c,e,d)}function ji(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}\nfunction ki(a){var b=a.findFiberByHostInstance;return If(p({},a,{findHostInstanceByFiber:function(a){a=md(a);return null===a?null:a.stateNode},findFiberByHostInstance:function(a){return b?b(a):null}}))}\nvar li={updateContainerAtExpirationTime:gi,createContainer:function(a,b,c){return Ef(a,b,c)},updateContainer:ii,flushRoot:$h,requestWork:Ah,computeUniqueAsyncExpiration:Ch,batchedUpdates:bi,unbatchedUpdates:ci,deferredUpdates:Hh,syncUpdates:Ih,interactiveUpdates:ei,flushInteractiveUpdates:function(){W||0===Eh||(Yh(Eh,!1,null),Eh=0)},flushControlled:fi,flushSync:di,getPublicRootInstance:ji,findHostInstance:hi,findHostInstanceWithNoPortals:function(a){a=nd(a);return null===a?null:a.stateNode},injectIntoDevTools:ki};\nfunction ni(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:hc,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}Kb.injectFiberControlledHostComponent($e);function oi(a){this._expirationTime=Ch();this._root=a;this._callbacks=this._next=null;this._hasChildren=this._didComplete=!1;this._children=null;this._defer=!0}\noi.prototype.render=function(a){this._defer?void 0:A(\"250\");this._hasChildren=!0;this._children=a;var b=this._root._internalRoot,c=this._expirationTime,d=new pi;gi(a,b,null,c,d._onCommit);return d};oi.prototype.then=function(a){if(this._didComplete)a();else{var b=this._callbacks;null===b&&(b=this._callbacks=[]);b.push(a)}};\noi.prototype.commit=function(){var a=this._root._internalRoot,b=a.firstBatch;this._defer&&null!==b?void 0:A(\"251\");if(this._hasChildren){var c=this._expirationTime;if(b!==this){this._hasChildren&&(c=this._expirationTime=b._expirationTime,this.render(this._children));for(var d=null,e=b;e!==this;)d=e,e=e._next;null===d?A(\"251\"):void 0;d._next=e._next;this._next=b;a.firstBatch=this}this._defer=!1;$h(a,c);b=this._next;this._next=null;b=a.firstBatch=b;null!==b&&b._hasChildren&&b.render(b._children)}else this._next=\nnull,this._defer=!1};oi.prototype._onComplete=function(){if(!this._didComplete){this._didComplete=!0;var a=this._callbacks;if(null!==a)for(var b=0;b<a.length;b++)(0,a[b])()}};function pi(){this._callbacks=null;this._didCommit=!1;this._onCommit=this._onCommit.bind(this)}pi.prototype.then=function(a){if(this._didCommit)a();else{var b=this._callbacks;null===b&&(b=this._callbacks=[]);b.push(a)}};\npi.prototype._onCommit=function(){if(!this._didCommit){this._didCommit=!0;var a=this._callbacks;if(null!==a)for(var b=0;b<a.length;b++){var c=a[b];\"function\"!==typeof c?A(\"191\",c):void 0;c()}}};function qi(a,b,c){this._internalRoot=Ef(a,b,c)}qi.prototype.render=function(a,b){var c=this._internalRoot,d=new pi;b=void 0===b?null:b;null!==b&&d.then(b);ii(a,c,null,d._onCommit);return d};\nqi.prototype.unmount=function(a){var b=this._internalRoot,c=new pi;a=void 0===a?null:a;null!==a&&c.then(a);ii(null,b,null,c._onCommit);return c};qi.prototype.legacy_renderSubtreeIntoContainer=function(a,b,c){var d=this._internalRoot,e=new pi;c=void 0===c?null:c;null!==c&&e.then(c);ii(b,d,a,e._onCommit);return e};\nqi.prototype.createBatch=function(){var a=new oi(this),b=a._expirationTime,c=this._internalRoot,d=c.firstBatch;if(null===d)c.firstBatch=a,a._next=null;else{for(c=null;null!==d&&d._expirationTime<=b;)c=d,d=d._next;a._next=d;null!==c&&(c._next=a)}return a};function ri(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}Sb=li.batchedUpdates;Tb=li.interactiveUpdates;Ub=li.flushInteractiveUpdates;\nfunction si(a,b){b||(b=a?9===a.nodeType?a.documentElement:a.firstChild:null,b=!(!b||1!==b.nodeType||!b.hasAttribute(\"data-reactroot\")));if(!b)for(var c;c=a.lastChild;)a.removeChild(c);return new qi(a,!1,b)}\nfunction ti(a,b,c,d,e){ri(c)?void 0:A(\"200\");var f=c._reactRootContainer;if(f){if(\"function\"===typeof e){var g=e;e=function(){var a=ji(f._internalRoot);g.call(a)}}null!=a?f.legacy_renderSubtreeIntoContainer(a,b,e):f.render(b,e)}else{f=c._reactRootContainer=si(c,d);if(\"function\"===typeof e){var h=e;e=function(){var a=ji(f._internalRoot);h.call(a)}}ci(function(){null!=a?f.legacy_renderSubtreeIntoContainer(a,b,e):f.render(b,e)})}return ji(f._internalRoot)}\nfunction ui(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;ri(b)?void 0:A(\"200\");return ni(a,b,null,c)}\nvar vi={createPortal:ui,findDOMNode:function(a){return null==a?null:1===a.nodeType?a:hi(a)},hydrate:function(a,b,c){return ti(null,a,b,!0,c)},render:function(a,b,c){return ti(null,a,b,!1,c)},unstable_renderSubtreeIntoContainer:function(a,b,c,d){null==a||void 0===a._reactInternalFiber?A(\"38\"):void 0;return ti(a,b,c,!1,d)},unmountComponentAtNode:function(a){ri(a)?void 0:A(\"40\");return a._reactRootContainer?(ci(function(){ti(null,null,a,!1,function(){a._reactRootContainer=null})}),!0):!1},unstable_createPortal:function(){return ui.apply(void 0,\narguments)},unstable_batchedUpdates:bi,unstable_deferredUpdates:Hh,unstable_interactiveUpdates:ei,flushSync:di,unstable_flushControlled:fi,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{EventPluginHub:Ka,EventPluginRegistry:va,EventPropagators:$a,ReactControlledComponent:Rb,ReactDOMComponentTree:Qa,ReactDOMEventListener:Nd},unstable_createRoot:function(a,b){return new qi(a,!0,null!=b&&!0===b.hydrate)}};ki({findFiberByHostInstance:Na,bundleType:0,version:\"16.4.1\",rendererPackageName:\"react-dom\"});\nvar Ai={default:vi},Bi=Ai&&vi||Ai;module.exports=Bi.default?Bi.default:Bi;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-dom/cjs/react-dom.production.min.js\n// module id = 17\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n\n/**\n * Simple, lightweight module assisting with the detection and context of\n * Worker. Helps avoid circular dependencies and allows code to reason about\n * whether or not they are in a Worker, even if they never include the main\n * `ReactWorker` dependency.\n */\nvar ExecutionEnvironment = {\n\n  canUseDOM: canUseDOM,\n\n  canUseWorkers: typeof Worker !== 'undefined',\n\n  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),\n\n  canUseViewport: canUseDOM && !!window.screen,\n\n  isInWorker: !canUseDOM // For now, this is true - might change in the future.\n\n};\n\nmodule.exports = ExecutionEnvironment;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/fbjs/lib/ExecutionEnvironment.js\n// module id = 18\n// module chunks = 0","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\n/* eslint-disable fb-www/typeof-undefined */\n\n/**\n * Same as document.activeElement but wraps in a try-catch block. In IE it is\n * not safe to call document.activeElement if there is nothing focused.\n *\n * The activeElement will be null only if the document or document body is not\n * yet defined.\n *\n * @param {?DOMDocument} doc Defaults to current document.\n * @return {?DOMElement}\n */\nfunction getActiveElement(doc) /*?DOMElement*/{\n  doc = doc || (typeof document !== 'undefined' ? document : undefined);\n  if (typeof doc === 'undefined') {\n    return null;\n  }\n  try {\n    return doc.activeElement || doc.body;\n  } catch (e) {\n    return doc.body;\n  }\n}\n\nmodule.exports = getActiveElement;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/fbjs/lib/getActiveElement.js\n// module id = 19\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n * \n */\n\n/*eslint-disable no-self-compare */\n\n'use strict';\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x, y) {\n  // SameValue algorithm\n  if (x === y) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    // Added the nonzero y check to make Flow happy, but it is redundant\n    return x !== 0 || y !== 0 || 1 / x === 1 / y;\n  } else {\n    // Step 6.a: NaN == NaN\n    return x !== x && y !== y;\n  }\n}\n\n/**\n * Performs equality by iterating through keys on an object and returning false\n * when any key has values which are not strictly equal between the arguments.\n * Returns true when the values of all keys are strictly equal.\n */\nfunction shallowEqual(objA, objB) {\n  if (is(objA, objB)) {\n    return true;\n  }\n\n  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  // Test for A's keys different from B.\n  for (var i = 0; i < keysA.length; i++) {\n    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = shallowEqual;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/fbjs/lib/shallowEqual.js\n// module id = 20\n// module chunks = 0","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nvar isTextNode = require('./isTextNode');\n\n/*eslint-disable no-bitwise */\n\n/**\n * Checks if a given DOM node contains or is another DOM node.\n */\nfunction containsNode(outerNode, innerNode) {\n  if (!outerNode || !innerNode) {\n    return false;\n  } else if (outerNode === innerNode) {\n    return true;\n  } else if (isTextNode(outerNode)) {\n    return false;\n  } else if (isTextNode(innerNode)) {\n    return containsNode(outerNode, innerNode.parentNode);\n  } else if ('contains' in outerNode) {\n    return outerNode.contains(innerNode);\n  } else if (outerNode.compareDocumentPosition) {\n    return !!(outerNode.compareDocumentPosition(innerNode) & 16);\n  } else {\n    return false;\n  }\n}\n\nmodule.exports = containsNode;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/fbjs/lib/containsNode.js\n// module id = 21\n// module chunks = 0","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\nvar isNode = require('./isNode');\n\n/**\n * @param {*} object The object to check.\n * @return {boolean} Whether or not the object is a DOM text node.\n */\nfunction isTextNode(object) {\n  return isNode(object) && object.nodeType == 3;\n}\n\nmodule.exports = isTextNode;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/fbjs/lib/isTextNode.js\n// module id = 22\n// module chunks = 0","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\n/**\n * @param {*} object The object to check.\n * @return {boolean} Whether or not the object is a DOM node.\n */\nfunction isNode(object) {\n  var doc = object ? object.ownerDocument || object : document;\n  var defaultView = doc.defaultView || window;\n  return !!(object && (typeof defaultView.Node === 'function' ? object instanceof defaultView.Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));\n}\n\nmodule.exports = isNode;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/fbjs/lib/isNode.js\n// module id = 23\n// module chunks = 0","import React, { Component } from 'react';\nimport logo from './svg-rocket.svg';\nimport './App.css';\nimport Board from './Board.js';\n\n// todo: flow\n// todo: jest test\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <h1 className=\"App-title\">React Scorch</h1>\n        </header>\n        <Board/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n\n\n// WEBPACK FOOTER //\n// ./src/App.js","module.exports = __webpack_public_path__ + \"static/media/svg-rocket.2ee4edd8.svg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/svg-rocket.svg\n// module id = 26\n// module chunks = 0","import React, { Component } from 'react';\nimport './App.css';\nimport MJS from 'matter-js';\nglobal.decomp = require('poly-decomp');\n\n// todo: manage board canvas size, as maybe relational to screen size by scaling the world\n\nclass Board extends Component {\n\n  // constructor arguments\n  initialAngle = '90';\n  state = { turn: 'A',\n            angleA: this.initialAngle,\n            angleB: this.initialAngle,\n            forceA: 15,\n            forceB: 15,\n            gameOver: \"-\" \n          };\n  canvasRef = React.createRef(); // react 16.3 new ref API\n  size = { height: 550,\n           width: 800,\n           scale: 1 // todo: scale by screen size\n         };\n  bullet = {collisionCount: 0, \n            inFlight: false};\n\n\n  componentDidMount() {\n    // initialize matter.js\n    this.initMJS();\n  }\n\n  componentWillUnmount() {\n    // todo: distruct matter.js?\n  }\n\n  initMJS = () => {\n    ////////////////////////////////////////////////\n    // module aliases\n    let Engine = MJS.Engine,\n        Render = MJS.Render,\n        World = MJS.World,\n        Events = MJS.Events,\n        //MouseConstraint = MJS.MouseConstraint,\n        //Mouse = MJS.Mouse,\n        //Vertices = MJS.Vertices,\n        //Body = MJS.Body,\n        Bodies = MJS.Bodies;\n\n    // create an engine\n    this.engine = Engine.create();\n\n    // create a renderer\n    let render = Render.create({\n      element: this.canvasRef.current,\n      engine: this.engine,\n      options: {\n        width: this.size.width,\n        height: this.size.height,\n        wireframes: false,\n        background: this.getRandomColor() //\"LightGray\"\n      }\n    });\n\n    let bodies = [];\n\n    ////////////////////////////////////////////////\n    // create static landscape\n\n    let baseGround = Bodies.rectangle(this.size.width/2, \n                                      this.size.height-10, this.size.width, 20,\n                                      { isStatic: true, label: \"ground-base\",\n                                        render: {fillStyle: \"DarkSlateGrey\"}\n                                      });\n    let leftWall = Bodies.rectangle(-10, this.size.height/2, 20, this.size.height*2,\n                                    { isStatic: true, label: \"ground-base\",\n                                      render: {fillStyle: \"DarkSlateGrey\"}\n                                    });\n    let rightWall = Bodies.rectangle(this.size.width+10, this.size.height/2, 20, this.size.height*2,\n                                    { isStatic: true, label: \"ground-base\",\n                                      render: {fillStyle: \"DarkSlateGrey\"}\n                                    });\n    bodies.push(baseGround);\n    bodies.push(leftWall);\n    bodies.push(rightWall);\n\n    let elementSize = 5,\n        maxHeight = 300,\n        smootherSize = 10,\n        modifier = 0,\n        maxElements = Math.floor(maxHeight/elementSize),\n        x, y, i, j, k, rect;\n\n    j = Math.floor(Math.random() * maxElements + 1);\n    for (k = 0; k < Math.floor(this.size.width/elementSize)+1; k++) {\n      if (k % smootherSize === 0) {\n        modifier = Math.floor(Math.random() * 3 - 1);\n        if (j === 1) {modifier++}\n        else if (j === maxElements) {modifier--};\n      };\n      j = j + Math.floor(Math.random() * 3 - 1 + modifier);\n      if (j<1) {j=1}\n      else if (j>maxElements) {j=maxElements};\n      for (i = 0; i < j; i++) {\n        x = (k * elementSize);\n        y = this.size.height - 10 - (i * elementSize);\n        rect = Bodies.rectangle(x, y, elementSize, elementSize, \n                                { isStatic: true, label: \"ground-element\",\n                                  render: {fillStyle: \"DarkSlateGrey\"}\n                                });\n        bodies.push(rect);\n      }\n    }\n\n    ////////////////////////////////////////////////\n    // create two player sprites\n    let radius = 50;\n    x = Math.floor((Math.random() * this.size.width/4) + 1);\n    this.playerA = Bodies.circle(radius+x, 1, 20, {\n      isStatic: false,\n      label: \"player-a\",\n      render: {\n        sprite: {\n          texture: \"https://opengameart.org/sites/default/files/styles/medium/public/ship9.png\",\n          xScale: 0.15,\n          yScale: 0.15\n        }\n      }\n    });\n    bodies.push(this.playerA);\n\n    x = Math.floor((Math.random() * this.size.width/4) + 1);\n    this.playerB = Bodies.circle(this.size.width-radius-x, 1, 20, {\n      isStatic: false,\n      label: \"player-b\",\n      render: {\n        sprite: {\n          texture: \"https://opengameart.org/sites/default/files/styles/medium/public/ship9b_0.png\",\n          xScale: 0.15,\n          yScale: 0.15\n        }\n      }\n    });\n    bodies.push(this.playerB);\n\n    ////////////////////////////////////////////////\n    // add all of the bodies to the world\n    World.add(this.engine.world, bodies);\n    \n    // run the engine\n    Engine.run(this.engine);\n\n    // run the renderer\n    Render.run(render);\n\n    // add collision listener (active, start, end)\n    Events.on(this.engine, 'collisionStart', this.onCollision);\n    Events.on(this.engine, 'collisionEnd', this.onCollision);\n    //Events.on(this.engine, 'collisionActive', this.onCollision);\n\n    ////////////////////////////////////////////////\n    // add mouse control\n    /*\n    let mouse = Mouse.create(render.canvas),\n        mouseConstraint = MouseConstraint.create(\n          this.engine, {\n              mouse: mouse,\n              constraint: {\n                  stiffness: 0.2,\n                  render: {\n                      visible: false\n                  }\n              }\n          });\n\n    World.add(this.engine.world, mouseConstraint);\n\n    // keep the mouse in sync with rendering\n    //this.render.mouse = mouse;\n\n    // register events\n    Events.on(mouseConstraint, \"mousedown\", this.onCanvasClick)\n    */\n  };\n\n  /*\n  onCanvasClick = (e) => {\n    let {x, y} = e.mouse.mousedownPosition;\n    console.log (\"clicked: \" + x + \", \" + y); //JSON.stringify\n  }\n  */\n\n  onCollision = (e) => {\n    let i,\n        pair,\n        pairs = e.pairs, \n        Body = MJS.Body,\n        World = MJS.World;\n\n    for (i = 0; i < pairs.length; i++) {\n      pair = pairs[i];\n      //console.log (\"Collision of A: \" + pair.bodyA.label + \", B: \" + pair.bodyB.label)\n\n      ///////////////////////////////////////////\n      // handle initial player sprite positioning\n      if (pair.bodyA.label.startsWith(\"player\") && pair.bodyB.label.startsWith(\"ground\")) {\n        Body.setStatic(pair.bodyA, true); \n        //Body.setPosition(pair.bodyA, {x: pair.bodyA.position.x-15, y: pair.bodyA.position.y});\n        Body.setAngle(pair.bodyA, 0);\n      };\n      if (pair.bodyB.label.startsWith(\"player\") && pair.bodyA.label.startsWith(\"ground\")) {\n        Body.setStatic(pair.bodyB, true);\n        //Body.setPosition(pair.bodyB, {x: pair.bodyB.position.x-15, y: pair.bodyB.position.y});\n        Body.setAngle(pair.bodyB, 0);\n      };\n\n      ///////////////////////////////////////////\n      // handle bullet collisions\n      if (pair.bodyA.label.startsWith(\"bullet\") || pair.bodyB.label.startsWith(\"bullet\")) {\n        this.bullet.collisionCount++;\n        let bullet = pair.bodyA.label.startsWith(\"bullet\") ? pair.bodyA : pair.bodyB;\n\n        if (this.bullet.collisionCount > 2) { // first two collisions are on firing\n          this.nextTurn();\n          this.bullet = { collisionCount: 0, \n                          inFlight: false};\n          Body.scale(bullet, 5, 5);\n          World.remove(this.engine.world, [bullet]);\n\n          if (pair.bodyA.label.startsWith(\"ground-element\")) {\n            World.remove(this.engine.world, [pair.bodyA]);\n          }\n          else if (pair.bodyB.label.startsWith(\"ground-element\")) {\n            World.remove(this.engine.world, [pair.bodyB]);\n          }\n\n          if (pair.bodyA.label.startsWith(\"player\") || pair.bodyB.label.startsWith(\"player\")) {\n            //console.log (\"game over\");\n            if (pair.bodyA.label.startsWith(\"player\")) {\n              this.setState({gameOver: pair.bodyA.label});\n            };\n            if (pair.bodyB.label.startsWith(\"player\")) {\n              this.setState({gameOver: pair.bodyB.label});\n            };\n          }\n        }\n      }  \n    }\n  }\n\n  onAngleChange = (e) => {\n    let Body = MJS.Body;\n    let value = e.target.value;\n\n    if (this.state.turn === 'A') {\n      this.setState({\n        angleA: value\n      });\n      Body.setAngle(this.playerA, (value-90)*Math.PI/180);\n    } else {\n      this.setState({\n        angleB: value\n      });\n      Body.setAngle(this.playerB, (value-90)*Math.PI/180);\n    }\n    //console.log (e.target.value);\n  }\n\n  onForceChange = (e) => {\n    let value = e.target.value;\n\n    if (this.state.turn === 'A') {\n      this.setState({\n        forceA: value\n      });\n    } else {\n      this.setState({\n        forceB: value\n      });\n    }\n    //console.log (e.target.value);\n  }\n\n  onAttack = (e) => {\n    if (this.readyToAttack()) {\n      this.bullet = {collisionCount: 0, inFlight: true};\n      let Body = MJS.Body,\n          Bodies = MJS.Bodies,\n          World = MJS.World,\n          player = this.getPlayer(),\n          bullet = Bodies.circle(player.position.x, player.position.y, 5, \n                                 { isStatic: false, label: \"bullet\" });\n      Body.setVelocity(bullet, this.getVelocity());\n      World.add(this.engine.world, [bullet]);\n    }\n  }\n\n  nextTurn = () => {\n    if (this.bullet.inFlight) {\n      this.setState(function(prevState, props) {\n        return {\n          turn: (prevState.turn === 'A') ? 'B' : 'A'\n        };\n      });\n      //console.log (\"next turn\");\n    }\n  }\n\n  getPlayer = () => {\n    return ((this.state.turn === 'A') ? this.playerA : this.playerB);\n  }\n\n  getAngle = () => {\n    return ((this.state.turn === 'A') ? this.state.angleA : this.state.angleB);\n  }\n  \n  getForce = () => {\n    return ((this.state.turn === 'A') ? this.state.forceA : this.state.forceB);\n  }\n\n  getVelocity = () => {\n    return ({ x: -1*this.getForce()*Math.cos(Math.PI/180*(this.getAngle())), \n              y: -1*this.getForce()*Math.sin(Math.PI/180*(this.getAngle())) });\n  }\n\n  readyToAttack = () => {\n    // if both players are in place\n    return (this.playerA.isStatic && this.playerB.isStatic && !this.bullet.inFlight);\n  }\n\n  getRandomColor = () => {\n    let letters = '0123456789ABCDEF',\n        color = '#',\n        i;\n    for (i = 0; i < 6; i++) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n  }\n\n  // todo: one shot state, detect hit, damage, missile with mass on tip\n  // todo: switch turns, victory, end/new game\n\n  render() {\n    let angle = this.getAngle(),\n        force = this.getForce();\n    let controls;\n\n    if (this.state.gameOver === '-') {\n      controls =  <div className=\"Board-controlers\">\n                    <p className=\"Board-turn\">Player {this.state.turn}</p>\n                    <div className=\"Board-angle\">\n                      <p>Angle: {angle}</p>\n                      <input type=\"range\" name=\"angle\"\n                            min='20' max='160' step='1' \n                            value={angle} onChange={this.onAngleChange} />\n                    </div>\n                    <div className=\"Board-force\">\n                      <p>Force: {force}</p>\n                      <input type=\"range\" name=\"angle\"\n                            min='5' max='25' step='1' \n                            value={force} onChange={this.onForceChange} />\n                    </div>\n                    <input className=\"Board-attack\" type=\"image\" alt=\"attack\"\n                          onClick={this.onAttack}\n                          src=\"https://www.freeiconspng.com/uploads/nuclear-explosion-png-10.png\" />\n                  </div>;\n    } else {\n      let won = (this.state.gameOver === \"player-a\") ? \"Player B\" : \"Player A\"\n      controls = <p className=\"Board-gameover\">Game Over: {won} Won</p>;\n    }\n\n    return (\n      <div className=\"Board\">\n        <div className=\"Board-canvas\" ref={this.canvasRef}></div>\n        {controls}\n      </div>\n    );\n  }\n}\n\nexport default Board;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Board.js","/**\n* matter-js 0.14.2 by @liabru 2018-06-11\n* http://brm.io/matter-js/\n* License MIT\n*/\n\n/**\n * The MIT License (MIT)\n * \n * Copyright (c) Liam Brummitt and contributors.\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Matter = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(_dereq_,module,exports){\n/**\n* The `Matter.Body` module contains methods for creating and manipulating body models.\n* A `Matter.Body` is a rigid body that can be simulated by a `Matter.Engine`.\n* Factories for commonly used body configurations (such as rectangles, circles and other polygons) can be found in the module `Matter.Bodies`.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n\n* @class Body\n*/\n\nvar Body = {};\n\nmodule.exports = Body;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Vector = _dereq_('../geometry/Vector');\nvar Sleeping = _dereq_('../core/Sleeping');\nvar Render = _dereq_('../render/Render');\nvar Common = _dereq_('../core/Common');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Axes = _dereq_('../geometry/Axes');\n\n(function() {\n\n    Body._inertiaScale = 4;\n    Body._nextCollidingGroupId = 1;\n    Body._nextNonCollidingGroupId = -1;\n    Body._nextCategory = 0x0001;\n\n    /**\n     * Creates a new rigid body model. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * Vertices must be specified in clockwise order.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} options\n     * @return {body} body\n     */\n    Body.create = function(options) {\n        var defaults = {\n            id: Common.nextId(),\n            type: 'body',\n            label: 'Body',\n            parts: [],\n            plugin: {},\n            angle: 0,\n            vertices: Vertices.fromPath('L 0 0 L 40 0 L 40 40 L 0 40'),\n            position: { x: 0, y: 0 },\n            force: { x: 0, y: 0 },\n            torque: 0,\n            positionImpulse: { x: 0, y: 0 },\n            constraintImpulse: { x: 0, y: 0, angle: 0 },\n            totalContacts: 0,\n            speed: 0,\n            angularSpeed: 0,\n            velocity: { x: 0, y: 0 },\n            angularVelocity: 0,\n            isSensor: false,\n            isStatic: false,\n            isSleeping: false,\n            motion: 0,\n            sleepThreshold: 60,\n            density: 0.001,\n            restitution: 0,\n            friction: 0.1,\n            frictionStatic: 0.5,\n            frictionAir: 0.01,\n            collisionFilter: {\n                category: 0x0001,\n                mask: 0xFFFFFFFF,\n                group: 0\n            },\n            slop: 0.05,\n            timeScale: 1,\n            render: {\n                visible: true,\n                opacity: 1,\n                sprite: {\n                    xScale: 1,\n                    yScale: 1,\n                    xOffset: 0,\n                    yOffset: 0\n                },\n                lineWidth: 0\n            }\n        };\n\n        var body = Common.extend(defaults, options);\n\n        _initProperties(body, options);\n\n        return body;\n    };\n\n    /**\n     * Returns the next unique group index for which bodies will collide.\n     * If `isNonColliding` is `true`, returns the next unique group index for which bodies will _not_ collide.\n     * See `body.collisionFilter` for more information.\n     * @method nextGroup\n     * @param {bool} [isNonColliding=false]\n     * @return {Number} Unique group index\n     */\n    Body.nextGroup = function(isNonColliding) {\n        if (isNonColliding)\n            return Body._nextNonCollidingGroupId--;\n\n        return Body._nextCollidingGroupId++;\n    };\n\n    /**\n     * Returns the next unique category bitfield (starting after the initial default category `0x0001`).\n     * There are 32 available. See `body.collisionFilter` for more information.\n     * @method nextCategory\n     * @return {Number} Unique category bitfield\n     */\n    Body.nextCategory = function() {\n        Body._nextCategory = Body._nextCategory << 1;\n        return Body._nextCategory;\n    };\n\n    /**\n     * Initialises body properties.\n     * @method _initProperties\n     * @private\n     * @param {body} body\n     * @param {} [options]\n     */\n    var _initProperties = function(body, options) {\n        options = options || {};\n\n        // init required properties (order is important)\n        Body.set(body, {\n            bounds: body.bounds || Bounds.create(body.vertices),\n            positionPrev: body.positionPrev || Vector.clone(body.position),\n            anglePrev: body.anglePrev || body.angle,\n            vertices: body.vertices,\n            parts: body.parts || [body],\n            isStatic: body.isStatic,\n            isSleeping: body.isSleeping,\n            parent: body.parent || body\n        });\n\n        Vertices.rotate(body.vertices, body.angle, body.position);\n        Axes.rotate(body.axes, body.angle);\n        Bounds.update(body.bounds, body.vertices, body.velocity);\n\n        // allow options to override the automatically calculated properties\n        Body.set(body, {\n            axes: options.axes || body.axes,\n            area: options.area || body.area,\n            mass: options.mass || body.mass,\n            inertia: options.inertia || body.inertia\n        });\n\n        // render properties\n        var defaultFillStyle = (body.isStatic ? '#2e2b44' : Common.choose(['#006BA6', '#0496FF', '#FFBC42', '#D81159', '#8F2D56'])),\n            defaultStrokeStyle = '#000';\n        body.render.fillStyle = body.render.fillStyle || defaultFillStyle;\n        body.render.strokeStyle = body.render.strokeStyle || defaultStrokeStyle;\n        body.render.sprite.xOffset += -(body.bounds.min.x - body.position.x) / (body.bounds.max.x - body.bounds.min.x);\n        body.render.sprite.yOffset += -(body.bounds.min.y - body.position.y) / (body.bounds.max.y - body.bounds.min.y);\n    };\n\n    /**\n     * Given a property and a value (or map of), sets the property(s) on the body, using the appropriate setter functions if they exist.\n     * Prefer to use the actual setter functions in performance critical situations.\n     * @method set\n     * @param {body} body\n     * @param {} settings A property name (or map of properties and values) to set on the body.\n     * @param {} value The value to set if `settings` is a single property name.\n     */\n    Body.set = function(body, settings, value) {\n        var property;\n\n        if (typeof settings === 'string') {\n            property = settings;\n            settings = {};\n            settings[property] = value;\n        }\n\n        for (property in settings) {\n            value = settings[property];\n\n            if (!settings.hasOwnProperty(property))\n                continue;\n\n            switch (property) {\n\n            case 'isStatic':\n                Body.setStatic(body, value);\n                break;\n            case 'isSleeping':\n                Sleeping.set(body, value);\n                break;\n            case 'mass':\n                Body.setMass(body, value);\n                break;\n            case 'density':\n                Body.setDensity(body, value);\n                break;\n            case 'inertia':\n                Body.setInertia(body, value);\n                break;\n            case 'vertices':\n                Body.setVertices(body, value);\n                break;\n            case 'position':\n                Body.setPosition(body, value);\n                break;\n            case 'angle':\n                Body.setAngle(body, value);\n                break;\n            case 'velocity':\n                Body.setVelocity(body, value);\n                break;\n            case 'angularVelocity':\n                Body.setAngularVelocity(body, value);\n                break;\n            case 'parts':\n                Body.setParts(body, value);\n                break;\n            default:\n                body[property] = value;\n\n            }\n        }\n    };\n\n    /**\n     * Sets the body as static, including isStatic flag and setting mass and inertia to Infinity.\n     * @method setStatic\n     * @param {body} body\n     * @param {bool} isStatic\n     */\n    Body.setStatic = function(body, isStatic) {\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            part.isStatic = isStatic;\n\n            if (isStatic) {\n                part._original = {\n                    restitution: part.restitution,\n                    friction: part.friction,\n                    mass: part.mass,\n                    inertia: part.inertia,\n                    density: part.density,\n                    inverseMass: part.inverseMass,\n                    inverseInertia: part.inverseInertia\n                };\n\n                part.restitution = 0;\n                part.friction = 1;\n                part.mass = part.inertia = part.density = Infinity;\n                part.inverseMass = part.inverseInertia = 0;\n\n                part.positionPrev.x = part.position.x;\n                part.positionPrev.y = part.position.y;\n                part.anglePrev = part.angle;\n                part.angularVelocity = 0;\n                part.speed = 0;\n                part.angularSpeed = 0;\n                part.motion = 0;\n            } else if (part._original) {\n                part.restitution = part._original.restitution;\n                part.friction = part._original.friction;\n                part.mass = part._original.mass;\n                part.inertia = part._original.inertia;\n                part.density = part._original.density;\n                part.inverseMass = part._original.inverseMass;\n                part.inverseInertia = part._original.inverseInertia;\n\n                delete part._original;\n            }\n        }\n    };\n\n    /**\n     * Sets the mass of the body. Inverse mass, density and inertia are automatically updated to reflect the change.\n     * @method setMass\n     * @param {body} body\n     * @param {number} mass\n     */\n    Body.setMass = function(body, mass) {\n        var moment = body.inertia / (body.mass / 6);\n        body.inertia = moment * (mass / 6);\n        body.inverseInertia = 1 / body.inertia;\n\n        body.mass = mass;\n        body.inverseMass = 1 / body.mass;\n        body.density = body.mass / body.area;\n    };\n\n    /**\n     * Sets the density of the body. Mass and inertia are automatically updated to reflect the change.\n     * @method setDensity\n     * @param {body} body\n     * @param {number} density\n     */\n    Body.setDensity = function(body, density) {\n        Body.setMass(body, density * body.area);\n        body.density = density;\n    };\n\n    /**\n     * Sets the moment of inertia (i.e. second moment of area) of the body of the body. \n     * Inverse inertia is automatically updated to reflect the change. Mass is not changed.\n     * @method setInertia\n     * @param {body} body\n     * @param {number} inertia\n     */\n    Body.setInertia = function(body, inertia) {\n        body.inertia = inertia;\n        body.inverseInertia = 1 / body.inertia;\n    };\n\n    /**\n     * Sets the body's vertices and updates body properties accordingly, including inertia, area and mass (with respect to `body.density`).\n     * Vertices will be automatically transformed to be orientated around their centre of mass as the origin.\n     * They are then automatically translated to world space based on `body.position`.\n     *\n     * The `vertices` argument should be passed as an array of `Matter.Vector` points (or a `Matter.Vertices` array).\n     * Vertices must form a convex hull, concave hulls are not supported.\n     *\n     * @method setVertices\n     * @param {body} body\n     * @param {vector[]} vertices\n     */\n    Body.setVertices = function(body, vertices) {\n        // change vertices\n        if (vertices[0].body === body) {\n            body.vertices = vertices;\n        } else {\n            body.vertices = Vertices.create(vertices, body);\n        }\n\n        // update properties\n        body.axes = Axes.fromVertices(body.vertices);\n        body.area = Vertices.area(body.vertices);\n        Body.setMass(body, body.density * body.area);\n\n        // orient vertices around the centre of mass at origin (0, 0)\n        var centre = Vertices.centre(body.vertices);\n        Vertices.translate(body.vertices, centre, -1);\n\n        // update inertia while vertices are at origin (0, 0)\n        Body.setInertia(body, Body._inertiaScale * Vertices.inertia(body.vertices, body.mass));\n\n        // update geometry\n        Vertices.translate(body.vertices, body.position);\n        Bounds.update(body.bounds, body.vertices, body.velocity);\n    };\n\n    /**\n     * Sets the parts of the `body` and updates mass, inertia and centroid.\n     * Each part will have its parent set to `body`.\n     * By default the convex hull will be automatically computed and set on `body`, unless `autoHull` is set to `false.`\n     * Note that this method will ensure that the first part in `body.parts` will always be the `body`.\n     * @method setParts\n     * @param {body} body\n     * @param [body] parts\n     * @param {bool} [autoHull=true]\n     */\n    Body.setParts = function(body, parts, autoHull) {\n        var i;\n\n        // add all the parts, ensuring that the first part is always the parent body\n        parts = parts.slice(0);\n        body.parts.length = 0;\n        body.parts.push(body);\n        body.parent = body;\n\n        for (i = 0; i < parts.length; i++) {\n            var part = parts[i];\n            if (part !== body) {\n                part.parent = body;\n                body.parts.push(part);\n            }\n        }\n\n        if (body.parts.length === 1)\n            return;\n\n        autoHull = typeof autoHull !== 'undefined' ? autoHull : true;\n\n        // find the convex hull of all parts to set on the parent body\n        if (autoHull) {\n            var vertices = [];\n            for (i = 0; i < parts.length; i++) {\n                vertices = vertices.concat(parts[i].vertices);\n            }\n\n            Vertices.clockwiseSort(vertices);\n\n            var hull = Vertices.hull(vertices),\n                hullCentre = Vertices.centre(hull);\n\n            Body.setVertices(body, hull);\n            Vertices.translate(body.vertices, hullCentre);\n        }\n\n        // sum the properties of all compound parts of the parent body\n        var total = Body._totalProperties(body);\n\n        body.area = total.area;\n        body.parent = body;\n        body.position.x = total.centre.x;\n        body.position.y = total.centre.y;\n        body.positionPrev.x = total.centre.x;\n        body.positionPrev.y = total.centre.y;\n\n        Body.setMass(body, total.mass);\n        Body.setInertia(body, total.inertia);\n        Body.setPosition(body, total.centre);\n    };\n\n    /**\n     * Sets the position of the body instantly. Velocity, angle, force etc. are unchanged.\n     * @method setPosition\n     * @param {body} body\n     * @param {vector} position\n     */\n    Body.setPosition = function(body, position) {\n        var delta = Vector.sub(position, body.position);\n        body.positionPrev.x += delta.x;\n        body.positionPrev.y += delta.y;\n\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            part.position.x += delta.x;\n            part.position.y += delta.y;\n            Vertices.translate(part.vertices, delta);\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n        }\n    };\n\n    /**\n     * Sets the angle of the body instantly. Angular velocity, position, force etc. are unchanged.\n     * @method setAngle\n     * @param {body} body\n     * @param {number} angle\n     */\n    Body.setAngle = function(body, angle) {\n        var delta = angle - body.angle;\n        body.anglePrev += delta;\n\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            part.angle += delta;\n            Vertices.rotate(part.vertices, delta, body.position);\n            Axes.rotate(part.axes, delta);\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n            if (i > 0) {\n                Vector.rotateAbout(part.position, delta, body.position, part.position);\n            }\n        }\n    };\n\n    /**\n     * Sets the linear velocity of the body instantly. Position, angle, force etc. are unchanged. See also `Body.applyForce`.\n     * @method setVelocity\n     * @param {body} body\n     * @param {vector} velocity\n     */\n    Body.setVelocity = function(body, velocity) {\n        body.positionPrev.x = body.position.x - velocity.x;\n        body.positionPrev.y = body.position.y - velocity.y;\n        body.velocity.x = velocity.x;\n        body.velocity.y = velocity.y;\n        body.speed = Vector.magnitude(body.velocity);\n    };\n\n    /**\n     * Sets the angular velocity of the body instantly. Position, angle, force etc. are unchanged. See also `Body.applyForce`.\n     * @method setAngularVelocity\n     * @param {body} body\n     * @param {number} velocity\n     */\n    Body.setAngularVelocity = function(body, velocity) {\n        body.anglePrev = body.angle - velocity;\n        body.angularVelocity = velocity;\n        body.angularSpeed = Math.abs(body.angularVelocity);\n    };\n\n    /**\n     * Moves a body by a given vector relative to its current position, without imparting any velocity.\n     * @method translate\n     * @param {body} body\n     * @param {vector} translation\n     */\n    Body.translate = function(body, translation) {\n        Body.setPosition(body, Vector.add(body.position, translation));\n    };\n\n    /**\n     * Rotates a body by a given angle relative to its current angle, without imparting any angular velocity.\n     * @method rotate\n     * @param {body} body\n     * @param {number} rotation\n     * @param {vector} [point]\n     */\n    Body.rotate = function(body, rotation, point) {\n        if (!point) {\n            Body.setAngle(body, body.angle + rotation);\n        } else {\n            var cos = Math.cos(rotation),\n                sin = Math.sin(rotation),\n                dx = body.position.x - point.x,\n                dy = body.position.y - point.y;\n                \n            Body.setPosition(body, {\n                x: point.x + (dx * cos - dy * sin),\n                y: point.y + (dx * sin + dy * cos)\n            });\n\n            Body.setAngle(body, body.angle + rotation);\n        }\n    };\n\n    /**\n     * Scales the body, including updating physical properties (mass, area, axes, inertia), from a world-space point (default is body centre).\n     * @method scale\n     * @param {body} body\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} [point]\n     */\n    Body.scale = function(body, scaleX, scaleY, point) {\n        var totalArea = 0,\n            totalInertia = 0;\n\n        point = point || body.position;\n\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n\n            // scale vertices\n            Vertices.scale(part.vertices, scaleX, scaleY, point);\n\n            // update properties\n            part.axes = Axes.fromVertices(part.vertices);\n            part.area = Vertices.area(part.vertices);\n            Body.setMass(part, body.density * part.area);\n\n            // update inertia (requires vertices to be at origin)\n            Vertices.translate(part.vertices, { x: -part.position.x, y: -part.position.y });\n            Body.setInertia(part, Body._inertiaScale * Vertices.inertia(part.vertices, part.mass));\n            Vertices.translate(part.vertices, { x: part.position.x, y: part.position.y });\n\n            if (i > 0) {\n                totalArea += part.area;\n                totalInertia += part.inertia;\n            }\n\n            // scale position\n            part.position.x = point.x + (part.position.x - point.x) * scaleX;\n            part.position.y = point.y + (part.position.y - point.y) * scaleY;\n\n            // update bounds\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n        }\n\n        // handle parent body\n        if (body.parts.length > 1) {\n            body.area = totalArea;\n\n            if (!body.isStatic) {\n                Body.setMass(body, body.density * totalArea);\n                Body.setInertia(body, totalInertia);\n            }\n        }\n\n        // handle circles\n        if (body.circleRadius) { \n            if (scaleX === scaleY) {\n                body.circleRadius *= scaleX;\n            } else {\n                // body is no longer a circle\n                body.circleRadius = null;\n            }\n        }\n    };\n\n    /**\n     * Performs a simulation step for the given `body`, including updating position and angle using Verlet integration.\n     * @method update\n     * @param {body} body\n     * @param {number} deltaTime\n     * @param {number} timeScale\n     * @param {number} correction\n     */\n    Body.update = function(body, deltaTime, timeScale, correction) {\n        var deltaTimeSquared = Math.pow(deltaTime * timeScale * body.timeScale, 2);\n\n        // from the previous step\n        var frictionAir = 1 - body.frictionAir * timeScale * body.timeScale,\n            velocityPrevX = body.position.x - body.positionPrev.x,\n            velocityPrevY = body.position.y - body.positionPrev.y;\n\n        // update velocity with Verlet integration\n        body.velocity.x = (velocityPrevX * frictionAir * correction) + (body.force.x / body.mass) * deltaTimeSquared;\n        body.velocity.y = (velocityPrevY * frictionAir * correction) + (body.force.y / body.mass) * deltaTimeSquared;\n\n        body.positionPrev.x = body.position.x;\n        body.positionPrev.y = body.position.y;\n        body.position.x += body.velocity.x;\n        body.position.y += body.velocity.y;\n\n        // update angular velocity with Verlet integration\n        body.angularVelocity = ((body.angle - body.anglePrev) * frictionAir * correction) + (body.torque / body.inertia) * deltaTimeSquared;\n        body.anglePrev = body.angle;\n        body.angle += body.angularVelocity;\n\n        // track speed and acceleration\n        body.speed = Vector.magnitude(body.velocity);\n        body.angularSpeed = Math.abs(body.angularVelocity);\n\n        // transform the body geometry\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n\n            Vertices.translate(part.vertices, body.velocity);\n            \n            if (i > 0) {\n                part.position.x += body.velocity.x;\n                part.position.y += body.velocity.y;\n            }\n\n            if (body.angularVelocity !== 0) {\n                Vertices.rotate(part.vertices, body.angularVelocity, body.position);\n                Axes.rotate(part.axes, body.angularVelocity);\n                if (i > 0) {\n                    Vector.rotateAbout(part.position, body.angularVelocity, body.position, part.position);\n                }\n            }\n\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n        }\n    };\n\n    /**\n     * Applies a force to a body from a given world-space position, including resulting torque.\n     * @method applyForce\n     * @param {body} body\n     * @param {vector} position\n     * @param {vector} force\n     */\n    Body.applyForce = function(body, position, force) {\n        body.force.x += force.x;\n        body.force.y += force.y;\n        var offset = { x: position.x - body.position.x, y: position.y - body.position.y };\n        body.torque += offset.x * force.y - offset.y * force.x;\n    };\n\n    /**\n     * Returns the sums of the properties of all compound parts of the parent body.\n     * @method _totalProperties\n     * @private\n     * @param {body} body\n     * @return {}\n     */\n    Body._totalProperties = function(body) {\n        // from equations at:\n        // https://ecourses.ou.edu/cgi-bin/ebook.cgi?doc=&topic=st&chap_sec=07.2&page=theory\n        // http://output.to/sideway/default.asp?qno=121100087\n\n        var properties = {\n            mass: 0,\n            area: 0,\n            inertia: 0,\n            centre: { x: 0, y: 0 }\n        };\n\n        // sum the properties of all compound parts of the parent body\n        for (var i = body.parts.length === 1 ? 0 : 1; i < body.parts.length; i++) {\n            var part = body.parts[i],\n                mass = part.mass !== Infinity ? part.mass : 1;\n\n            properties.mass += mass;\n            properties.area += part.area;\n            properties.inertia += part.inertia;\n            properties.centre = Vector.add(properties.centre, Vector.mult(part.position, mass));\n        }\n\n        properties.centre = Vector.div(properties.centre, properties.mass);\n\n        return properties;\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired when a body starts sleeping (where `this` is the body).\n    *\n    * @event sleepStart\n    * @this {body} The body that has started sleeping\n    * @param {} event An event object\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a body ends sleeping (where `this` is the body).\n    *\n    * @event sleepEnd\n    * @this {body} The body that has ended sleeping\n    * @param {} event An event object\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` uniquely identifying number generated in `Body.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"body\"\n     * @readOnly\n     */\n\n    /**\n     * An arbitrary `String` name to help the user identify and manage bodies.\n     *\n     * @property label\n     * @type string\n     * @default \"Body\"\n     */\n\n    /**\n     * An array of bodies that make up this body. \n     * The first body in the array must always be a self reference to the current body instance.\n     * All bodies in the `parts` array together form a single rigid compound body.\n     * Parts are allowed to overlap, have gaps or holes or even form concave bodies.\n     * Parts themselves should never be added to a `World`, only the parent body should be.\n     * Use `Body.setParts` when setting parts to ensure correct updates of all properties.\n     *\n     * @property parts\n     * @type body[]\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n    /**\n     * A self reference if the body is _not_ a part of another body.\n     * Otherwise this is a reference to the body that this is a part of.\n     * See `body.parts`.\n     *\n     * @property parent\n     * @type body\n     */\n\n    /**\n     * A `Number` specifying the angle of the body, in radians.\n     *\n     * @property angle\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * An array of `Vector` objects that specify the convex hull of the rigid body.\n     * These should be provided about the origin `(0, 0)`. E.g.\n     *\n     *     [{ x: 0, y: 0 }, { x: 25, y: 50 }, { x: 50, y: 0 }]\n     *\n     * When passed via `Body.create`, the vertices are translated relative to `body.position` (i.e. world-space, and constantly updated by `Body.update` during simulation).\n     * The `Vector` objects are also augmented with additional properties required for efficient collision detection. \n     *\n     * Other properties such as `inertia` and `bounds` are automatically calculated from the passed vertices (unless provided via `options`).\n     * Concave hulls are not currently supported. The module `Matter.Vertices` contains useful methods for working with vertices.\n     *\n     * @property vertices\n     * @type vector[]\n     */\n\n    /**\n     * A `Vector` that specifies the current world-space position of the body.\n     *\n     * @property position\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Vector` that specifies the force to apply in the current step. It is zeroed after every `Body.update`. See also `Body.applyForce`.\n     *\n     * @property force\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Number` that specifies the torque (turning force) to apply in the current step. It is zeroed after every `Body.update`.\n     *\n     * @property torque\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that _measures_ the current speed of the body after the last `Body.update`. It is read-only and always positive (it's the magnitude of `body.velocity`).\n     *\n     * @readOnly\n     * @property speed\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that _measures_ the current angular speed of the body after the last `Body.update`. It is read-only and always positive (it's the magnitude of `body.angularVelocity`).\n     *\n     * @readOnly\n     * @property angularSpeed\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Vector` that _measures_ the current velocity of the body after the last `Body.update`. It is read-only. \n     * If you need to modify a body's velocity directly, you should either apply a force or simply change the body's `position` (as the engine uses position-Verlet integration).\n     *\n     * @readOnly\n     * @property velocity\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Number` that _measures_ the current angular velocity of the body after the last `Body.update`. It is read-only. \n     * If you need to modify a body's angular velocity directly, you should apply a torque or simply change the body's `angle` (as the engine uses position-Verlet integration).\n     *\n     * @readOnly\n     * @property angularVelocity\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A flag that indicates whether a body is considered static. A static body can never change position or angle and is completely fixed.\n     * If you need to set a body as static after its creation, you should use `Body.setStatic` as this requires more than just setting this flag.\n     *\n     * @property isStatic\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag that indicates whether a body is a sensor. Sensor triggers collision events, but doesn't react with colliding body physically.\n     *\n     * @property isSensor\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag that indicates whether the body is considered sleeping. A sleeping body acts similar to a static body, except it is only temporary and can be awoken.\n     * If you need to set a body as sleeping, you should use `Sleeping.set` as this requires more than just setting this flag.\n     *\n     * @property isSleeping\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A `Number` that _measures_ the amount of movement a body currently has (a combination of `speed` and `angularSpeed`). It is read-only and always positive.\n     * It is used and updated by the `Matter.Sleeping` module during simulation to decide if a body has come to rest.\n     *\n     * @readOnly\n     * @property motion\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that defines the number of updates in which this body must have near-zero velocity before it is set as sleeping by the `Matter.Sleeping` module (if sleeping is enabled by the engine).\n     *\n     * @property sleepThreshold\n     * @type number\n     * @default 60\n     */\n\n    /**\n     * A `Number` that defines the density of the body, that is its mass per unit area.\n     * If you pass the density via `Body.create` the `mass` property is automatically calculated for you based on the size (area) of the object.\n     * This is generally preferable to simply setting mass and allows for more intuitive definition of materials (e.g. rock has a higher density than wood).\n     *\n     * @property density\n     * @type number\n     * @default 0.001\n     */\n\n    /**\n     * A `Number` that defines the mass of the body, although it may be more appropriate to specify the `density` property instead.\n     * If you modify this value, you must also modify the `body.inverseMass` property (`1 / mass`).\n     *\n     * @property mass\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the inverse mass of the body (`1 / mass`).\n     * If you modify this value, you must also modify the `body.mass` property.\n     *\n     * @property inverseMass\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the moment of inertia (i.e. second moment of area) of the body.\n     * It is automatically calculated from the given convex hull (`vertices` array) and density in `Body.create`.\n     * If you modify this value, you must also modify the `body.inverseInertia` property (`1 / inertia`).\n     *\n     * @property inertia\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the inverse moment of inertia of the body (`1 / inertia`).\n     * If you modify this value, you must also modify the `body.inertia` property.\n     *\n     * @property inverseInertia\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the restitution (elasticity) of the body. The value is always positive and is in the range `(0, 1)`.\n     * A value of `0` means collisions may be perfectly inelastic and no bouncing may occur. \n     * A value of `0.8` means the body may bounce back with approximately 80% of its kinetic energy.\n     * Note that collision response is based on _pairs_ of bodies, and that `restitution` values are _combined_ with the following formula:\n     *\n     *     Math.max(bodyA.restitution, bodyB.restitution)\n     *\n     * @property restitution\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that defines the friction of the body. The value is always positive and is in the range `(0, 1)`.\n     * A value of `0` means that the body may slide indefinitely.\n     * A value of `1` means the body may come to a stop almost instantly after a force is applied.\n     *\n     * The effects of the value may be non-linear. \n     * High values may be unstable depending on the body.\n     * The engine uses a Coulomb friction model including static and kinetic friction.\n     * Note that collision response is based on _pairs_ of bodies, and that `friction` values are _combined_ with the following formula:\n     *\n     *     Math.min(bodyA.friction, bodyB.friction)\n     *\n     * @property friction\n     * @type number\n     * @default 0.1\n     */\n\n    /**\n     * A `Number` that defines the static friction of the body (in the Coulomb friction model). \n     * A value of `0` means the body will never 'stick' when it is nearly stationary and only dynamic `friction` is used.\n     * The higher the value (e.g. `10`), the more force it will take to initially get the body moving when nearly stationary.\n     * This value is multiplied with the `friction` property to make it easier to change `friction` and maintain an appropriate amount of static friction.\n     *\n     * @property frictionStatic\n     * @type number\n     * @default 0.5\n     */\n\n    /**\n     * A `Number` that defines the air friction of the body (air resistance). \n     * A value of `0` means the body will never slow as it moves through space.\n     * The higher the value, the faster a body slows when moving through space.\n     * The effects of the value are non-linear. \n     *\n     * @property frictionAir\n     * @type number\n     * @default 0.01\n     */\n\n    /**\n     * An `Object` that specifies the collision filtering properties of this body.\n     *\n     * Collisions between two bodies will obey the following rules:\n     * - If the two bodies have the same non-zero value of `collisionFilter.group`,\n     *   they will always collide if the value is positive, and they will never collide\n     *   if the value is negative.\n     * - If the two bodies have different values of `collisionFilter.group` or if one\n     *   (or both) of the bodies has a value of 0, then the category/mask rules apply as follows:\n     *\n     * Each body belongs to a collision category, given by `collisionFilter.category`. This\n     * value is used as a bit field and the category should have only one bit set, meaning that\n     * the value of this property is a power of two in the range [1, 2^31]. Thus, there are 32\n     * different collision categories available.\n     *\n     * Each body also defines a collision bitmask, given by `collisionFilter.mask` which specifies\n     * the categories it collides with (the value is the bitwise AND value of all these categories).\n     *\n     * Using the category/mask rules, two bodies `A` and `B` collide if each includes the other's\n     * category in its mask, i.e. `(categoryA & maskB) !== 0` and `(categoryB & maskA) !== 0`\n     * are both true.\n     *\n     * @property collisionFilter\n     * @type object\n     */\n\n    /**\n     * An Integer `Number`, that specifies the collision group this body belongs to.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.group\n     * @type object\n     * @default 0\n     */\n\n    /**\n     * A bit field that specifies the collision category this body belongs to.\n     * The category value should have only one bit set, for example `0x0001`.\n     * This means there are up to 32 unique collision categories available.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.category\n     * @type object\n     * @default 1\n     */\n\n    /**\n     * A bit mask that specifies the collision categories this body may collide with.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.mask\n     * @type object\n     * @default -1\n     */\n\n    /**\n     * A `Number` that specifies a tolerance on how far a body is allowed to 'sink' or rotate into other bodies.\n     * Avoid changing this value unless you understand the purpose of `slop` in physics engines.\n     * The default should generally suffice, although very large bodies may require larger values for stable stacking.\n     *\n     * @property slop\n     * @type number\n     * @default 0.05\n     */\n\n    /**\n     * A `Number` that allows per-body time scaling, e.g. a force-field where bodies inside are in slow-motion, while others are at full speed.\n     *\n     * @property timeScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * An `Object` that defines the rendering properties to be consumed by the module `Matter.Render`.\n     *\n     * @property render\n     * @type object\n     */\n\n    /**\n     * A flag that indicates if the body should be rendered.\n     *\n     * @property render.visible\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * Sets the opacity to use when rendering.\n     *\n     * @property render.opacity\n     * @type number\n     * @default 1\n    */\n\n    /**\n     * An `Object` that defines the sprite properties to use when rendering, if any.\n     *\n     * @property render.sprite\n     * @type object\n     */\n\n    /**\n     * An `String` that defines the path to the image to use as the sprite texture, if any.\n     *\n     * @property render.sprite.texture\n     * @type string\n     */\n     \n    /**\n     * A `Number` that defines the scaling in the x-axis for the sprite, if any.\n     *\n     * @property render.sprite.xScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A `Number` that defines the scaling in the y-axis for the sprite, if any.\n     *\n     * @property render.sprite.yScale\n     * @type number\n     * @default 1\n     */\n\n     /**\n      * A `Number` that defines the offset in the x-axis for the sprite (normalised by texture width).\n      *\n      * @property render.sprite.xOffset\n      * @type number\n      * @default 0\n      */\n\n     /**\n      * A `Number` that defines the offset in the y-axis for the sprite (normalised by texture height).\n      *\n      * @property render.sprite.yOffset\n      * @type number\n      * @default 0\n      */\n\n    /**\n     * A `Number` that defines the line width to use when rendering the body outline (if a sprite is not defined).\n     * A value of `0` means no outline will be rendered.\n     *\n     * @property render.lineWidth\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `String` that defines the fill style to use when rendering the body (if a sprite is not defined).\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.fillStyle\n     * @type string\n     * @default a random colour\n     */\n\n    /**\n     * A `String` that defines the stroke style to use when rendering the body outline (if a sprite is not defined).\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.strokeStyle\n     * @type string\n     * @default a random colour\n     */\n\n    /**\n     * An array of unique axis vectors (edge normals) used for collision detection.\n     * These are automatically calculated from the given convex hull (`vertices` array) in `Body.create`.\n     * They are constantly updated by `Body.update` during the simulation.\n     *\n     * @property axes\n     * @type vector[]\n     */\n     \n    /**\n     * A `Number` that _measures_ the area of the body's convex hull, calculated at creation by `Body.create`.\n     *\n     * @property area\n     * @type string\n     * @default \n     */\n\n    /**\n     * A `Bounds` object that defines the AABB region for the body.\n     * It is automatically calculated from the given convex hull (`vertices` array) in `Body.create` and constantly updated by `Body.update` during simulation.\n     *\n     * @property bounds\n     * @type bounds\n     */\n\n})();\n\n},{\"../core/Common\":14,\"../core/Sleeping\":22,\"../geometry/Axes\":25,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29,\"../render/Render\":31}],2:[function(_dereq_,module,exports){\n/**\n* The `Matter.Composite` module contains methods for creating and manipulating composite bodies.\n* A composite body is a collection of `Matter.Body`, `Matter.Constraint` and other `Matter.Composite`, therefore composites form a tree structure.\n* It is important to use the functions in this module to modify composites, rather than directly modifying their properties.\n* Note that the `Matter.World` object is also a type of `Matter.Composite` and as such all composite methods here can also operate on a `Matter.World`.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Composite\n*/\n\nvar Composite = {};\n\nmodule.exports = Composite;\n\nvar Events = _dereq_('../core/Events');\nvar Common = _dereq_('../core/Common');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Body = _dereq_('./Body');\n\n(function() {\n\n    /**\n     * Creates a new composite. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properites section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} [options]\n     * @return {composite} A new composite\n     */\n    Composite.create = function(options) {\n        return Common.extend({ \n            id: Common.nextId(),\n            type: 'composite',\n            parent: null,\n            isModified: false,\n            bodies: [], \n            constraints: [], \n            composites: [],\n            label: 'Composite',\n            plugin: {}\n        }, options);\n    };\n\n    /**\n     * Sets the composite's `isModified` flag. \n     * If `updateParents` is true, all parents will be set (default: false).\n     * If `updateChildren` is true, all children will be set (default: false).\n     * @method setModified\n     * @param {composite} composite\n     * @param {boolean} isModified\n     * @param {boolean} [updateParents=false]\n     * @param {boolean} [updateChildren=false]\n     */\n    Composite.setModified = function(composite, isModified, updateParents, updateChildren) {\n        composite.isModified = isModified;\n\n        if (updateParents && composite.parent) {\n            Composite.setModified(composite.parent, isModified, updateParents, updateChildren);\n        }\n\n        if (updateChildren) {\n            for(var i = 0; i < composite.composites.length; i++) {\n                var childComposite = composite.composites[i];\n                Composite.setModified(childComposite, isModified, updateParents, updateChildren);\n            }\n        }\n    };\n\n    /**\n     * Generic add function. Adds one or many body(s), constraint(s) or a composite(s) to the given composite.\n     * Triggers `beforeAdd` and `afterAdd` events on the `composite`.\n     * @method add\n     * @param {composite} composite\n     * @param {} object\n     * @return {composite} The original composite with the objects added\n     */\n    Composite.add = function(composite, object) {\n        var objects = [].concat(object);\n\n        Events.trigger(composite, 'beforeAdd', { object: object });\n\n        for (var i = 0; i < objects.length; i++) {\n            var obj = objects[i];\n\n            switch (obj.type) {\n\n            case 'body':\n                // skip adding compound parts\n                if (obj.parent !== obj) {\n                    Common.warn('Composite.add: skipped adding a compound body part (you must add its parent instead)');\n                    break;\n                }\n\n                Composite.addBody(composite, obj);\n                break;\n            case 'constraint':\n                Composite.addConstraint(composite, obj);\n                break;\n            case 'composite':\n                Composite.addComposite(composite, obj);\n                break;\n            case 'mouseConstraint':\n                Composite.addConstraint(composite, obj.constraint);\n                break;\n\n            }\n        }\n\n        Events.trigger(composite, 'afterAdd', { object: object });\n\n        return composite;\n    };\n\n    /**\n     * Generic remove function. Removes one or many body(s), constraint(s) or a composite(s) to the given composite.\n     * Optionally searching its children recursively.\n     * Triggers `beforeRemove` and `afterRemove` events on the `composite`.\n     * @method remove\n     * @param {composite} composite\n     * @param {} object\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the objects removed\n     */\n    Composite.remove = function(composite, object, deep) {\n        var objects = [].concat(object);\n\n        Events.trigger(composite, 'beforeRemove', { object: object });\n\n        for (var i = 0; i < objects.length; i++) {\n            var obj = objects[i];\n\n            switch (obj.type) {\n\n            case 'body':\n                Composite.removeBody(composite, obj, deep);\n                break;\n            case 'constraint':\n                Composite.removeConstraint(composite, obj, deep);\n                break;\n            case 'composite':\n                Composite.removeComposite(composite, obj, deep);\n                break;\n            case 'mouseConstraint':\n                Composite.removeConstraint(composite, obj.constraint);\n                break;\n\n            }\n        }\n\n        Events.trigger(composite, 'afterRemove', { object: object });\n\n        return composite;\n    };\n\n    /**\n     * Adds a composite to the given composite.\n     * @private\n     * @method addComposite\n     * @param {composite} compositeA\n     * @param {composite} compositeB\n     * @return {composite} The original compositeA with the objects from compositeB added\n     */\n    Composite.addComposite = function(compositeA, compositeB) {\n        compositeA.composites.push(compositeB);\n        compositeB.parent = compositeA;\n        Composite.setModified(compositeA, true, true, false);\n        return compositeA;\n    };\n\n    /**\n     * Removes a composite from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeComposite\n     * @param {composite} compositeA\n     * @param {composite} compositeB\n     * @param {boolean} [deep=false]\n     * @return {composite} The original compositeA with the composite removed\n     */\n    Composite.removeComposite = function(compositeA, compositeB, deep) {\n        var position = Common.indexOf(compositeA.composites, compositeB);\n        if (position !== -1) {\n            Composite.removeCompositeAt(compositeA, position);\n            Composite.setModified(compositeA, true, true, false);\n        }\n\n        if (deep) {\n            for (var i = 0; i < compositeA.composites.length; i++){\n                Composite.removeComposite(compositeA.composites[i], compositeB, true);\n            }\n        }\n\n        return compositeA;\n    };\n\n    /**\n     * Removes a composite from the given composite.\n     * @private\n     * @method removeCompositeAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the composite removed\n     */\n    Composite.removeCompositeAt = function(composite, position) {\n        composite.composites.splice(position, 1);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Adds a body to the given composite.\n     * @private\n     * @method addBody\n     * @param {composite} composite\n     * @param {body} body\n     * @return {composite} The original composite with the body added\n     */\n    Composite.addBody = function(composite, body) {\n        composite.bodies.push(body);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Removes a body from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeBody\n     * @param {composite} composite\n     * @param {body} body\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the body removed\n     */\n    Composite.removeBody = function(composite, body, deep) {\n        var position = Common.indexOf(composite.bodies, body);\n        if (position !== -1) {\n            Composite.removeBodyAt(composite, position);\n            Composite.setModified(composite, true, true, false);\n        }\n\n        if (deep) {\n            for (var i = 0; i < composite.composites.length; i++){\n                Composite.removeBody(composite.composites[i], body, true);\n            }\n        }\n\n        return composite;\n    };\n\n    /**\n     * Removes a body from the given composite.\n     * @private\n     * @method removeBodyAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the body removed\n     */\n    Composite.removeBodyAt = function(composite, position) {\n        composite.bodies.splice(position, 1);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Adds a constraint to the given composite.\n     * @private\n     * @method addConstraint\n     * @param {composite} composite\n     * @param {constraint} constraint\n     * @return {composite} The original composite with the constraint added\n     */\n    Composite.addConstraint = function(composite, constraint) {\n        composite.constraints.push(constraint);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Removes a constraint from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeConstraint\n     * @param {composite} composite\n     * @param {constraint} constraint\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the constraint removed\n     */\n    Composite.removeConstraint = function(composite, constraint, deep) {\n        var position = Common.indexOf(composite.constraints, constraint);\n        if (position !== -1) {\n            Composite.removeConstraintAt(composite, position);\n        }\n\n        if (deep) {\n            for (var i = 0; i < composite.composites.length; i++){\n                Composite.removeConstraint(composite.composites[i], constraint, true);\n            }\n        }\n\n        return composite;\n    };\n\n    /**\n     * Removes a body from the given composite.\n     * @private\n     * @method removeConstraintAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the constraint removed\n     */\n    Composite.removeConstraintAt = function(composite, position) {\n        composite.constraints.splice(position, 1);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Removes all bodies, constraints and composites from the given composite.\n     * Optionally clearing its children recursively.\n     * @method clear\n     * @param {composite} composite\n     * @param {boolean} keepStatic\n     * @param {boolean} [deep=false]\n     */\n    Composite.clear = function(composite, keepStatic, deep) {\n        if (deep) {\n            for (var i = 0; i < composite.composites.length; i++){\n                Composite.clear(composite.composites[i], keepStatic, true);\n            }\n        }\n        \n        if (keepStatic) {\n            composite.bodies = composite.bodies.filter(function(body) { return body.isStatic; });\n        } else {\n            composite.bodies.length = 0;\n        }\n\n        composite.constraints.length = 0;\n        composite.composites.length = 0;\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Returns all bodies in the given composite, including all bodies in its children, recursively.\n     * @method allBodies\n     * @param {composite} composite\n     * @return {body[]} All the bodies\n     */\n    Composite.allBodies = function(composite) {\n        var bodies = [].concat(composite.bodies);\n\n        for (var i = 0; i < composite.composites.length; i++)\n            bodies = bodies.concat(Composite.allBodies(composite.composites[i]));\n\n        return bodies;\n    };\n\n    /**\n     * Returns all constraints in the given composite, including all constraints in its children, recursively.\n     * @method allConstraints\n     * @param {composite} composite\n     * @return {constraint[]} All the constraints\n     */\n    Composite.allConstraints = function(composite) {\n        var constraints = [].concat(composite.constraints);\n\n        for (var i = 0; i < composite.composites.length; i++)\n            constraints = constraints.concat(Composite.allConstraints(composite.composites[i]));\n\n        return constraints;\n    };\n\n    /**\n     * Returns all composites in the given composite, including all composites in its children, recursively.\n     * @method allComposites\n     * @param {composite} composite\n     * @return {composite[]} All the composites\n     */\n    Composite.allComposites = function(composite) {\n        var composites = [].concat(composite.composites);\n\n        for (var i = 0; i < composite.composites.length; i++)\n            composites = composites.concat(Composite.allComposites(composite.composites[i]));\n\n        return composites;\n    };\n\n    /**\n     * Searches the composite recursively for an object matching the type and id supplied, null if not found.\n     * @method get\n     * @param {composite} composite\n     * @param {number} id\n     * @param {string} type\n     * @return {object} The requested object, if found\n     */\n    Composite.get = function(composite, id, type) {\n        var objects,\n            object;\n\n        switch (type) {\n        case 'body':\n            objects = Composite.allBodies(composite);\n            break;\n        case 'constraint':\n            objects = Composite.allConstraints(composite);\n            break;\n        case 'composite':\n            objects = Composite.allComposites(composite).concat(composite);\n            break;\n        }\n\n        if (!objects)\n            return null;\n\n        object = objects.filter(function(object) { \n            return object.id.toString() === id.toString(); \n        });\n\n        return object.length === 0 ? null : object[0];\n    };\n\n    /**\n     * Moves the given object(s) from compositeA to compositeB (equal to a remove followed by an add).\n     * @method move\n     * @param {compositeA} compositeA\n     * @param {object[]} objects\n     * @param {compositeB} compositeB\n     * @return {composite} Returns compositeA\n     */\n    Composite.move = function(compositeA, objects, compositeB) {\n        Composite.remove(compositeA, objects);\n        Composite.add(compositeB, objects);\n        return compositeA;\n    };\n\n    /**\n     * Assigns new ids for all objects in the composite, recursively.\n     * @method rebase\n     * @param {composite} composite\n     * @return {composite} Returns composite\n     */\n    Composite.rebase = function(composite) {\n        var objects = Composite.allBodies(composite)\n                        .concat(Composite.allConstraints(composite))\n                        .concat(Composite.allComposites(composite));\n\n        for (var i = 0; i < objects.length; i++) {\n            objects[i].id = Common.nextId();\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Translates all children in the composite by a given vector relative to their current positions, \n     * without imparting any velocity.\n     * @method translate\n     * @param {composite} composite\n     * @param {vector} translation\n     * @param {bool} [recursive=true]\n     */\n    Composite.translate = function(composite, translation, recursive) {\n        var bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\n        for (var i = 0; i < bodies.length; i++) {\n            Body.translate(bodies[i], translation);\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Rotates all children in the composite by a given angle about the given point, without imparting any angular velocity.\n     * @method rotate\n     * @param {composite} composite\n     * @param {number} rotation\n     * @param {vector} point\n     * @param {bool} [recursive=true]\n     */\n    Composite.rotate = function(composite, rotation, point, recursive) {\n        var cos = Math.cos(rotation),\n            sin = Math.sin(rotation),\n            bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                dx = body.position.x - point.x,\n                dy = body.position.y - point.y;\n                \n            Body.setPosition(body, {\n                x: point.x + (dx * cos - dy * sin),\n                y: point.y + (dx * sin + dy * cos)\n            });\n\n            Body.rotate(body, rotation);\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Scales all children in the composite, including updating physical properties (mass, area, axes, inertia), from a world-space point.\n     * @method scale\n     * @param {composite} composite\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} point\n     * @param {bool} [recursive=true]\n     */\n    Composite.scale = function(composite, scaleX, scaleY, point, recursive) {\n        var bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                dx = body.position.x - point.x,\n                dy = body.position.y - point.y;\n                \n            Body.setPosition(body, {\n                x: point.x + dx * scaleX,\n                y: point.y + dy * scaleY\n            });\n\n            Body.scale(body, scaleX, scaleY);\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Returns the union of the bounds of all of the composite's bodies.\n     * @method bounds\n     * @param {composite} composite The composite.\n     * @returns {bounds} The composite bounds.\n     */\n    Composite.bounds = function(composite) {\n        var bodies = Composite.allBodies(composite),\n            vertices = [];\n\n        for (var i = 0; i < bodies.length; i += 1) {\n            var body = bodies[i];\n            vertices.push(body.bounds.min, body.bounds.max);\n        }\n\n        return Bounds.create(vertices);\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired when a call to `Composite.add` is made, before objects have been added.\n    *\n    * @event beforeAdd\n    * @param {} event An event object\n    * @param {} event.object The object(s) to be added (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a call to `Composite.add` is made, after objects have been added.\n    *\n    * @event afterAdd\n    * @param {} event An event object\n    * @param {} event.object The object(s) that have been added (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a call to `Composite.remove` is made, before objects have been removed.\n    *\n    * @event beforeRemove\n    * @param {} event An event object\n    * @param {} event.object The object(s) to be removed (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a call to `Composite.remove` is made, after objects have been removed.\n    *\n    * @event afterRemove\n    * @param {} event An event object\n    * @param {} event.object The object(s) that have been removed (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` uniquely identifying number generated in `Composite.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"composite\"\n     * @readOnly\n     */\n\n    /**\n     * An arbitrary `String` name to help the user identify and manage composites.\n     *\n     * @property label\n     * @type string\n     * @default \"Composite\"\n     */\n\n    /**\n     * A flag that specifies whether the composite has been modified during the current step.\n     * Most `Matter.Composite` methods will automatically set this flag to `true` to inform the engine of changes to be handled.\n     * If you need to change it manually, you should use the `Composite.setModified` method.\n     *\n     * @property isModified\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * The `Composite` that is the parent of this composite. It is automatically managed by the `Matter.Composite` methods.\n     *\n     * @property parent\n     * @type composite\n     * @default null\n     */\n\n    /**\n     * An array of `Body` that are _direct_ children of this composite.\n     * To add or remove bodies you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allBodies` method.\n     *\n     * @property bodies\n     * @type body[]\n     * @default []\n     */\n\n    /**\n     * An array of `Constraint` that are _direct_ children of this composite.\n     * To add or remove constraints you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allConstraints` method.\n     *\n     * @property constraints\n     * @type constraint[]\n     * @default []\n     */\n\n    /**\n     * An array of `Composite` that are _direct_ children of this composite.\n     * To add or remove composites you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allComposites` method.\n     *\n     * @property composites\n     * @type composite[]\n     * @default []\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n})();\n\n},{\"../core/Common\":14,\"../core/Events\":16,\"../geometry/Bounds\":26,\"./Body\":1}],3:[function(_dereq_,module,exports){\n/**\n* The `Matter.World` module contains methods for creating and manipulating the world composite.\n* A `Matter.World` is a `Matter.Composite` body, which is a collection of `Matter.Body`, `Matter.Constraint` and other `Matter.Composite`.\n* A `Matter.World` has a few additional properties including `gravity` and `bounds`.\n* It is important to use the functions in the `Matter.Composite` module to modify the world composite, rather than directly modifying its properties.\n* There are also a few methods here that alias those in `Matter.Composite` for easier readability.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class World\n* @extends Composite\n*/\n\nvar World = {};\n\nmodule.exports = World;\n\nvar Composite = _dereq_('./Composite');\nvar Constraint = _dereq_('../constraint/Constraint');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a new world composite. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @constructor\n     * @param {} options\n     * @return {world} A new world\n     */\n    World.create = function(options) {\n        var composite = Composite.create();\n\n        var defaults = {\n            label: 'World',\n            gravity: {\n                x: 0,\n                y: 1,\n                scale: 0.001\n            },\n            bounds: { \n                min: { x: -Infinity, y: -Infinity }, \n                max: { x: Infinity, y: Infinity } \n            }\n        };\n        \n        return Common.extend(composite, defaults, options);\n    };\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * The gravity to apply on the world.\n     *\n     * @property gravity\n     * @type object\n     */\n\n    /**\n     * The gravity x component.\n     *\n     * @property gravity.x\n     * @type object\n     * @default 0\n     */\n\n    /**\n     * The gravity y component.\n     *\n     * @property gravity.y\n     * @type object\n     * @default 1\n     */\n\n    /**\n     * The gravity scale factor.\n     *\n     * @property gravity.scale\n     * @type object\n     * @default 0.001\n     */\n\n    /**\n     * A `Bounds` object that defines the world bounds for collision detection.\n     *\n     * @property bounds\n     * @type bounds\n     * @default { min: { x: -Infinity, y: -Infinity }, max: { x: Infinity, y: Infinity } }\n     */\n\n    // World is a Composite body\n    // see src/module/Outro.js for these aliases:\n    \n    /**\n     * An alias for Composite.add\n     * @method add\n     * @param {world} world\n     * @param {} object\n     * @return {composite} The original world with the objects added\n     */\n\n    /**\n     * An alias for Composite.remove\n     * @method remove\n     * @param {world} world\n     * @param {} object\n     * @param {boolean} [deep=false]\n     * @return {composite} The original world with the objects removed\n     */\n\n    /**\n     * An alias for Composite.clear\n     * @method clear\n     * @param {world} world\n     * @param {boolean} keepStatic\n     */\n\n    /**\n     * An alias for Composite.addComposite\n     * @method addComposite\n     * @param {world} world\n     * @param {composite} composite\n     * @return {world} The original world with the objects from composite added\n     */\n    \n     /**\n      * An alias for Composite.addBody\n      * @method addBody\n      * @param {world} world\n      * @param {body} body\n      * @return {world} The original world with the body added\n      */\n\n     /**\n      * An alias for Composite.addConstraint\n      * @method addConstraint\n      * @param {world} world\n      * @param {constraint} constraint\n      * @return {world} The original world with the constraint added\n      */\n\n})();\n\n},{\"../constraint/Constraint\":12,\"../core/Common\":14,\"./Composite\":2}],4:[function(_dereq_,module,exports){\n/**\n* The `Matter.Contact` module contains methods for creating and manipulating collision contacts.\n*\n* @class Contact\n*/\n\nvar Contact = {};\n\nmodule.exports = Contact;\n\n(function() {\n\n    /**\n     * Creates a new contact.\n     * @method create\n     * @param {vertex} vertex\n     * @return {contact} A new contact\n     */\n    Contact.create = function(vertex) {\n        return {\n            id: Contact.id(vertex),\n            vertex: vertex,\n            normalImpulse: 0,\n            tangentImpulse: 0\n        };\n    };\n    \n    /**\n     * Generates a contact id.\n     * @method id\n     * @param {vertex} vertex\n     * @return {string} Unique contactID\n     */\n    Contact.id = function(vertex) {\n        return vertex.body.id + '_' + vertex.index;\n    };\n\n})();\n\n},{}],5:[function(_dereq_,module,exports){\n/**\n* The `Matter.Detector` module contains methods for detecting collisions given a set of pairs.\n*\n* @class Detector\n*/\n\n// TODO: speculative contacts\n\nvar Detector = {};\n\nmodule.exports = Detector;\n\nvar SAT = _dereq_('./SAT');\nvar Pair = _dereq_('./Pair');\nvar Bounds = _dereq_('../geometry/Bounds');\n\n(function() {\n\n    /**\n     * Finds all collisions given a list of pairs.\n     * @method collisions\n     * @param {pair[]} broadphasePairs\n     * @param {engine} engine\n     * @return {array} collisions\n     */\n    Detector.collisions = function(broadphasePairs, engine) {\n        var collisions = [],\n            pairsTable = engine.pairs.table;\n\n        \n        for (var i = 0; i < broadphasePairs.length; i++) {\n            var bodyA = broadphasePairs[i][0], \n                bodyB = broadphasePairs[i][1];\n\n            if ((bodyA.isStatic || bodyA.isSleeping) && (bodyB.isStatic || bodyB.isSleeping))\n                continue;\n            \n            if (!Detector.canCollide(bodyA.collisionFilter, bodyB.collisionFilter))\n                continue;\n\n\n            // mid phase\n            if (Bounds.overlaps(bodyA.bounds, bodyB.bounds)) {\n                for (var j = bodyA.parts.length > 1 ? 1 : 0; j < bodyA.parts.length; j++) {\n                    var partA = bodyA.parts[j];\n\n                    for (var k = bodyB.parts.length > 1 ? 1 : 0; k < bodyB.parts.length; k++) {\n                        var partB = bodyB.parts[k];\n\n                        if ((partA === bodyA && partB === bodyB) || Bounds.overlaps(partA.bounds, partB.bounds)) {\n                            // find a previous collision we could reuse\n                            var pairId = Pair.id(partA, partB),\n                                pair = pairsTable[pairId],\n                                previousCollision;\n\n                            if (pair && pair.isActive) {\n                                previousCollision = pair.collision;\n                            } else {\n                                previousCollision = null;\n                            }\n\n                            // narrow phase\n                            var collision = SAT.collides(partA, partB, previousCollision);\n\n\n                            if (collision.collided) {\n                                collisions.push(collision);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return collisions;\n    };\n\n    /**\n     * Returns `true` if both supplied collision filters will allow a collision to occur.\n     * See `body.collisionFilter` for more information.\n     * @method canCollide\n     * @param {} filterA\n     * @param {} filterB\n     * @return {bool} `true` if collision can occur\n     */\n    Detector.canCollide = function(filterA, filterB) {\n        if (filterA.group === filterB.group && filterA.group !== 0)\n            return filterA.group > 0;\n\n        return (filterA.mask & filterB.category) !== 0 && (filterB.mask & filterA.category) !== 0;\n    };\n\n})();\n\n},{\"../geometry/Bounds\":26,\"./Pair\":7,\"./SAT\":11}],6:[function(_dereq_,module,exports){\n/**\n* The `Matter.Grid` module contains methods for creating and manipulating collision broadphase grid structures.\n*\n* @class Grid\n*/\n\nvar Grid = {};\n\nmodule.exports = Grid;\n\nvar Pair = _dereq_('./Pair');\nvar Detector = _dereq_('./Detector');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a new grid.\n     * @method create\n     * @param {} options\n     * @return {grid} A new grid\n     */\n    Grid.create = function(options) {\n        var defaults = {\n            controller: Grid,\n            detector: Detector.collisions,\n            buckets: {},\n            pairs: {},\n            pairsList: [],\n            bucketWidth: 48,\n            bucketHeight: 48\n        };\n\n        return Common.extend(defaults, options);\n    };\n\n    /**\n     * The width of a single grid bucket.\n     *\n     * @property bucketWidth\n     * @type number\n     * @default 48\n     */\n\n    /**\n     * The height of a single grid bucket.\n     *\n     * @property bucketHeight\n     * @type number\n     * @default 48\n     */\n\n    /**\n     * Updates the grid.\n     * @method update\n     * @param {grid} grid\n     * @param {body[]} bodies\n     * @param {engine} engine\n     * @param {boolean} forceUpdate\n     */\n    Grid.update = function(grid, bodies, engine, forceUpdate) {\n        var i, col, row,\n            world = engine.world,\n            buckets = grid.buckets,\n            bucket,\n            bucketId,\n            gridChanged = false;\n\n\n        for (i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.isSleeping && !forceUpdate)\n                continue;\n\n            // don't update out of world bodies\n            if (body.bounds.max.x < world.bounds.min.x || body.bounds.min.x > world.bounds.max.x\n                || body.bounds.max.y < world.bounds.min.y || body.bounds.min.y > world.bounds.max.y)\n                continue;\n\n            var newRegion = Grid._getRegion(grid, body);\n\n            // if the body has changed grid region\n            if (!body.region || newRegion.id !== body.region.id || forceUpdate) {\n\n\n                if (!body.region || forceUpdate)\n                    body.region = newRegion;\n\n                var union = Grid._regionUnion(newRegion, body.region);\n\n                // update grid buckets affected by region change\n                // iterate over the union of both regions\n                for (col = union.startCol; col <= union.endCol; col++) {\n                    for (row = union.startRow; row <= union.endRow; row++) {\n                        bucketId = Grid._getBucketId(col, row);\n                        bucket = buckets[bucketId];\n\n                        var isInsideNewRegion = (col >= newRegion.startCol && col <= newRegion.endCol\n                                                && row >= newRegion.startRow && row <= newRegion.endRow);\n\n                        var isInsideOldRegion = (col >= body.region.startCol && col <= body.region.endCol\n                                                && row >= body.region.startRow && row <= body.region.endRow);\n\n                        // remove from old region buckets\n                        if (!isInsideNewRegion && isInsideOldRegion) {\n                            if (isInsideOldRegion) {\n                                if (bucket)\n                                    Grid._bucketRemoveBody(grid, bucket, body);\n                            }\n                        }\n\n                        // add to new region buckets\n                        if (body.region === newRegion || (isInsideNewRegion && !isInsideOldRegion) || forceUpdate) {\n                            if (!bucket)\n                                bucket = Grid._createBucket(buckets, bucketId);\n                            Grid._bucketAddBody(grid, bucket, body);\n                        }\n                    }\n                }\n\n                // set the new region\n                body.region = newRegion;\n\n                // flag changes so we can update pairs\n                gridChanged = true;\n            }\n        }\n\n        // update pairs list only if pairs changed (i.e. a body changed region)\n        if (gridChanged)\n            grid.pairsList = Grid._createActivePairsList(grid);\n    };\n\n    /**\n     * Clears the grid.\n     * @method clear\n     * @param {grid} grid\n     */\n    Grid.clear = function(grid) {\n        grid.buckets = {};\n        grid.pairs = {};\n        grid.pairsList = [];\n    };\n\n    /**\n     * Finds the union of two regions.\n     * @method _regionUnion\n     * @private\n     * @param {} regionA\n     * @param {} regionB\n     * @return {} region\n     */\n    Grid._regionUnion = function(regionA, regionB) {\n        var startCol = Math.min(regionA.startCol, regionB.startCol),\n            endCol = Math.max(regionA.endCol, regionB.endCol),\n            startRow = Math.min(regionA.startRow, regionB.startRow),\n            endRow = Math.max(regionA.endRow, regionB.endRow);\n\n        return Grid._createRegion(startCol, endCol, startRow, endRow);\n    };\n\n    /**\n     * Gets the region a given body falls in for a given grid.\n     * @method _getRegion\n     * @private\n     * @param {} grid\n     * @param {} body\n     * @return {} region\n     */\n    Grid._getRegion = function(grid, body) {\n        var bounds = body.bounds,\n            startCol = Math.floor(bounds.min.x / grid.bucketWidth),\n            endCol = Math.floor(bounds.max.x / grid.bucketWidth),\n            startRow = Math.floor(bounds.min.y / grid.bucketHeight),\n            endRow = Math.floor(bounds.max.y / grid.bucketHeight);\n\n        return Grid._createRegion(startCol, endCol, startRow, endRow);\n    };\n\n    /**\n     * Creates a region.\n     * @method _createRegion\n     * @private\n     * @param {} startCol\n     * @param {} endCol\n     * @param {} startRow\n     * @param {} endRow\n     * @return {} region\n     */\n    Grid._createRegion = function(startCol, endCol, startRow, endRow) {\n        return { \n            id: startCol + ',' + endCol + ',' + startRow + ',' + endRow,\n            startCol: startCol, \n            endCol: endCol, \n            startRow: startRow, \n            endRow: endRow \n        };\n    };\n\n    /**\n     * Gets the bucket id at the given position.\n     * @method _getBucketId\n     * @private\n     * @param {} column\n     * @param {} row\n     * @return {string} bucket id\n     */\n    Grid._getBucketId = function(column, row) {\n        return 'C' + column + 'R' + row;\n    };\n\n    /**\n     * Creates a bucket.\n     * @method _createBucket\n     * @private\n     * @param {} buckets\n     * @param {} bucketId\n     * @return {} bucket\n     */\n    Grid._createBucket = function(buckets, bucketId) {\n        var bucket = buckets[bucketId] = [];\n        return bucket;\n    };\n\n    /**\n     * Adds a body to a bucket.\n     * @method _bucketAddBody\n     * @private\n     * @param {} grid\n     * @param {} bucket\n     * @param {} body\n     */\n    Grid._bucketAddBody = function(grid, bucket, body) {\n        // add new pairs\n        for (var i = 0; i < bucket.length; i++) {\n            var bodyB = bucket[i];\n\n            if (body.id === bodyB.id || (body.isStatic && bodyB.isStatic))\n                continue;\n\n            // keep track of the number of buckets the pair exists in\n            // important for Grid.update to work\n            var pairId = Pair.id(body, bodyB),\n                pair = grid.pairs[pairId];\n\n            if (pair) {\n                pair[2] += 1;\n            } else {\n                grid.pairs[pairId] = [body, bodyB, 1];\n            }\n        }\n\n        // add to bodies (after pairs, otherwise pairs with self)\n        bucket.push(body);\n    };\n\n    /**\n     * Removes a body from a bucket.\n     * @method _bucketRemoveBody\n     * @private\n     * @param {} grid\n     * @param {} bucket\n     * @param {} body\n     */\n    Grid._bucketRemoveBody = function(grid, bucket, body) {\n        // remove from bucket\n        bucket.splice(Common.indexOf(bucket, body), 1);\n\n        // update pair counts\n        for (var i = 0; i < bucket.length; i++) {\n            // keep track of the number of buckets the pair exists in\n            // important for _createActivePairsList to work\n            var bodyB = bucket[i],\n                pairId = Pair.id(body, bodyB),\n                pair = grid.pairs[pairId];\n\n            if (pair)\n                pair[2] -= 1;\n        }\n    };\n\n    /**\n     * Generates a list of the active pairs in the grid.\n     * @method _createActivePairsList\n     * @private\n     * @param {} grid\n     * @return [] pairs\n     */\n    Grid._createActivePairsList = function(grid) {\n        var pairKeys,\n            pair,\n            pairs = [];\n\n        // grid.pairs is used as a hashmap\n        pairKeys = Common.keys(grid.pairs);\n\n        // iterate over grid.pairs\n        for (var k = 0; k < pairKeys.length; k++) {\n            pair = grid.pairs[pairKeys[k]];\n\n            // if pair exists in at least one bucket\n            // it is a pair that needs further collision testing so push it\n            if (pair[2] > 0) {\n                pairs.push(pair);\n            } else {\n                delete grid.pairs[pairKeys[k]];\n            }\n        }\n\n        return pairs;\n    };\n    \n})();\n\n},{\"../core/Common\":14,\"./Detector\":5,\"./Pair\":7}],7:[function(_dereq_,module,exports){\n/**\n* The `Matter.Pair` module contains methods for creating and manipulating collision pairs.\n*\n* @class Pair\n*/\n\nvar Pair = {};\n\nmodule.exports = Pair;\n\nvar Contact = _dereq_('./Contact');\n\n(function() {\n    \n    /**\n     * Creates a pair.\n     * @method create\n     * @param {collision} collision\n     * @param {number} timestamp\n     * @return {pair} A new pair\n     */\n    Pair.create = function(collision, timestamp) {\n        var bodyA = collision.bodyA,\n            bodyB = collision.bodyB,\n            parentA = collision.parentA,\n            parentB = collision.parentB;\n\n        var pair = {\n            id: Pair.id(bodyA, bodyB),\n            bodyA: bodyA,\n            bodyB: bodyB,\n            contacts: {},\n            activeContacts: [],\n            separation: 0,\n            isActive: true,\n            isSensor: bodyA.isSensor || bodyB.isSensor,\n            timeCreated: timestamp,\n            timeUpdated: timestamp,\n            inverseMass: parentA.inverseMass + parentB.inverseMass,\n            friction: Math.min(parentA.friction, parentB.friction),\n            frictionStatic: Math.max(parentA.frictionStatic, parentB.frictionStatic),\n            restitution: Math.max(parentA.restitution, parentB.restitution),\n            slop: Math.max(parentA.slop, parentB.slop)\n        };\n\n        Pair.update(pair, collision, timestamp);\n\n        return pair;\n    };\n\n    /**\n     * Updates a pair given a collision.\n     * @method update\n     * @param {pair} pair\n     * @param {collision} collision\n     * @param {number} timestamp\n     */\n    Pair.update = function(pair, collision, timestamp) {\n        var contacts = pair.contacts,\n            supports = collision.supports,\n            activeContacts = pair.activeContacts,\n            parentA = collision.parentA,\n            parentB = collision.parentB;\n        \n        pair.collision = collision;\n        pair.inverseMass = parentA.inverseMass + parentB.inverseMass;\n        pair.friction = Math.min(parentA.friction, parentB.friction);\n        pair.frictionStatic = Math.max(parentA.frictionStatic, parentB.frictionStatic);\n        pair.restitution = Math.max(parentA.restitution, parentB.restitution);\n        pair.slop = Math.max(parentA.slop, parentB.slop);\n        activeContacts.length = 0;\n        \n        if (collision.collided) {\n            for (var i = 0; i < supports.length; i++) {\n                var support = supports[i],\n                    contactId = Contact.id(support),\n                    contact = contacts[contactId];\n\n                if (contact) {\n                    activeContacts.push(contact);\n                } else {\n                    activeContacts.push(contacts[contactId] = Contact.create(support));\n                }\n            }\n\n            pair.separation = collision.depth;\n            Pair.setActive(pair, true, timestamp);\n        } else {\n            if (pair.isActive === true)\n                Pair.setActive(pair, false, timestamp);\n        }\n    };\n    \n    /**\n     * Set a pair as active or inactive.\n     * @method setActive\n     * @param {pair} pair\n     * @param {bool} isActive\n     * @param {number} timestamp\n     */\n    Pair.setActive = function(pair, isActive, timestamp) {\n        if (isActive) {\n            pair.isActive = true;\n            pair.timeUpdated = timestamp;\n        } else {\n            pair.isActive = false;\n            pair.activeContacts.length = 0;\n        }\n    };\n\n    /**\n     * Get the id for the given pair.\n     * @method id\n     * @param {body} bodyA\n     * @param {body} bodyB\n     * @return {string} Unique pairId\n     */\n    Pair.id = function(bodyA, bodyB) {\n        if (bodyA.id < bodyB.id) {\n            return 'A' + bodyA.id + 'B' + bodyB.id;\n        } else {\n            return 'A' + bodyB.id + 'B' + bodyA.id;\n        }\n    };\n\n})();\n\n},{\"./Contact\":4}],8:[function(_dereq_,module,exports){\n/**\n* The `Matter.Pairs` module contains methods for creating and manipulating collision pair sets.\n*\n* @class Pairs\n*/\n\nvar Pairs = {};\n\nmodule.exports = Pairs;\n\nvar Pair = _dereq_('./Pair');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n    \n    Pairs._pairMaxIdleLife = 1000;\n\n    /**\n     * Creates a new pairs structure.\n     * @method create\n     * @param {object} options\n     * @return {pairs} A new pairs structure\n     */\n    Pairs.create = function(options) {\n        return Common.extend({ \n            table: {},\n            list: [],\n            collisionStart: [],\n            collisionActive: [],\n            collisionEnd: []\n        }, options);\n    };\n\n    /**\n     * Updates pairs given a list of collisions.\n     * @method update\n     * @param {object} pairs\n     * @param {collision[]} collisions\n     * @param {number} timestamp\n     */\n    Pairs.update = function(pairs, collisions, timestamp) {\n        var pairsList = pairs.list,\n            pairsTable = pairs.table,\n            collisionStart = pairs.collisionStart,\n            collisionEnd = pairs.collisionEnd,\n            collisionActive = pairs.collisionActive,\n            activePairIds = [],\n            collision,\n            pairId,\n            pair,\n            i;\n\n        // clear collision state arrays, but maintain old reference\n        collisionStart.length = 0;\n        collisionEnd.length = 0;\n        collisionActive.length = 0;\n\n        for (i = 0; i < collisions.length; i++) {\n            collision = collisions[i];\n\n            if (collision.collided) {\n                pairId = Pair.id(collision.bodyA, collision.bodyB);\n                activePairIds.push(pairId);\n\n                pair = pairsTable[pairId];\n                \n                if (pair) {\n                    // pair already exists (but may or may not be active)\n                    if (pair.isActive) {\n                        // pair exists and is active\n                        collisionActive.push(pair);\n                    } else {\n                        // pair exists but was inactive, so a collision has just started again\n                        collisionStart.push(pair);\n                    }\n\n                    // update the pair\n                    Pair.update(pair, collision, timestamp);\n                } else {\n                    // pair did not exist, create a new pair\n                    pair = Pair.create(collision, timestamp);\n                    pairsTable[pairId] = pair;\n\n                    // push the new pair\n                    collisionStart.push(pair);\n                    pairsList.push(pair);\n                }\n            }\n        }\n\n        // deactivate previously active pairs that are now inactive\n        for (i = 0; i < pairsList.length; i++) {\n            pair = pairsList[i];\n            if (pair.isActive && Common.indexOf(activePairIds, pair.id) === -1) {\n                Pair.setActive(pair, false, timestamp);\n                collisionEnd.push(pair);\n            }\n        }\n    };\n    \n    /**\n     * Finds and removes pairs that have been inactive for a set amount of time.\n     * @method removeOld\n     * @param {object} pairs\n     * @param {number} timestamp\n     */\n    Pairs.removeOld = function(pairs, timestamp) {\n        var pairsList = pairs.list,\n            pairsTable = pairs.table,\n            indexesToRemove = [],\n            pair,\n            collision,\n            pairIndex,\n            i;\n\n        for (i = 0; i < pairsList.length; i++) {\n            pair = pairsList[i];\n            collision = pair.collision;\n            \n            // never remove sleeping pairs\n            if (collision.bodyA.isSleeping || collision.bodyB.isSleeping) {\n                pair.timeUpdated = timestamp;\n                continue;\n            }\n\n            // if pair is inactive for too long, mark it to be removed\n            if (timestamp - pair.timeUpdated > Pairs._pairMaxIdleLife) {\n                indexesToRemove.push(i);\n            }\n        }\n\n        // remove marked pairs\n        for (i = 0; i < indexesToRemove.length; i++) {\n            pairIndex = indexesToRemove[i] - i;\n            pair = pairsList[pairIndex];\n            delete pairsTable[pair.id];\n            pairsList.splice(pairIndex, 1);\n        }\n    };\n\n    /**\n     * Clears the given pairs structure.\n     * @method clear\n     * @param {pairs} pairs\n     * @return {pairs} pairs\n     */\n    Pairs.clear = function(pairs) {\n        pairs.table = {};\n        pairs.list.length = 0;\n        pairs.collisionStart.length = 0;\n        pairs.collisionActive.length = 0;\n        pairs.collisionEnd.length = 0;\n        return pairs;\n    };\n\n})();\n\n},{\"../core/Common\":14,\"./Pair\":7}],9:[function(_dereq_,module,exports){\n/**\n* The `Matter.Query` module contains methods for performing collision queries.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Query\n*/\n\nvar Query = {};\n\nmodule.exports = Query;\n\nvar Vector = _dereq_('../geometry/Vector');\nvar SAT = _dereq_('./SAT');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Bodies = _dereq_('../factory/Bodies');\nvar Vertices = _dereq_('../geometry/Vertices');\n\n(function() {\n\n    /**\n     * Returns a list of collisions between `body` and `bodies`.\n     * @method collides\n     * @param {body} body\n     * @param {body[]} bodies\n     * @return {object[]} Collisions\n     */\n    Query.collides = function(body, bodies) {\n        var collisions = [];\n\n        for (var i = 0; i < bodies.length; i++) {\n            var bodyA = bodies[i];\n            \n            if (Bounds.overlaps(bodyA.bounds, body.bounds)) {\n                for (var j = bodyA.parts.length === 1 ? 0 : 1; j < bodyA.parts.length; j++) {\n                    var part = bodyA.parts[j];\n\n                    if (Bounds.overlaps(part.bounds, body.bounds)) {\n                        var collision = SAT.collides(part, body);\n\n                        if (collision.collided) {\n                            collisions.push(collision);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n\n        return collisions;\n    };\n\n    /**\n     * Casts a ray segment against a set of bodies and returns all collisions, ray width is optional. Intersection points are not provided.\n     * @method ray\n     * @param {body[]} bodies\n     * @param {vector} startPoint\n     * @param {vector} endPoint\n     * @param {number} [rayWidth]\n     * @return {object[]} Collisions\n     */\n    Query.ray = function(bodies, startPoint, endPoint, rayWidth) {\n        rayWidth = rayWidth || 1e-100;\n\n        var rayAngle = Vector.angle(startPoint, endPoint),\n            rayLength = Vector.magnitude(Vector.sub(startPoint, endPoint)),\n            rayX = (endPoint.x + startPoint.x) * 0.5,\n            rayY = (endPoint.y + startPoint.y) * 0.5,\n            ray = Bodies.rectangle(rayX, rayY, rayLength, rayWidth, { angle: rayAngle }),\n            collisions = Query.collides(ray, bodies);\n\n        for (var i = 0; i < collisions.length; i += 1) {\n            var collision = collisions[i];\n            collision.body = collision.bodyB = collision.bodyA;            \n        }\n\n        return collisions;\n    };\n\n    /**\n     * Returns all bodies whose bounds are inside (or outside if set) the given set of bounds, from the given set of bodies.\n     * @method region\n     * @param {body[]} bodies\n     * @param {bounds} bounds\n     * @param {bool} [outside=false]\n     * @return {body[]} The bodies matching the query\n     */\n    Query.region = function(bodies, bounds, outside) {\n        var result = [];\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                overlaps = Bounds.overlaps(body.bounds, bounds);\n            if ((overlaps && !outside) || (!overlaps && outside))\n                result.push(body);\n        }\n\n        return result;\n    };\n\n    /**\n     * Returns all bodies whose vertices contain the given point, from the given set of bodies.\n     * @method point\n     * @param {body[]} bodies\n     * @param {vector} point\n     * @return {body[]} The bodies matching the query\n     */\n    Query.point = function(bodies, point) {\n        var result = [];\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n            \n            if (Bounds.contains(body.bounds, point)) {\n                for (var j = body.parts.length === 1 ? 0 : 1; j < body.parts.length; j++) {\n                    var part = body.parts[j];\n\n                    if (Bounds.contains(part.bounds, point)\n                        && Vertices.contains(part.vertices, point)) {\n                        result.push(body);\n                        break;\n                    }\n                }\n            }\n        }\n\n        return result;\n    };\n\n})();\n\n},{\"../factory/Bodies\":23,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29,\"./SAT\":11}],10:[function(_dereq_,module,exports){\n/**\n* The `Matter.Resolver` module contains methods for resolving collision pairs.\n*\n* @class Resolver\n*/\n\nvar Resolver = {};\n\nmodule.exports = Resolver;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Vector = _dereq_('../geometry/Vector');\nvar Common = _dereq_('../core/Common');\nvar Bounds = _dereq_('../geometry/Bounds');\n\n(function() {\n\n    Resolver._restingThresh = 4;\n    Resolver._restingThreshTangent = 6;\n    Resolver._positionDampen = 0.9;\n    Resolver._positionWarming = 0.8;\n    Resolver._frictionNormalMultiplier = 5;\n\n    /**\n     * Prepare pairs for position solving.\n     * @method preSolvePosition\n     * @param {pair[]} pairs\n     */\n    Resolver.preSolvePosition = function(pairs) {\n        var i,\n            pair,\n            activeCount;\n\n        // find total contacts on each body\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n            \n            if (!pair.isActive)\n                continue;\n            \n            activeCount = pair.activeContacts.length;\n            pair.collision.parentA.totalContacts += activeCount;\n            pair.collision.parentB.totalContacts += activeCount;\n        }\n    };\n\n    /**\n     * Find a solution for pair positions.\n     * @method solvePosition\n     * @param {pair[]} pairs\n     * @param {number} timeScale\n     */\n    Resolver.solvePosition = function(pairs, timeScale) {\n        var i,\n            pair,\n            collision,\n            bodyA,\n            bodyB,\n            normal,\n            bodyBtoA,\n            contactShare,\n            positionImpulse,\n            contactCount = {},\n            tempA = Vector._temp[0],\n            tempB = Vector._temp[1],\n            tempC = Vector._temp[2],\n            tempD = Vector._temp[3];\n\n        // find impulses required to resolve penetration\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n            \n            if (!pair.isActive || pair.isSensor)\n                continue;\n\n            collision = pair.collision;\n            bodyA = collision.parentA;\n            bodyB = collision.parentB;\n            normal = collision.normal;\n\n            // get current separation between body edges involved in collision\n            bodyBtoA = Vector.sub(Vector.add(bodyB.positionImpulse, bodyB.position, tempA), \n                                    Vector.add(bodyA.positionImpulse, \n                                        Vector.sub(bodyB.position, collision.penetration, tempB), tempC), tempD);\n\n            pair.separation = Vector.dot(normal, bodyBtoA);\n        }\n        \n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive || pair.isSensor)\n                continue;\n            \n            collision = pair.collision;\n            bodyA = collision.parentA;\n            bodyB = collision.parentB;\n            normal = collision.normal;\n            positionImpulse = (pair.separation - pair.slop) * timeScale;\n\n            if (bodyA.isStatic || bodyB.isStatic)\n                positionImpulse *= 2;\n            \n            if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                contactShare = Resolver._positionDampen / bodyA.totalContacts;\n                bodyA.positionImpulse.x += normal.x * positionImpulse * contactShare;\n                bodyA.positionImpulse.y += normal.y * positionImpulse * contactShare;\n            }\n\n            if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                contactShare = Resolver._positionDampen / bodyB.totalContacts;\n                bodyB.positionImpulse.x -= normal.x * positionImpulse * contactShare;\n                bodyB.positionImpulse.y -= normal.y * positionImpulse * contactShare;\n            }\n        }\n    };\n\n    /**\n     * Apply position resolution.\n     * @method postSolvePosition\n     * @param {body[]} bodies\n     */\n    Resolver.postSolvePosition = function(bodies) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            // reset contact count\n            body.totalContacts = 0;\n\n            if (body.positionImpulse.x !== 0 || body.positionImpulse.y !== 0) {\n                // update body geometry\n                for (var j = 0; j < body.parts.length; j++) {\n                    var part = body.parts[j];\n                    Vertices.translate(part.vertices, body.positionImpulse);\n                    Bounds.update(part.bounds, part.vertices, body.velocity);\n                    part.position.x += body.positionImpulse.x;\n                    part.position.y += body.positionImpulse.y;\n                }\n\n                // move the body without changing velocity\n                body.positionPrev.x += body.positionImpulse.x;\n                body.positionPrev.y += body.positionImpulse.y;\n\n                if (Vector.dot(body.positionImpulse, body.velocity) < 0) {\n                    // reset cached impulse if the body has velocity along it\n                    body.positionImpulse.x = 0;\n                    body.positionImpulse.y = 0;\n                } else {\n                    // warm the next iteration\n                    body.positionImpulse.x *= Resolver._positionWarming;\n                    body.positionImpulse.y *= Resolver._positionWarming;\n                }\n            }\n        }\n    };\n\n    /**\n     * Prepare pairs for velocity solving.\n     * @method preSolveVelocity\n     * @param {pair[]} pairs\n     */\n    Resolver.preSolveVelocity = function(pairs) {\n        var i,\n            j,\n            pair,\n            contacts,\n            collision,\n            bodyA,\n            bodyB,\n            normal,\n            tangent,\n            contact,\n            contactVertex,\n            normalImpulse,\n            tangentImpulse,\n            offset,\n            impulse = Vector._temp[0],\n            tempA = Vector._temp[1];\n        \n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n            \n            if (!pair.isActive || pair.isSensor)\n                continue;\n            \n            contacts = pair.activeContacts;\n            collision = pair.collision;\n            bodyA = collision.parentA;\n            bodyB = collision.parentB;\n            normal = collision.normal;\n            tangent = collision.tangent;\n\n            // resolve each contact\n            for (j = 0; j < contacts.length; j++) {\n                contact = contacts[j];\n                contactVertex = contact.vertex;\n                normalImpulse = contact.normalImpulse;\n                tangentImpulse = contact.tangentImpulse;\n\n                if (normalImpulse !== 0 || tangentImpulse !== 0) {\n                    // total impulse from contact\n                    impulse.x = (normal.x * normalImpulse) + (tangent.x * tangentImpulse);\n                    impulse.y = (normal.y * normalImpulse) + (tangent.y * tangentImpulse);\n                    \n                    // apply impulse from contact\n                    if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                        offset = Vector.sub(contactVertex, bodyA.position, tempA);\n                        bodyA.positionPrev.x += impulse.x * bodyA.inverseMass;\n                        bodyA.positionPrev.y += impulse.y * bodyA.inverseMass;\n                        bodyA.anglePrev += Vector.cross(offset, impulse) * bodyA.inverseInertia;\n                    }\n\n                    if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                        offset = Vector.sub(contactVertex, bodyB.position, tempA);\n                        bodyB.positionPrev.x -= impulse.x * bodyB.inverseMass;\n                        bodyB.positionPrev.y -= impulse.y * bodyB.inverseMass;\n                        bodyB.anglePrev -= Vector.cross(offset, impulse) * bodyB.inverseInertia;\n                    }\n                }\n            }\n        }\n    };\n\n    /**\n     * Find a solution for pair velocities.\n     * @method solveVelocity\n     * @param {pair[]} pairs\n     * @param {number} timeScale\n     */\n    Resolver.solveVelocity = function(pairs, timeScale) {\n        var timeScaleSquared = timeScale * timeScale,\n            impulse = Vector._temp[0],\n            tempA = Vector._temp[1],\n            tempB = Vector._temp[2],\n            tempC = Vector._temp[3],\n            tempD = Vector._temp[4],\n            tempE = Vector._temp[5];\n        \n        for (var i = 0; i < pairs.length; i++) {\n            var pair = pairs[i];\n            \n            if (!pair.isActive || pair.isSensor)\n                continue;\n            \n            var collision = pair.collision,\n                bodyA = collision.parentA,\n                bodyB = collision.parentB,\n                normal = collision.normal,\n                tangent = collision.tangent,\n                contacts = pair.activeContacts,\n                contactShare = 1 / contacts.length;\n\n            // update body velocities\n            bodyA.velocity.x = bodyA.position.x - bodyA.positionPrev.x;\n            bodyA.velocity.y = bodyA.position.y - bodyA.positionPrev.y;\n            bodyB.velocity.x = bodyB.position.x - bodyB.positionPrev.x;\n            bodyB.velocity.y = bodyB.position.y - bodyB.positionPrev.y;\n            bodyA.angularVelocity = bodyA.angle - bodyA.anglePrev;\n            bodyB.angularVelocity = bodyB.angle - bodyB.anglePrev;\n\n            // resolve each contact\n            for (var j = 0; j < contacts.length; j++) {\n                var contact = contacts[j],\n                    contactVertex = contact.vertex,\n                    offsetA = Vector.sub(contactVertex, bodyA.position, tempA),\n                    offsetB = Vector.sub(contactVertex, bodyB.position, tempB),\n                    velocityPointA = Vector.add(bodyA.velocity, Vector.mult(Vector.perp(offsetA), bodyA.angularVelocity), tempC),\n                    velocityPointB = Vector.add(bodyB.velocity, Vector.mult(Vector.perp(offsetB), bodyB.angularVelocity), tempD), \n                    relativeVelocity = Vector.sub(velocityPointA, velocityPointB, tempE),\n                    normalVelocity = Vector.dot(normal, relativeVelocity);\n\n                var tangentVelocity = Vector.dot(tangent, relativeVelocity),\n                    tangentSpeed = Math.abs(tangentVelocity),\n                    tangentVelocityDirection = Common.sign(tangentVelocity);\n\n                // raw impulses\n                var normalImpulse = (1 + pair.restitution) * normalVelocity,\n                    normalForce = Common.clamp(pair.separation + normalVelocity, 0, 1) * Resolver._frictionNormalMultiplier;\n\n                // coulomb friction\n                var tangentImpulse = tangentVelocity,\n                    maxFriction = Infinity;\n\n                if (tangentSpeed > pair.friction * pair.frictionStatic * normalForce * timeScaleSquared) {\n                    maxFriction = tangentSpeed;\n                    tangentImpulse = Common.clamp(\n                        pair.friction * tangentVelocityDirection * timeScaleSquared,\n                        -maxFriction, maxFriction\n                    );\n                }\n\n                // modify impulses accounting for mass, inertia and offset\n                var oAcN = Vector.cross(offsetA, normal),\n                    oBcN = Vector.cross(offsetB, normal),\n                    share = contactShare / (bodyA.inverseMass + bodyB.inverseMass + bodyA.inverseInertia * oAcN * oAcN  + bodyB.inverseInertia * oBcN * oBcN);\n\n                normalImpulse *= share;\n                tangentImpulse *= share;\n\n                // handle high velocity and resting collisions separately\n                if (normalVelocity < 0 && normalVelocity * normalVelocity > Resolver._restingThresh * timeScaleSquared) {\n                    // high normal velocity so clear cached contact normal impulse\n                    contact.normalImpulse = 0;\n                } else {\n                    // solve resting collision constraints using Erin Catto's method (GDC08)\n                    // impulse constraint tends to 0\n                    var contactNormalImpulse = contact.normalImpulse;\n                    contact.normalImpulse = Math.min(contact.normalImpulse + normalImpulse, 0);\n                    normalImpulse = contact.normalImpulse - contactNormalImpulse;\n                }\n\n                // handle high velocity and resting collisions separately\n                if (tangentVelocity * tangentVelocity > Resolver._restingThreshTangent * timeScaleSquared) {\n                    // high tangent velocity so clear cached contact tangent impulse\n                    contact.tangentImpulse = 0;\n                } else {\n                    // solve resting collision constraints using Erin Catto's method (GDC08)\n                    // tangent impulse tends to -tangentSpeed or +tangentSpeed\n                    var contactTangentImpulse = contact.tangentImpulse;\n                    contact.tangentImpulse = Common.clamp(contact.tangentImpulse + tangentImpulse, -maxFriction, maxFriction);\n                    tangentImpulse = contact.tangentImpulse - contactTangentImpulse;\n                }\n\n                // total impulse from contact\n                impulse.x = (normal.x * normalImpulse) + (tangent.x * tangentImpulse);\n                impulse.y = (normal.y * normalImpulse) + (tangent.y * tangentImpulse);\n                \n                // apply impulse from contact\n                if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                    bodyA.positionPrev.x += impulse.x * bodyA.inverseMass;\n                    bodyA.positionPrev.y += impulse.y * bodyA.inverseMass;\n                    bodyA.anglePrev += Vector.cross(offsetA, impulse) * bodyA.inverseInertia;\n                }\n\n                if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                    bodyB.positionPrev.x -= impulse.x * bodyB.inverseMass;\n                    bodyB.positionPrev.y -= impulse.y * bodyB.inverseMass;\n                    bodyB.anglePrev -= Vector.cross(offsetB, impulse) * bodyB.inverseInertia;\n                }\n            }\n        }\n    };\n\n})();\n\n},{\"../core/Common\":14,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29}],11:[function(_dereq_,module,exports){\n/**\n* The `Matter.SAT` module contains methods for detecting collisions using the Separating Axis Theorem.\n*\n* @class SAT\n*/\n\n// TODO: true circles and curves\n\nvar SAT = {};\n\nmodule.exports = SAT;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Vector = _dereq_('../geometry/Vector');\n\n(function() {\n\n    /**\n     * Detect collision between two bodies using the Separating Axis Theorem.\n     * @method collides\n     * @param {body} bodyA\n     * @param {body} bodyB\n     * @param {collision} previousCollision\n     * @return {collision} collision\n     */\n    SAT.collides = function(bodyA, bodyB, previousCollision) {\n        var overlapAB,\n            overlapBA, \n            minOverlap,\n            collision,\n            canReusePrevCol = false;\n\n        if (previousCollision) {\n            // estimate total motion\n            var parentA = bodyA.parent,\n                parentB = bodyB.parent,\n                motion = parentA.speed * parentA.speed + parentA.angularSpeed * parentA.angularSpeed\n                       + parentB.speed * parentB.speed + parentB.angularSpeed * parentB.angularSpeed;\n\n            // we may be able to (partially) reuse collision result \n            // but only safe if collision was resting\n            canReusePrevCol = previousCollision && previousCollision.collided && motion < 0.2;\n\n            // reuse collision object\n            collision = previousCollision;\n        } else {\n            collision = { collided: false, bodyA: bodyA, bodyB: bodyB };\n        }\n\n        if (previousCollision && canReusePrevCol) {\n            // if we can reuse the collision result\n            // we only need to test the previously found axis\n            var axisBodyA = collision.axisBody,\n                axisBodyB = axisBodyA === bodyA ? bodyB : bodyA,\n                axes = [axisBodyA.axes[previousCollision.axisNumber]];\n\n            minOverlap = SAT._overlapAxes(axisBodyA.vertices, axisBodyB.vertices, axes);\n            collision.reused = true;\n\n            if (minOverlap.overlap <= 0) {\n                collision.collided = false;\n                return collision;\n            }\n        } else {\n            // if we can't reuse a result, perform a full SAT test\n\n            overlapAB = SAT._overlapAxes(bodyA.vertices, bodyB.vertices, bodyA.axes);\n\n            if (overlapAB.overlap <= 0) {\n                collision.collided = false;\n                return collision;\n            }\n\n            overlapBA = SAT._overlapAxes(bodyB.vertices, bodyA.vertices, bodyB.axes);\n\n            if (overlapBA.overlap <= 0) {\n                collision.collided = false;\n                return collision;\n            }\n\n            if (overlapAB.overlap < overlapBA.overlap) {\n                minOverlap = overlapAB;\n                collision.axisBody = bodyA;\n            } else {\n                minOverlap = overlapBA;\n                collision.axisBody = bodyB;\n            }\n\n            // important for reuse later\n            collision.axisNumber = minOverlap.axisNumber;\n        }\n\n        collision.bodyA = bodyA.id < bodyB.id ? bodyA : bodyB;\n        collision.bodyB = bodyA.id < bodyB.id ? bodyB : bodyA;\n        collision.collided = true;\n        collision.depth = minOverlap.overlap;\n        collision.parentA = collision.bodyA.parent;\n        collision.parentB = collision.bodyB.parent;\n        \n        bodyA = collision.bodyA;\n        bodyB = collision.bodyB;\n\n        // ensure normal is facing away from bodyA\n        if (Vector.dot(minOverlap.axis, Vector.sub(bodyB.position, bodyA.position)) < 0) {\n            collision.normal = {\n                x: minOverlap.axis.x,\n                y: minOverlap.axis.y\n            };\n        } else {\n            collision.normal = {\n                x: -minOverlap.axis.x,\n                y: -minOverlap.axis.y\n            };\n        }\n\n        collision.tangent = Vector.perp(collision.normal);\n\n        collision.penetration = collision.penetration || {};\n        collision.penetration.x = collision.normal.x * collision.depth;\n        collision.penetration.y = collision.normal.y * collision.depth; \n\n        // find support points, there is always either exactly one or two\n        var verticesB = SAT._findSupports(bodyA, bodyB, collision.normal),\n            supports = [];\n\n        // find the supports from bodyB that are inside bodyA\n        if (Vertices.contains(bodyA.vertices, verticesB[0]))\n            supports.push(verticesB[0]);\n\n        if (Vertices.contains(bodyA.vertices, verticesB[1]))\n            supports.push(verticesB[1]);\n\n        // find the supports from bodyA that are inside bodyB\n        if (supports.length < 2) {\n            var verticesA = SAT._findSupports(bodyB, bodyA, Vector.neg(collision.normal));\n                \n            if (Vertices.contains(bodyB.vertices, verticesA[0]))\n                supports.push(verticesA[0]);\n\n            if (supports.length < 2 && Vertices.contains(bodyB.vertices, verticesA[1]))\n                supports.push(verticesA[1]);\n        }\n\n        // account for the edge case of overlapping but no vertex containment\n        if (supports.length < 1)\n            supports = [verticesB[0]];\n        \n        collision.supports = supports;\n\n        return collision;\n    };\n\n    /**\n     * Find the overlap between two sets of vertices.\n     * @method _overlapAxes\n     * @private\n     * @param {} verticesA\n     * @param {} verticesB\n     * @param {} axes\n     * @return result\n     */\n    SAT._overlapAxes = function(verticesA, verticesB, axes) {\n        var projectionA = Vector._temp[0], \n            projectionB = Vector._temp[1],\n            result = { overlap: Number.MAX_VALUE },\n            overlap,\n            axis;\n\n        for (var i = 0; i < axes.length; i++) {\n            axis = axes[i];\n\n            SAT._projectToAxis(projectionA, verticesA, axis);\n            SAT._projectToAxis(projectionB, verticesB, axis);\n\n            overlap = Math.min(projectionA.max - projectionB.min, projectionB.max - projectionA.min);\n\n            if (overlap <= 0) {\n                result.overlap = overlap;\n                return result;\n            }\n\n            if (overlap < result.overlap) {\n                result.overlap = overlap;\n                result.axis = axis;\n                result.axisNumber = i;\n            }\n        }\n\n        return result;\n    };\n\n    /**\n     * Projects vertices on an axis and returns an interval.\n     * @method _projectToAxis\n     * @private\n     * @param {} projection\n     * @param {} vertices\n     * @param {} axis\n     */\n    SAT._projectToAxis = function(projection, vertices, axis) {\n        var min = Vector.dot(vertices[0], axis),\n            max = min;\n\n        for (var i = 1; i < vertices.length; i += 1) {\n            var dot = Vector.dot(vertices[i], axis);\n\n            if (dot > max) { \n                max = dot; \n            } else if (dot < min) { \n                min = dot; \n            }\n        }\n\n        projection.min = min;\n        projection.max = max;\n    };\n    \n    /**\n     * Finds supporting vertices given two bodies along a given direction using hill-climbing.\n     * @method _findSupports\n     * @private\n     * @param {} bodyA\n     * @param {} bodyB\n     * @param {} normal\n     * @return [vector]\n     */\n    SAT._findSupports = function(bodyA, bodyB, normal) {\n        var nearestDistance = Number.MAX_VALUE,\n            vertexToBody = Vector._temp[0],\n            vertices = bodyB.vertices,\n            bodyAPosition = bodyA.position,\n            distance,\n            vertex,\n            vertexA,\n            vertexB;\n\n        // find closest vertex on bodyB\n        for (var i = 0; i < vertices.length; i++) {\n            vertex = vertices[i];\n            vertexToBody.x = vertex.x - bodyAPosition.x;\n            vertexToBody.y = vertex.y - bodyAPosition.y;\n            distance = -Vector.dot(normal, vertexToBody);\n\n            if (distance < nearestDistance) {\n                nearestDistance = distance;\n                vertexA = vertex;\n            }\n        }\n\n        // find next closest vertex using the two connected to it\n        var prevIndex = vertexA.index - 1 >= 0 ? vertexA.index - 1 : vertices.length - 1;\n        vertex = vertices[prevIndex];\n        vertexToBody.x = vertex.x - bodyAPosition.x;\n        vertexToBody.y = vertex.y - bodyAPosition.y;\n        nearestDistance = -Vector.dot(normal, vertexToBody);\n        vertexB = vertex;\n\n        var nextIndex = (vertexA.index + 1) % vertices.length;\n        vertex = vertices[nextIndex];\n        vertexToBody.x = vertex.x - bodyAPosition.x;\n        vertexToBody.y = vertex.y - bodyAPosition.y;\n        distance = -Vector.dot(normal, vertexToBody);\n        if (distance < nearestDistance) {\n            vertexB = vertex;\n        }\n\n        return [vertexA, vertexB];\n    };\n\n})();\n\n},{\"../geometry/Vector\":28,\"../geometry/Vertices\":29}],12:[function(_dereq_,module,exports){\n/**\n* The `Matter.Constraint` module contains methods for creating and manipulating constraints.\n* Constraints are used for specifying that a fixed distance must be maintained between two bodies (or a body and a fixed world-space position).\n* The stiffness of constraints can be modified to create springs or elastic.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Constraint\n*/\n\nvar Constraint = {};\n\nmodule.exports = Constraint;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Vector = _dereq_('../geometry/Vector');\nvar Sleeping = _dereq_('../core/Sleeping');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Axes = _dereq_('../geometry/Axes');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    Constraint._warming = 0.4;\n    Constraint._torqueDampen = 1;\n    Constraint._minLength = 0.000001;\n\n    /**\n     * Creates a new constraint.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * To simulate a revolute constraint (or pin joint) set `length: 0` and a high `stiffness` value (e.g. `0.7` or above).\n     * If the constraint is unstable, try lowering the `stiffness` value and / or increasing `engine.constraintIterations`.\n     * For compound bodies, constraints must be applied to the parent body (not one of its parts).\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} options\n     * @return {constraint} constraint\n     */\n    Constraint.create = function(options) {\n        var constraint = options;\n\n        // if bodies defined but no points, use body centre\n        if (constraint.bodyA && !constraint.pointA)\n            constraint.pointA = { x: 0, y: 0 };\n        if (constraint.bodyB && !constraint.pointB)\n            constraint.pointB = { x: 0, y: 0 };\n\n        // calculate static length using initial world space points\n        var initialPointA = constraint.bodyA ? Vector.add(constraint.bodyA.position, constraint.pointA) : constraint.pointA,\n            initialPointB = constraint.bodyB ? Vector.add(constraint.bodyB.position, constraint.pointB) : constraint.pointB,\n            length = Vector.magnitude(Vector.sub(initialPointA, initialPointB));\n    \n        constraint.length = typeof constraint.length !== 'undefined' ? constraint.length : length;\n\n        // option defaults\n        constraint.id = constraint.id || Common.nextId();\n        constraint.label = constraint.label || 'Constraint';\n        constraint.type = 'constraint';\n        constraint.stiffness = constraint.stiffness || (constraint.length > 0 ? 1 : 0.7);\n        constraint.damping = constraint.damping || 0;\n        constraint.angularStiffness = constraint.angularStiffness || 0;\n        constraint.angleA = constraint.bodyA ? constraint.bodyA.angle : constraint.angleA;\n        constraint.angleB = constraint.bodyB ? constraint.bodyB.angle : constraint.angleB;\n        constraint.plugin = {};\n\n        // render\n        var render = {\n            visible: true,\n            lineWidth: 2,\n            strokeStyle: '#ffffff',\n            type: 'line',\n            anchors: true\n        };\n\n        if (constraint.length === 0 && constraint.stiffness > 0.1) {\n            render.type = 'pin';\n            render.anchors = false;\n        } else if (constraint.stiffness < 0.9) {\n            render.type = 'spring';\n        }\n\n        constraint.render = Common.extend(render, constraint.render);\n\n        return constraint;\n    };\n\n    /**\n     * Prepares for solving by constraint warming.\n     * @private\n     * @method preSolveAll\n     * @param {body[]} bodies\n     */\n    Constraint.preSolveAll = function(bodies) {\n        for (var i = 0; i < bodies.length; i += 1) {\n            var body = bodies[i],\n                impulse = body.constraintImpulse;\n\n            if (body.isStatic || (impulse.x === 0 && impulse.y === 0 && impulse.angle === 0)) {\n                continue;\n            }\n\n            body.position.x += impulse.x;\n            body.position.y += impulse.y;\n            body.angle += impulse.angle;\n        }\n    };\n\n    /**\n     * Solves all constraints in a list of collisions.\n     * @private\n     * @method solveAll\n     * @param {constraint[]} constraints\n     * @param {number} timeScale\n     */\n    Constraint.solveAll = function(constraints, timeScale) {\n        // Solve fixed constraints first.\n        for (var i = 0; i < constraints.length; i += 1) {\n            var constraint = constraints[i],\n                fixedA = !constraint.bodyA || (constraint.bodyA && constraint.bodyA.isStatic),\n                fixedB = !constraint.bodyB || (constraint.bodyB && constraint.bodyB.isStatic);\n\n            if (fixedA || fixedB) {\n                Constraint.solve(constraints[i], timeScale);\n            }\n        }\n\n        // Solve free constraints last.\n        for (i = 0; i < constraints.length; i += 1) {\n            constraint = constraints[i];\n            fixedA = !constraint.bodyA || (constraint.bodyA && constraint.bodyA.isStatic);\n            fixedB = !constraint.bodyB || (constraint.bodyB && constraint.bodyB.isStatic);\n\n            if (!fixedA && !fixedB) {\n                Constraint.solve(constraints[i], timeScale);\n            }\n        }\n    };\n\n    /**\n     * Solves a distance constraint with Gauss-Siedel method.\n     * @private\n     * @method solve\n     * @param {constraint} constraint\n     * @param {number} timeScale\n     */\n    Constraint.solve = function(constraint, timeScale) {\n        var bodyA = constraint.bodyA,\n            bodyB = constraint.bodyB,\n            pointA = constraint.pointA,\n            pointB = constraint.pointB;\n\n        if (!bodyA && !bodyB)\n            return;\n\n        // update reference angle\n        if (bodyA && !bodyA.isStatic) {\n            Vector.rotate(pointA, bodyA.angle - constraint.angleA, pointA);\n            constraint.angleA = bodyA.angle;\n        }\n        \n        // update reference angle\n        if (bodyB && !bodyB.isStatic) {\n            Vector.rotate(pointB, bodyB.angle - constraint.angleB, pointB);\n            constraint.angleB = bodyB.angle;\n        }\n\n        var pointAWorld = pointA,\n            pointBWorld = pointB;\n\n        if (bodyA) pointAWorld = Vector.add(bodyA.position, pointA);\n        if (bodyB) pointBWorld = Vector.add(bodyB.position, pointB);\n\n        if (!pointAWorld || !pointBWorld)\n            return;\n\n        var delta = Vector.sub(pointAWorld, pointBWorld),\n            currentLength = Vector.magnitude(delta);\n\n        // prevent singularity\n        if (currentLength < Constraint._minLength) {\n            currentLength = Constraint._minLength;\n        }\n\n        // solve distance constraint with Gauss-Siedel method\n        var difference = (currentLength - constraint.length) / currentLength,\n            stiffness = constraint.stiffness < 1 ? constraint.stiffness * timeScale : constraint.stiffness,\n            force = Vector.mult(delta, difference * stiffness),\n            massTotal = (bodyA ? bodyA.inverseMass : 0) + (bodyB ? bodyB.inverseMass : 0),\n            inertiaTotal = (bodyA ? bodyA.inverseInertia : 0) + (bodyB ? bodyB.inverseInertia : 0),\n            resistanceTotal = massTotal + inertiaTotal,\n            torque,\n            share,\n            normal,\n            normalVelocity,\n            relativeVelocity;\n\n        if (constraint.damping) {\n            var zero = Vector.create();\n            normal = Vector.div(delta, currentLength);\n\n            relativeVelocity = Vector.sub(\n                bodyB && Vector.sub(bodyB.position, bodyB.positionPrev) || zero,\n                bodyA && Vector.sub(bodyA.position, bodyA.positionPrev) || zero\n            );\n\n            normalVelocity = Vector.dot(normal, relativeVelocity);\n        }\n\n        if (bodyA && !bodyA.isStatic) {\n            share = bodyA.inverseMass / massTotal;\n\n            // keep track of applied impulses for post solving\n            bodyA.constraintImpulse.x -= force.x * share;\n            bodyA.constraintImpulse.y -= force.y * share;\n\n            // apply forces\n            bodyA.position.x -= force.x * share;\n            bodyA.position.y -= force.y * share;\n\n            // apply damping\n            if (constraint.damping) {\n                bodyA.positionPrev.x -= constraint.damping * normal.x * normalVelocity * share;\n                bodyA.positionPrev.y -= constraint.damping * normal.y * normalVelocity * share;\n            }\n\n            // apply torque\n            torque = (Vector.cross(pointA, force) / resistanceTotal) * Constraint._torqueDampen * bodyA.inverseInertia * (1 - constraint.angularStiffness);\n            bodyA.constraintImpulse.angle -= torque;\n            bodyA.angle -= torque;\n        }\n\n        if (bodyB && !bodyB.isStatic) {\n            share = bodyB.inverseMass / massTotal;\n\n            // keep track of applied impulses for post solving\n            bodyB.constraintImpulse.x += force.x * share;\n            bodyB.constraintImpulse.y += force.y * share;\n            \n            // apply forces\n            bodyB.position.x += force.x * share;\n            bodyB.position.y += force.y * share;\n\n            // apply damping\n            if (constraint.damping) {\n                bodyB.positionPrev.x += constraint.damping * normal.x * normalVelocity * share;\n                bodyB.positionPrev.y += constraint.damping * normal.y * normalVelocity * share;\n            }\n\n            // apply torque\n            torque = (Vector.cross(pointB, force) / resistanceTotal) * Constraint._torqueDampen * bodyB.inverseInertia * (1 - constraint.angularStiffness);\n            bodyB.constraintImpulse.angle += torque;\n            bodyB.angle += torque;\n        }\n\n    };\n\n    /**\n     * Performs body updates required after solving constraints.\n     * @private\n     * @method postSolveAll\n     * @param {body[]} bodies\n     */\n    Constraint.postSolveAll = function(bodies) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                impulse = body.constraintImpulse;\n\n            if (body.isStatic || (impulse.x === 0 && impulse.y === 0 && impulse.angle === 0)) {\n                continue;\n            }\n\n            Sleeping.set(body, false);\n\n            // update geometry and reset\n            for (var j = 0; j < body.parts.length; j++) {\n                var part = body.parts[j];\n                \n                Vertices.translate(part.vertices, impulse);\n\n                if (j > 0) {\n                    part.position.x += impulse.x;\n                    part.position.y += impulse.y;\n                }\n\n                if (impulse.angle !== 0) {\n                    Vertices.rotate(part.vertices, impulse.angle, body.position);\n                    Axes.rotate(part.axes, impulse.angle);\n                    if (j > 0) {\n                        Vector.rotateAbout(part.position, impulse.angle, body.position, part.position);\n                    }\n                }\n\n                Bounds.update(part.bounds, part.vertices, body.velocity);\n            }\n\n            // dampen the cached impulse for warming next step\n            impulse.angle *= Constraint._warming;\n            impulse.x *= Constraint._warming;\n            impulse.y *= Constraint._warming;\n        }\n    };\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` uniquely identifying number generated in `Composite.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"constraint\"\n     * @readOnly\n     */\n\n    /**\n     * An arbitrary `String` name to help the user identify and manage bodies.\n     *\n     * @property label\n     * @type string\n     * @default \"Constraint\"\n     */\n\n    /**\n     * An `Object` that defines the rendering properties to be consumed by the module `Matter.Render`.\n     *\n     * @property render\n     * @type object\n     */\n\n    /**\n     * A flag that indicates if the constraint should be rendered.\n     *\n     * @property render.visible\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * A `Number` that defines the line width to use when rendering the constraint outline.\n     * A value of `0` means no outline will be rendered.\n     *\n     * @property render.lineWidth\n     * @type number\n     * @default 2\n     */\n\n    /**\n     * A `String` that defines the stroke style to use when rendering the constraint outline.\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.strokeStyle\n     * @type string\n     * @default a random colour\n     */\n\n    /**\n     * A `String` that defines the constraint rendering type. \n     * The possible values are 'line', 'pin', 'spring'.\n     * An appropriate render type will be automatically chosen unless one is given in options.\n     *\n     * @property render.type\n     * @type string\n     * @default 'line'\n     */\n\n    /**\n     * A `Boolean` that defines if the constraint's anchor points should be rendered.\n     *\n     * @property render.anchors\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * The first possible `Body` that this constraint is attached to.\n     *\n     * @property bodyA\n     * @type body\n     * @default null\n     */\n\n    /**\n     * The second possible `Body` that this constraint is attached to.\n     *\n     * @property bodyB\n     * @type body\n     * @default null\n     */\n\n    /**\n     * A `Vector` that specifies the offset of the constraint from center of the `constraint.bodyA` if defined, otherwise a world-space position.\n     *\n     * @property pointA\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Vector` that specifies the offset of the constraint from center of the `constraint.bodyB` if defined, otherwise a world-space position.\n     *\n     * @property pointB\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Number` that specifies the stiffness of the constraint, i.e. the rate at which it returns to its resting `constraint.length`.\n     * A value of `1` means the constraint should be very stiff.\n     * A value of `0.2` means the constraint acts like a soft spring.\n     *\n     * @property stiffness\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A `Number` that specifies the damping of the constraint, \n     * i.e. the amount of resistance applied to each body based on their velocities to limit the amount of oscillation.\n     * Damping will only be apparent when the constraint also has a very low `stiffness`.\n     * A value of `0.1` means the constraint will apply heavy damping, resulting in little to no oscillation.\n     * A value of `0` means the constraint will apply no damping.\n     *\n     * @property damping\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that specifies the target resting length of the constraint. \n     * It is calculated automatically in `Constraint.create` from initial positions of the `constraint.bodyA` and `constraint.bodyB`.\n     *\n     * @property length\n     * @type number\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n})();\n\n},{\"../core/Common\":14,\"../core/Sleeping\":22,\"../geometry/Axes\":25,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29}],13:[function(_dereq_,module,exports){\n/**\n* The `Matter.MouseConstraint` module contains methods for creating mouse constraints.\n* Mouse constraints are used for allowing user interaction, providing the ability to move bodies via the mouse or touch.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class MouseConstraint\n*/\n\nvar MouseConstraint = {};\n\nmodule.exports = MouseConstraint;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Sleeping = _dereq_('../core/Sleeping');\nvar Mouse = _dereq_('../core/Mouse');\nvar Events = _dereq_('../core/Events');\nvar Detector = _dereq_('../collision/Detector');\nvar Constraint = _dereq_('./Constraint');\nvar Composite = _dereq_('../body/Composite');\nvar Common = _dereq_('../core/Common');\nvar Bounds = _dereq_('../geometry/Bounds');\n\n(function() {\n\n    /**\n     * Creates a new mouse constraint.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {engine} engine\n     * @param {} options\n     * @return {MouseConstraint} A new MouseConstraint\n     */\n    MouseConstraint.create = function(engine, options) {\n        var mouse = (engine ? engine.mouse : null) || (options ? options.mouse : null);\n\n        if (!mouse) {\n            if (engine && engine.render && engine.render.canvas) {\n                mouse = Mouse.create(engine.render.canvas);\n            } else if (options && options.element) {\n                mouse = Mouse.create(options.element);\n            } else {\n                mouse = Mouse.create();\n                Common.warn('MouseConstraint.create: options.mouse was undefined, options.element was undefined, may not function as expected');\n            }\n        }\n\n        var constraint = Constraint.create({ \n            label: 'Mouse Constraint',\n            pointA: mouse.position,\n            pointB: { x: 0, y: 0 },\n            length: 0.01, \n            stiffness: 0.1,\n            angularStiffness: 1,\n            render: {\n                strokeStyle: '#90EE90',\n                lineWidth: 3\n            }\n        });\n\n        var defaults = {\n            type: 'mouseConstraint',\n            mouse: mouse,\n            element: null,\n            body: null,\n            constraint: constraint,\n            collisionFilter: {\n                category: 0x0001,\n                mask: 0xFFFFFFFF,\n                group: 0\n            }\n        };\n\n        var mouseConstraint = Common.extend(defaults, options);\n\n        Events.on(engine, 'beforeUpdate', function() {\n            var allBodies = Composite.allBodies(engine.world);\n            MouseConstraint.update(mouseConstraint, allBodies);\n            MouseConstraint._triggerEvents(mouseConstraint);\n        });\n\n        return mouseConstraint;\n    };\n\n    /**\n     * Updates the given mouse constraint.\n     * @private\n     * @method update\n     * @param {MouseConstraint} mouseConstraint\n     * @param {body[]} bodies\n     */\n    MouseConstraint.update = function(mouseConstraint, bodies) {\n        var mouse = mouseConstraint.mouse,\n            constraint = mouseConstraint.constraint,\n            body = mouseConstraint.body;\n\n        if (mouse.button === 0) {\n            if (!constraint.bodyB) {\n                for (var i = 0; i < bodies.length; i++) {\n                    body = bodies[i];\n                    if (Bounds.contains(body.bounds, mouse.position) \n                            && Detector.canCollide(body.collisionFilter, mouseConstraint.collisionFilter)) {\n                        for (var j = body.parts.length > 1 ? 1 : 0; j < body.parts.length; j++) {\n                            var part = body.parts[j];\n                            if (Vertices.contains(part.vertices, mouse.position)) {\n                                constraint.pointA = mouse.position;\n                                constraint.bodyB = mouseConstraint.body = body;\n                                constraint.pointB = { x: mouse.position.x - body.position.x, y: mouse.position.y - body.position.y };\n                                constraint.angleB = body.angle;\n\n                                Sleeping.set(body, false);\n                                Events.trigger(mouseConstraint, 'startdrag', { mouse: mouse, body: body });\n\n                                break;\n                            }\n                        }\n                    }\n                }\n            } else {\n                Sleeping.set(constraint.bodyB, false);\n                constraint.pointA = mouse.position;\n            }\n        } else {\n            constraint.bodyB = mouseConstraint.body = null;\n            constraint.pointB = null;\n\n            if (body)\n                Events.trigger(mouseConstraint, 'enddrag', { mouse: mouse, body: body });\n        }\n    };\n\n    /**\n     * Triggers mouse constraint events.\n     * @method _triggerEvents\n     * @private\n     * @param {mouse} mouseConstraint\n     */\n    MouseConstraint._triggerEvents = function(mouseConstraint) {\n        var mouse = mouseConstraint.mouse,\n            mouseEvents = mouse.sourceEvents;\n\n        if (mouseEvents.mousemove)\n            Events.trigger(mouseConstraint, 'mousemove', { mouse: mouse });\n\n        if (mouseEvents.mousedown)\n            Events.trigger(mouseConstraint, 'mousedown', { mouse: mouse });\n\n        if (mouseEvents.mouseup)\n            Events.trigger(mouseConstraint, 'mouseup', { mouse: mouse });\n\n        // reset the mouse state ready for the next step\n        Mouse.clearSourceEvents(mouse);\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired when the mouse has moved (or a touch moves) during the last step\n    *\n    * @event mousemove\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the mouse is down (or a touch has started) during the last step\n    *\n    * @event mousedown\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the mouse is up (or a touch has ended) during the last step\n    *\n    * @event mouseup\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the user starts dragging a body\n    *\n    * @event startdrag\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {body} event.body The body being dragged\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the user ends dragging a body\n    *\n    * @event enddrag\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {body} event.body The body that has stopped being dragged\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"constraint\"\n     * @readOnly\n     */\n\n    /**\n     * The `Mouse` instance in use. If not supplied in `MouseConstraint.create`, one will be created.\n     *\n     * @property mouse\n     * @type mouse\n     * @default mouse\n     */\n\n    /**\n     * The `Body` that is currently being moved by the user, or `null` if no body.\n     *\n     * @property body\n     * @type body\n     * @default null\n     */\n\n    /**\n     * The `Constraint` object that is used to move the body during interaction.\n     *\n     * @property constraint\n     * @type constraint\n     */\n\n    /**\n     * An `Object` that specifies the collision filter properties.\n     * The collision filter allows the user to define which types of body this mouse constraint can interact with.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter\n     * @type object\n     */\n\n})();\n\n},{\"../body/Composite\":2,\"../collision/Detector\":5,\"../core/Common\":14,\"../core/Events\":16,\"../core/Mouse\":19,\"../core/Sleeping\":22,\"../geometry/Bounds\":26,\"../geometry/Vertices\":29,\"./Constraint\":12}],14:[function(_dereq_,module,exports){\n(function (global){\n/**\n* The `Matter.Common` module contains utility functions that are common to all modules.\n*\n* @class Common\n*/\n\nvar Common = {};\n\nmodule.exports = Common;\n\n(function() {\n\n    Common._nextId = 0;\n    Common._seed = 0;\n    Common._nowStartTime = +(new Date());\n\n    /**\n     * Extends the object in the first argument using the object in the second argument.\n     * @method extend\n     * @param {} obj\n     * @param {boolean} deep\n     * @return {} obj extended\n     */\n    Common.extend = function(obj, deep) {\n        var argsStart,\n            args,\n            deepClone;\n\n        if (typeof deep === 'boolean') {\n            argsStart = 2;\n            deepClone = deep;\n        } else {\n            argsStart = 1;\n            deepClone = true;\n        }\n\n        for (var i = argsStart; i < arguments.length; i++) {\n            var source = arguments[i];\n\n            if (source) {\n                for (var prop in source) {\n                    if (deepClone && source[prop] && source[prop].constructor === Object) {\n                        if (!obj[prop] || obj[prop].constructor === Object) {\n                            obj[prop] = obj[prop] || {};\n                            Common.extend(obj[prop], deepClone, source[prop]);\n                        } else {\n                            obj[prop] = source[prop];\n                        }\n                    } else {\n                        obj[prop] = source[prop];\n                    }\n                }\n            }\n        }\n        \n        return obj;\n    };\n\n    /**\n     * Creates a new clone of the object, if deep is true references will also be cloned.\n     * @method clone\n     * @param {} obj\n     * @param {bool} deep\n     * @return {} obj cloned\n     */\n    Common.clone = function(obj, deep) {\n        return Common.extend({}, deep, obj);\n    };\n\n    /**\n     * Returns the list of keys for the given object.\n     * @method keys\n     * @param {} obj\n     * @return {string[]} keys\n     */\n    Common.keys = function(obj) {\n        if (Object.keys)\n            return Object.keys(obj);\n\n        // avoid hasOwnProperty for performance\n        var keys = [];\n        for (var key in obj)\n            keys.push(key);\n        return keys;\n    };\n\n    /**\n     * Returns the list of values for the given object.\n     * @method values\n     * @param {} obj\n     * @return {array} Array of the objects property values\n     */\n    Common.values = function(obj) {\n        var values = [];\n        \n        if (Object.keys) {\n            var keys = Object.keys(obj);\n            for (var i = 0; i < keys.length; i++) {\n                values.push(obj[keys[i]]);\n            }\n            return values;\n        }\n        \n        // avoid hasOwnProperty for performance\n        for (var key in obj)\n            values.push(obj[key]);\n        return values;\n    };\n\n    /**\n     * Gets a value from `base` relative to the `path` string.\n     * @method get\n     * @param {} obj The base object\n     * @param {string} path The path relative to `base`, e.g. 'Foo.Bar.baz'\n     * @param {number} [begin] Path slice begin\n     * @param {number} [end] Path slice end\n     * @return {} The object at the given path\n     */\n    Common.get = function(obj, path, begin, end) {\n        path = path.split('.').slice(begin, end);\n\n        for (var i = 0; i < path.length; i += 1) {\n            obj = obj[path[i]];\n        }\n\n        return obj;\n    };\n\n    /**\n     * Sets a value on `base` relative to the given `path` string.\n     * @method set\n     * @param {} obj The base object\n     * @param {string} path The path relative to `base`, e.g. 'Foo.Bar.baz'\n     * @param {} val The value to set\n     * @param {number} [begin] Path slice begin\n     * @param {number} [end] Path slice end\n     * @return {} Pass through `val` for chaining\n     */\n    Common.set = function(obj, path, val, begin, end) {\n        var parts = path.split('.').slice(begin, end);\n        Common.get(obj, path, 0, -1)[parts[parts.length - 1]] = val;\n        return val;\n    };\n\n    /**\n     * Shuffles the given array in-place.\n     * The function uses a seeded random generator.\n     * @method shuffle\n     * @param {array} array\n     * @return {array} array shuffled randomly\n     */\n    Common.shuffle = function(array) {\n        for (var i = array.length - 1; i > 0; i--) {\n            var j = Math.floor(Common.random() * (i + 1));\n            var temp = array[i];\n            array[i] = array[j];\n            array[j] = temp;\n        }\n        return array;\n    };\n\n    /**\n     * Randomly chooses a value from a list with equal probability.\n     * The function uses a seeded random generator.\n     * @method choose\n     * @param {array} choices\n     * @return {object} A random choice object from the array\n     */\n    Common.choose = function(choices) {\n        return choices[Math.floor(Common.random() * choices.length)];\n    };\n\n    /**\n     * Returns true if the object is a HTMLElement, otherwise false.\n     * @method isElement\n     * @param {object} obj\n     * @return {boolean} True if the object is a HTMLElement, otherwise false\n     */\n    Common.isElement = function(obj) {\n        if (typeof HTMLElement !== 'undefined') {\n            return obj instanceof HTMLElement;\n        }\n\n        return !!(obj && obj.nodeType && obj.nodeName);\n    };\n\n    /**\n     * Returns true if the object is an array.\n     * @method isArray\n     * @param {object} obj\n     * @return {boolean} True if the object is an array, otherwise false\n     */\n    Common.isArray = function(obj) {\n        return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n\n    /**\n     * Returns true if the object is a function.\n     * @method isFunction\n     * @param {object} obj\n     * @return {boolean} True if the object is a function, otherwise false\n     */\n    Common.isFunction = function(obj) {\n        return typeof obj === \"function\";\n    };\n\n    /**\n     * Returns true if the object is a plain object.\n     * @method isPlainObject\n     * @param {object} obj\n     * @return {boolean} True if the object is a plain object, otherwise false\n     */\n    Common.isPlainObject = function(obj) {\n        return typeof obj === 'object' && obj.constructor === Object;\n    };\n\n    /**\n     * Returns true if the object is a string.\n     * @method isString\n     * @param {object} obj\n     * @return {boolean} True if the object is a string, otherwise false\n     */\n    Common.isString = function(obj) {\n        return toString.call(obj) === '[object String]';\n    };\n    \n    /**\n     * Returns the given value clamped between a minimum and maximum value.\n     * @method clamp\n     * @param {number} value\n     * @param {number} min\n     * @param {number} max\n     * @return {number} The value clamped between min and max inclusive\n     */\n    Common.clamp = function(value, min, max) {\n        if (value < min)\n            return min;\n        if (value > max)\n            return max;\n        return value;\n    };\n    \n    /**\n     * Returns the sign of the given value.\n     * @method sign\n     * @param {number} value\n     * @return {number} -1 if negative, +1 if 0 or positive\n     */\n    Common.sign = function(value) {\n        return value < 0 ? -1 : 1;\n    };\n    \n    /**\n     * Returns the current timestamp since the time origin (e.g. from page load).\n     * The result will be high-resolution including decimal places if available.\n     * @method now\n     * @return {number} the current timestamp\n     */\n    Common.now = function() {\n        if (window.performance) {\n            if (window.performance.now) {\n                return window.performance.now();\n            } else if (window.performance.webkitNow) {\n                return window.performance.webkitNow();\n            }\n        }\n\n        return (new Date()) - Common._nowStartTime;\n    };\n    \n    /**\n     * Returns a random value between a minimum and a maximum value inclusive.\n     * The function uses a seeded random generator.\n     * @method random\n     * @param {number} min\n     * @param {number} max\n     * @return {number} A random number between min and max inclusive\n     */\n    Common.random = function(min, max) {\n        min = (typeof min !== \"undefined\") ? min : 0;\n        max = (typeof max !== \"undefined\") ? max : 1;\n        return min + _seededRandom() * (max - min);\n    };\n\n    var _seededRandom = function() {\n        // https://en.wikipedia.org/wiki/Linear_congruential_generator\n        Common._seed = (Common._seed * 9301 + 49297) % 233280;\n        return Common._seed / 233280;\n    };\n\n    /**\n     * Converts a CSS hex colour string into an integer.\n     * @method colorToNumber\n     * @param {string} colorString\n     * @return {number} An integer representing the CSS hex string\n     */\n    Common.colorToNumber = function(colorString) {\n        colorString = colorString.replace('#','');\n\n        if (colorString.length == 3) {\n            colorString = colorString.charAt(0) + colorString.charAt(0)\n                        + colorString.charAt(1) + colorString.charAt(1)\n                        + colorString.charAt(2) + colorString.charAt(2);\n        }\n\n        return parseInt(colorString, 16);\n    };\n\n    /**\n     * The console logging level to use, where each level includes all levels above and excludes the levels below.\n     * The default level is 'debug' which shows all console messages.  \n     *\n     * Possible level values are:\n     * - 0 = None\n     * - 1 = Debug\n     * - 2 = Info\n     * - 3 = Warn\n     * - 4 = Error\n     * @property Common.logLevel\n     * @type {Number}\n     * @default 1\n     */\n    Common.logLevel = 1;\n\n    /**\n     * Shows a `console.log` message only if the current `Common.logLevel` allows it.\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\n     * @method log\n     * @param ...objs {} The objects to log.\n     */\n    Common.log = function() {\n        if (console && Common.logLevel > 0 && Common.logLevel <= 3) {\n            console.log.apply(console, ['matter-js:'].concat(Array.prototype.slice.call(arguments)));\n        }\n    };\n\n    /**\n     * Shows a `console.info` message only if the current `Common.logLevel` allows it.\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\n     * @method info\n     * @param ...objs {} The objects to log.\n     */\n    Common.info = function() {\n        if (console && Common.logLevel > 0 && Common.logLevel <= 2) {\n            console.info.apply(console, ['matter-js:'].concat(Array.prototype.slice.call(arguments)));\n        }\n    };\n\n    /**\n     * Shows a `console.warn` message only if the current `Common.logLevel` allows it.\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\n     * @method warn\n     * @param ...objs {} The objects to log.\n     */\n    Common.warn = function() {\n        if (console && Common.logLevel > 0 && Common.logLevel <= 3) {\n            console.warn.apply(console, ['matter-js:'].concat(Array.prototype.slice.call(arguments)));\n        }\n    };\n\n    /**\n     * Returns the next unique sequential ID.\n     * @method nextId\n     * @return {Number} Unique sequential ID\n     */\n    Common.nextId = function() {\n        return Common._nextId++;\n    };\n\n    /**\n     * A cross browser compatible indexOf implementation.\n     * @method indexOf\n     * @param {array} haystack\n     * @param {object} needle\n     * @return {number} The position of needle in haystack, otherwise -1.\n     */\n    Common.indexOf = function(haystack, needle) {\n        if (haystack.indexOf)\n            return haystack.indexOf(needle);\n\n        for (var i = 0; i < haystack.length; i++) {\n            if (haystack[i] === needle)\n                return i;\n        }\n\n        return -1;\n    };\n\n    /**\n     * A cross browser compatible array map implementation.\n     * @method map\n     * @param {array} list\n     * @param {function} func\n     * @return {array} Values from list transformed by func.\n     */\n    Common.map = function(list, func) {\n        if (list.map) {\n            return list.map(func);\n        }\n\n        var mapped = [];\n\n        for (var i = 0; i < list.length; i += 1) {\n            mapped.push(func(list[i]));\n        }\n\n        return mapped;\n    };\n\n    /**\n     * Takes a directed graph and returns the partially ordered set of vertices in topological order.\n     * Circular dependencies are allowed.\n     * @method topologicalSort\n     * @param {object} graph\n     * @return {array} Partially ordered set of vertices in topological order.\n     */\n    Common.topologicalSort = function(graph) {\n        // https://github.com/mgechev/javascript-algorithms\n        // Copyright (c) Minko Gechev (MIT license)\n        // Modifications: tidy formatting and naming\n        var result = [],\n            visited = [],\n            temp = [];\n\n        for (var node in graph) {\n            if (!visited[node] && !temp[node]) {\n                Common._topologicalSort(node, visited, temp, graph, result);\n            }\n        }\n\n        return result;\n    };\n\n    Common._topologicalSort = function(node, visited, temp, graph, result) {\n        var neighbors = graph[node] || [];\n        temp[node] = true;\n\n        for (var i = 0; i < neighbors.length; i += 1) {\n            var neighbor = neighbors[i];\n\n            if (temp[neighbor]) {\n                // skip circular dependencies\n                continue;\n            }\n\n            if (!visited[neighbor]) {\n                Common._topologicalSort(neighbor, visited, temp, graph, result);\n            }\n        }\n\n        temp[node] = false;\n        visited[node] = true;\n\n        result.push(node);\n    };\n\n    /**\n     * Takes _n_ functions as arguments and returns a new function that calls them in order.\n     * The arguments applied when calling the new function will also be applied to every function passed.\n     * The value of `this` refers to the last value returned in the chain that was not `undefined`.\n     * Therefore if a passed function does not return a value, the previously returned value is maintained.\n     * After all passed functions have been called the new function returns the last returned value (if any).\n     * If any of the passed functions are a chain, then the chain will be flattened.\n     * @method chain\n     * @param ...funcs {function} The functions to chain.\n     * @return {function} A new function that calls the passed functions in order.\n     */\n    Common.chain = function() {\n        var funcs = [];\n\n        for (var i = 0; i < arguments.length; i += 1) {\n            var func = arguments[i];\n\n            if (func._chained) {\n                // flatten already chained functions\n                funcs.push.apply(funcs, func._chained);\n            } else {\n                funcs.push(func);\n            }\n        }\n\n        var chain = function() {\n            // https://github.com/GoogleChrome/devtools-docs/issues/53#issuecomment-51941358\n            var lastResult,\n                args = new Array(arguments.length);\n\n            for (var i = 0, l = arguments.length; i < l; i++) {\n                args[i] = arguments[i];\n            }\n\n            for (i = 0; i < funcs.length; i += 1) {\n                var result = funcs[i].apply(lastResult, args);\n\n                if (typeof result !== 'undefined') {\n                    lastResult = result;\n                }\n            }\n\n            return lastResult;\n        };\n\n        chain._chained = funcs;\n\n        return chain;\n    };\n\n    /**\n     * Chains a function to excute before the original function on the given `path` relative to `base`.\n     * See also docs for `Common.chain`.\n     * @method chainPathBefore\n     * @param {} base The base object\n     * @param {string} path The path relative to `base`\n     * @param {function} func The function to chain before the original\n     * @return {function} The chained function that replaced the original\n     */\n    Common.chainPathBefore = function(base, path, func) {\n        return Common.set(base, path, Common.chain(\n            func,\n            Common.get(base, path)\n        ));\n    };\n\n    /**\n     * Chains a function to excute after the original function on the given `path` relative to `base`.\n     * See also docs for `Common.chain`.\n     * @method chainPathAfter\n     * @param {} base The base object\n     * @param {string} path The path relative to `base`\n     * @param {function} func The function to chain after the original\n     * @return {function} The chained function that replaced the original\n     */\n    Common.chainPathAfter = function(base, path, func) {\n        return Common.set(base, path, Common.chain(\n            Common.get(base, path),\n            func\n        ));\n    };\n\n    /**\n     * Used to require external libraries outside of the bundle.\n     * It first looks for the `globalName` on the environment's global namespace.\n     * If the global is not found, it will fall back to using the standard `require` using the `moduleName`.\n     * @private\n     * @method _requireGlobal\n     * @param {string} globalName The global module name\n     * @param {string} moduleName The fallback CommonJS module name\n     * @return {} The loaded module\n     */\n    Common._requireGlobal = function(globalName, moduleName) {\n        var obj = (typeof window !== 'undefined' ? window[globalName] : typeof global !== 'undefined' ? global[globalName] : null);\n        return obj || _dereq_(moduleName);\n    };\n})();\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],15:[function(_dereq_,module,exports){\n/**\n* The `Matter.Engine` module contains methods for creating and manipulating engines.\n* An engine is a controller that manages updating the simulation of the world.\n* See `Matter.Runner` for an optional game loop utility.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Engine\n*/\n\nvar Engine = {};\n\nmodule.exports = Engine;\n\nvar World = _dereq_('../body/World');\nvar Sleeping = _dereq_('./Sleeping');\nvar Resolver = _dereq_('../collision/Resolver');\nvar Render = _dereq_('../render/Render');\nvar Pairs = _dereq_('../collision/Pairs');\nvar Metrics = _dereq_('./Metrics');\nvar Grid = _dereq_('../collision/Grid');\nvar Events = _dereq_('./Events');\nvar Composite = _dereq_('../body/Composite');\nvar Constraint = _dereq_('../constraint/Constraint');\nvar Common = _dereq_('./Common');\nvar Body = _dereq_('../body/Body');\n\n(function() {\n\n    /**\n     * Creates a new engine. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {object} [options]\n     * @return {engine} engine\n     */\n    Engine.create = function(element, options) {\n        // options may be passed as the first (and only) argument\n        options = Common.isElement(element) ? options : element;\n        element = Common.isElement(element) ? element : null;\n        options = options || {};\n\n        if (element || options.render) {\n            Common.warn('Engine.create: engine.render is deprecated (see docs)');\n        }\n\n        var defaults = {\n            positionIterations: 6,\n            velocityIterations: 4,\n            constraintIterations: 2,\n            enableSleeping: false,\n            events: [],\n            plugin: {},\n            timing: {\n                timestamp: 0,\n                timeScale: 1\n            },\n            broadphase: {\n                controller: Grid\n            }\n        };\n\n        var engine = Common.extend(defaults, options);\n\n        // @deprecated\n        if (element || engine.render) {\n            var renderDefaults = {\n                element: element,\n                controller: Render\n            };\n            \n            engine.render = Common.extend(renderDefaults, engine.render);\n        }\n\n        // @deprecated\n        if (engine.render && engine.render.controller) {\n            engine.render = engine.render.controller.create(engine.render);\n        }\n\n        // @deprecated\n        if (engine.render) {\n            engine.render.engine = engine;\n        }\n\n        engine.world = options.world || World.create(engine.world);\n        engine.pairs = Pairs.create();\n        engine.broadphase = engine.broadphase.controller.create(engine.broadphase);\n        engine.metrics = engine.metrics || { extended: false };\n\n\n        return engine;\n    };\n\n    /**\n     * Moves the simulation forward in time by `delta` ms.\n     * The `correction` argument is an optional `Number` that specifies the time correction factor to apply to the update.\n     * This can help improve the accuracy of the simulation in cases where `delta` is changing between updates.\n     * The value of `correction` is defined as `delta / lastDelta`, i.e. the percentage change of `delta` over the last step.\n     * Therefore the value is always `1` (no correction) when `delta` constant (or when no correction is desired, which is the default).\n     * See the paper on <a href=\"http://lonesock.net/article/verlet.html\">Time Corrected Verlet</a> for more information.\n     *\n     * Triggers `beforeUpdate` and `afterUpdate` events.\n     * Triggers `collisionStart`, `collisionActive` and `collisionEnd` events.\n     * @method update\n     * @param {engine} engine\n     * @param {number} [delta=16.666]\n     * @param {number} [correction=1]\n     */\n    Engine.update = function(engine, delta, correction) {\n        delta = delta || 1000 / 60;\n        correction = correction || 1;\n\n        var world = engine.world,\n            timing = engine.timing,\n            broadphase = engine.broadphase,\n            broadphasePairs = [],\n            i;\n\n        // increment timestamp\n        timing.timestamp += delta * timing.timeScale;\n\n        // create an event object\n        var event = {\n            timestamp: timing.timestamp\n        };\n\n        Events.trigger(engine, 'beforeUpdate', event);\n\n        // get lists of all bodies and constraints, no matter what composites they are in\n        var allBodies = Composite.allBodies(world),\n            allConstraints = Composite.allConstraints(world);\n\n\n        // if sleeping enabled, call the sleeping controller\n        if (engine.enableSleeping)\n            Sleeping.update(allBodies, timing.timeScale);\n\n        // applies gravity to all bodies\n        Engine._bodiesApplyGravity(allBodies, world.gravity);\n\n        // update all body position and rotation by integration\n        Engine._bodiesUpdate(allBodies, delta, timing.timeScale, correction, world.bounds);\n\n        // update all constraints (first pass)\n        Constraint.preSolveAll(allBodies);\n        for (i = 0; i < engine.constraintIterations; i++) {\n            Constraint.solveAll(allConstraints, timing.timeScale);\n        }\n        Constraint.postSolveAll(allBodies);\n\n        // broadphase pass: find potential collision pairs\n        if (broadphase.controller) {\n            // if world is dirty, we must flush the whole grid\n            if (world.isModified)\n                broadphase.controller.clear(broadphase);\n\n            // update the grid buckets based on current bodies\n            broadphase.controller.update(broadphase, allBodies, engine, world.isModified);\n            broadphasePairs = broadphase.pairsList;\n        } else {\n            // if no broadphase set, we just pass all bodies\n            broadphasePairs = allBodies;\n        }\n\n        // clear all composite modified flags\n        if (world.isModified) {\n            Composite.setModified(world, false, false, true);\n        }\n\n        // narrowphase pass: find actual collisions, then create or update collision pairs\n        var collisions = broadphase.detector(broadphasePairs, engine);\n\n        // update collision pairs\n        var pairs = engine.pairs,\n            timestamp = timing.timestamp;\n        Pairs.update(pairs, collisions, timestamp);\n        Pairs.removeOld(pairs, timestamp);\n\n        // wake up bodies involved in collisions\n        if (engine.enableSleeping)\n            Sleeping.afterCollisions(pairs.list, timing.timeScale);\n\n        // trigger collision events\n        if (pairs.collisionStart.length > 0)\n            Events.trigger(engine, 'collisionStart', { pairs: pairs.collisionStart });\n\n        // iteratively resolve position between collisions\n        Resolver.preSolvePosition(pairs.list);\n        for (i = 0; i < engine.positionIterations; i++) {\n            Resolver.solvePosition(pairs.list, timing.timeScale);\n        }\n        Resolver.postSolvePosition(allBodies);\n\n        // update all constraints (second pass)\n        Constraint.preSolveAll(allBodies);\n        for (i = 0; i < engine.constraintIterations; i++) {\n            Constraint.solveAll(allConstraints, timing.timeScale);\n        }\n        Constraint.postSolveAll(allBodies);\n\n        // iteratively resolve velocity between collisions\n        Resolver.preSolveVelocity(pairs.list);\n        for (i = 0; i < engine.velocityIterations; i++) {\n            Resolver.solveVelocity(pairs.list, timing.timeScale);\n        }\n\n        // trigger collision events\n        if (pairs.collisionActive.length > 0)\n            Events.trigger(engine, 'collisionActive', { pairs: pairs.collisionActive });\n\n        if (pairs.collisionEnd.length > 0)\n            Events.trigger(engine, 'collisionEnd', { pairs: pairs.collisionEnd });\n\n\n        // clear force buffers\n        Engine._bodiesClearForces(allBodies);\n\n        Events.trigger(engine, 'afterUpdate', event);\n\n        return engine;\n    };\n    \n    /**\n     * Merges two engines by keeping the configuration of `engineA` but replacing the world with the one from `engineB`.\n     * @method merge\n     * @param {engine} engineA\n     * @param {engine} engineB\n     */\n    Engine.merge = function(engineA, engineB) {\n        Common.extend(engineA, engineB);\n        \n        if (engineB.world) {\n            engineA.world = engineB.world;\n\n            Engine.clear(engineA);\n\n            var bodies = Composite.allBodies(engineA.world);\n\n            for (var i = 0; i < bodies.length; i++) {\n                var body = bodies[i];\n                Sleeping.set(body, false);\n                body.id = Common.nextId();\n            }\n        }\n    };\n\n    /**\n     * Clears the engine including the world, pairs and broadphase.\n     * @method clear\n     * @param {engine} engine\n     */\n    Engine.clear = function(engine) {\n        var world = engine.world;\n        \n        Pairs.clear(engine.pairs);\n\n        var broadphase = engine.broadphase;\n        if (broadphase.controller) {\n            var bodies = Composite.allBodies(world);\n            broadphase.controller.clear(broadphase);\n            broadphase.controller.update(broadphase, bodies, engine, true);\n        }\n    };\n\n    /**\n     * Zeroes the `body.force` and `body.torque` force buffers.\n     * @method _bodiesClearForces\n     * @private\n     * @param {body[]} bodies\n     */\n    Engine._bodiesClearForces = function(bodies) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            // reset force buffers\n            body.force.x = 0;\n            body.force.y = 0;\n            body.torque = 0;\n        }\n    };\n\n    /**\n     * Applys a mass dependant force to all given bodies.\n     * @method _bodiesApplyGravity\n     * @private\n     * @param {body[]} bodies\n     * @param {vector} gravity\n     */\n    Engine._bodiesApplyGravity = function(bodies, gravity) {\n        var gravityScale = typeof gravity.scale !== 'undefined' ? gravity.scale : 0.001;\n\n        if ((gravity.x === 0 && gravity.y === 0) || gravityScale === 0) {\n            return;\n        }\n        \n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.isStatic || body.isSleeping)\n                continue;\n\n            // apply gravity\n            body.force.y += body.mass * gravity.y * gravityScale;\n            body.force.x += body.mass * gravity.x * gravityScale;\n        }\n    };\n\n    /**\n     * Applys `Body.update` to all given `bodies`.\n     * @method _bodiesUpdate\n     * @private\n     * @param {body[]} bodies\n     * @param {number} deltaTime \n     * The amount of time elapsed between updates\n     * @param {number} timeScale\n     * @param {number} correction \n     * The Verlet correction factor (deltaTime / lastDeltaTime)\n     * @param {bounds} worldBounds\n     */\n    Engine._bodiesUpdate = function(bodies, deltaTime, timeScale, correction, worldBounds) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.isStatic || body.isSleeping)\n                continue;\n\n            Body.update(body, deltaTime, timeScale, correction);\n        }\n    };\n\n    /**\n     * An alias for `Runner.run`, see `Matter.Runner` for more information.\n     * @method run\n     * @param {engine} engine\n     */\n\n    /**\n    * Fired just before an update\n    *\n    * @event beforeUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update and all collision events\n    *\n    * @event afterUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update, provides a list of all pairs that have started to collide in the current tick (if any)\n    *\n    * @event collisionStart\n    * @param {} event An event object\n    * @param {} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update, provides a list of all pairs that are colliding in the current tick (if any)\n    *\n    * @event collisionActive\n    * @param {} event An event object\n    * @param {} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update, provides a list of all pairs that have ended collision in the current tick (if any)\n    *\n    * @event collisionEnd\n    * @param {} event An event object\n    * @param {} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` that specifies the number of position iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     *\n     * @property positionIterations\n     * @type number\n     * @default 6\n     */\n\n    /**\n     * An integer `Number` that specifies the number of velocity iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     *\n     * @property velocityIterations\n     * @type number\n     * @default 4\n     */\n\n    /**\n     * An integer `Number` that specifies the number of constraint iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     * The default value of `2` is usually very adequate.\n     *\n     * @property constraintIterations\n     * @type number\n     * @default 2\n     */\n\n    /**\n     * A flag that specifies whether the engine should allow sleeping via the `Matter.Sleeping` module.\n     * Sleeping can improve stability and performance, but often at the expense of accuracy.\n     *\n     * @property enableSleeping\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * An `Object` containing properties regarding the timing systems of the engine. \n     *\n     * @property timing\n     * @type object\n     */\n\n    /**\n     * A `Number` that specifies the global scaling factor of time for all bodies.\n     * A value of `0` freezes the simulation.\n     * A value of `0.1` gives a slow-motion effect.\n     * A value of `1.2` gives a speed-up effect.\n     *\n     * @property timing.timeScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A `Number` that specifies the current simulation-time in milliseconds starting from `0`. \n     * It is incremented on every `Engine.update` by the given `delta` argument. \n     *\n     * @property timing.timestamp\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * An instance of a `Render` controller. The default value is a `Matter.Render` instance created by `Engine.create`.\n     * One may also develop a custom renderer module based on `Matter.Render` and pass an instance of it to `Engine.create` via `options.render`.\n     *\n     * A minimal custom renderer object must define at least three functions: `create`, `clear` and `world` (see `Matter.Render`).\n     * It is also possible to instead pass the _module_ reference via `options.render.controller` and `Engine.create` will instantiate one for you.\n     *\n     * @property render\n     * @type render\n     * @deprecated see Demo.js for an example of creating a renderer\n     * @default a Matter.Render instance\n     */\n\n    /**\n     * An instance of a broadphase controller. The default value is a `Matter.Grid` instance created by `Engine.create`.\n     *\n     * @property broadphase\n     * @type grid\n     * @default a Matter.Grid instance\n     */\n\n    /**\n     * A `World` composite object that will contain all simulated bodies and constraints.\n     *\n     * @property world\n     * @type world\n     * @default a Matter.World instance\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n})();\n\n},{\"../body/Body\":1,\"../body/Composite\":2,\"../body/World\":3,\"../collision/Grid\":6,\"../collision/Pairs\":8,\"../collision/Resolver\":10,\"../constraint/Constraint\":12,\"../render/Render\":31,\"./Common\":14,\"./Events\":16,\"./Metrics\":18,\"./Sleeping\":22}],16:[function(_dereq_,module,exports){\n/**\n* The `Matter.Events` module contains methods to fire and listen to events on other objects.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Events\n*/\n\nvar Events = {};\n\nmodule.exports = Events;\n\nvar Common = _dereq_('./Common');\n\n(function() {\n\n    /**\n     * Subscribes a callback function to the given object's `eventName`.\n     * @method on\n     * @param {} object\n     * @param {string} eventNames\n     * @param {function} callback\n     */\n    Events.on = function(object, eventNames, callback) {\n        var names = eventNames.split(' '),\n            name;\n\n        for (var i = 0; i < names.length; i++) {\n            name = names[i];\n            object.events = object.events || {};\n            object.events[name] = object.events[name] || [];\n            object.events[name].push(callback);\n        }\n\n        return callback;\n    };\n\n    /**\n     * Removes the given event callback. If no callback, clears all callbacks in `eventNames`. If no `eventNames`, clears all events.\n     * @method off\n     * @param {} object\n     * @param {string} eventNames\n     * @param {function} callback\n     */\n    Events.off = function(object, eventNames, callback) {\n        if (!eventNames) {\n            object.events = {};\n            return;\n        }\n\n        // handle Events.off(object, callback)\n        if (typeof eventNames === 'function') {\n            callback = eventNames;\n            eventNames = Common.keys(object.events).join(' ');\n        }\n\n        var names = eventNames.split(' ');\n\n        for (var i = 0; i < names.length; i++) {\n            var callbacks = object.events[names[i]],\n                newCallbacks = [];\n\n            if (callback && callbacks) {\n                for (var j = 0; j < callbacks.length; j++) {\n                    if (callbacks[j] !== callback)\n                        newCallbacks.push(callbacks[j]);\n                }\n            }\n\n            object.events[names[i]] = newCallbacks;\n        }\n    };\n\n    /**\n     * Fires all the callbacks subscribed to the given object's `eventName`, in the order they subscribed, if any.\n     * @method trigger\n     * @param {} object\n     * @param {string} eventNames\n     * @param {} event\n     */\n    Events.trigger = function(object, eventNames, event) {\n        var names,\n            name,\n            callbacks,\n            eventClone;\n\n        if (object.events) {\n            if (!event)\n                event = {};\n\n            names = eventNames.split(' ');\n\n            for (var i = 0; i < names.length; i++) {\n                name = names[i];\n                callbacks = object.events[name];\n\n                if (callbacks) {\n                    eventClone = Common.clone(event, false);\n                    eventClone.name = name;\n                    eventClone.source = object;\n\n                    for (var j = 0; j < callbacks.length; j++) {\n                        callbacks[j].apply(object, [eventClone]);\n                    }\n                }\n            }\n        }\n    };\n\n})();\n\n},{\"./Common\":14}],17:[function(_dereq_,module,exports){\n/**\n* The `Matter` module is the top level namespace. It also includes a function for installing plugins on top of the library.\n*\n* @class Matter\n*/\n\nvar Matter = {};\n\nmodule.exports = Matter;\n\nvar Plugin = _dereq_('./Plugin');\nvar Common = _dereq_('./Common');\n\n(function() {\n\n    /**\n     * The library name.\n     * @property name\n     * @readOnly\n     * @type {String}\n     */\n    Matter.name = 'matter-js';\n\n    /**\n     * The library version.\n     * @property version\n     * @readOnly\n     * @type {String}\n     */\n    Matter.version = '0.14.2';\n\n    /**\n     * A list of plugin dependencies to be installed. These are normally set and installed through `Matter.use`.\n     * Alternatively you may set `Matter.uses` manually and install them by calling `Plugin.use(Matter)`.\n     * @property uses\n     * @type {Array}\n     */\n    Matter.uses = [];\n\n    /**\n     * The plugins that have been installed through `Matter.Plugin.install`. Read only.\n     * @property used\n     * @readOnly\n     * @type {Array}\n     */\n    Matter.used = [];\n\n    /**\n     * Installs the given plugins on the `Matter` namespace.\n     * This is a short-hand for `Plugin.use`, see it for more information.\n     * Call this function once at the start of your code, with all of the plugins you wish to install as arguments.\n     * Avoid calling this function multiple times unless you intend to manually control installation order.\n     * @method use\n     * @param ...plugin {Function} The plugin(s) to install on `base` (multi-argument).\n     */\n    Matter.use = function() {\n        Plugin.use(Matter, Array.prototype.slice.call(arguments));\n    };\n\n    /**\n     * Chains a function to excute before the original function on the given `path` relative to `Matter`.\n     * See also docs for `Common.chain`.\n     * @method before\n     * @param {string} path The path relative to `Matter`\n     * @param {function} func The function to chain before the original\n     * @return {function} The chained function that replaced the original\n     */\n    Matter.before = function(path, func) {\n        path = path.replace(/^Matter./, '');\n        return Common.chainPathBefore(Matter, path, func);\n    };\n\n    /**\n     * Chains a function to excute after the original function on the given `path` relative to `Matter`.\n     * See also docs for `Common.chain`.\n     * @method after\n     * @param {string} path The path relative to `Matter`\n     * @param {function} func The function to chain after the original\n     * @return {function} The chained function that replaced the original\n     */\n    Matter.after = function(path, func) {\n        path = path.replace(/^Matter./, '');\n        return Common.chainPathAfter(Matter, path, func);\n    };\n\n})();\n\n},{\"./Common\":14,\"./Plugin\":20}],18:[function(_dereq_,module,exports){\n\n},{\"../body/Composite\":2,\"./Common\":14}],19:[function(_dereq_,module,exports){\n/**\n* The `Matter.Mouse` module contains methods for creating and manipulating mouse inputs.\n*\n* @class Mouse\n*/\n\nvar Mouse = {};\n\nmodule.exports = Mouse;\n\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a mouse input.\n     * @method create\n     * @param {HTMLElement} element\n     * @return {mouse} A new mouse\n     */\n    Mouse.create = function(element) {\n        var mouse = {};\n\n        if (!element) {\n            Common.log('Mouse.create: element was undefined, defaulting to document.body', 'warn');\n        }\n        \n        mouse.element = element || document.body;\n        mouse.absolute = { x: 0, y: 0 };\n        mouse.position = { x: 0, y: 0 };\n        mouse.mousedownPosition = { x: 0, y: 0 };\n        mouse.mouseupPosition = { x: 0, y: 0 };\n        mouse.offset = { x: 0, y: 0 };\n        mouse.scale = { x: 1, y: 1 };\n        mouse.wheelDelta = 0;\n        mouse.button = -1;\n        mouse.pixelRatio = mouse.element.getAttribute('data-pixel-ratio') || 1;\n\n        mouse.sourceEvents = {\n            mousemove: null,\n            mousedown: null,\n            mouseup: null,\n            mousewheel: null\n        };\n        \n        mouse.mousemove = function(event) { \n            var position = Mouse._getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n                touches = event.changedTouches;\n\n            if (touches) {\n                mouse.button = 0;\n                event.preventDefault();\n            }\n\n            mouse.absolute.x = position.x;\n            mouse.absolute.y = position.y;\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            mouse.sourceEvents.mousemove = event;\n        };\n        \n        mouse.mousedown = function(event) {\n            var position = Mouse._getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n                touches = event.changedTouches;\n\n            if (touches) {\n                mouse.button = 0;\n                event.preventDefault();\n            } else {\n                mouse.button = event.button;\n            }\n\n            mouse.absolute.x = position.x;\n            mouse.absolute.y = position.y;\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            mouse.mousedownPosition.x = mouse.position.x;\n            mouse.mousedownPosition.y = mouse.position.y;\n            mouse.sourceEvents.mousedown = event;\n        };\n        \n        mouse.mouseup = function(event) {\n            var position = Mouse._getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n                touches = event.changedTouches;\n\n            if (touches) {\n                event.preventDefault();\n            }\n            \n            mouse.button = -1;\n            mouse.absolute.x = position.x;\n            mouse.absolute.y = position.y;\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            mouse.mouseupPosition.x = mouse.position.x;\n            mouse.mouseupPosition.y = mouse.position.y;\n            mouse.sourceEvents.mouseup = event;\n        };\n\n        mouse.mousewheel = function(event) {\n            mouse.wheelDelta = Math.max(-1, Math.min(1, event.wheelDelta || -event.detail));\n            event.preventDefault();\n        };\n\n        Mouse.setElement(mouse, mouse.element);\n\n        return mouse;\n    };\n\n    /**\n     * Sets the element the mouse is bound to (and relative to).\n     * @method setElement\n     * @param {mouse} mouse\n     * @param {HTMLElement} element\n     */\n    Mouse.setElement = function(mouse, element) {\n        mouse.element = element;\n\n        element.addEventListener('mousemove', mouse.mousemove);\n        element.addEventListener('mousedown', mouse.mousedown);\n        element.addEventListener('mouseup', mouse.mouseup);\n        \n        element.addEventListener('mousewheel', mouse.mousewheel);\n        element.addEventListener('DOMMouseScroll', mouse.mousewheel);\n\n        element.addEventListener('touchmove', mouse.mousemove);\n        element.addEventListener('touchstart', mouse.mousedown);\n        element.addEventListener('touchend', mouse.mouseup);\n    };\n\n    /**\n     * Clears all captured source events.\n     * @method clearSourceEvents\n     * @param {mouse} mouse\n     */\n    Mouse.clearSourceEvents = function(mouse) {\n        mouse.sourceEvents.mousemove = null;\n        mouse.sourceEvents.mousedown = null;\n        mouse.sourceEvents.mouseup = null;\n        mouse.sourceEvents.mousewheel = null;\n        mouse.wheelDelta = 0;\n    };\n\n    /**\n     * Sets the mouse position offset.\n     * @method setOffset\n     * @param {mouse} mouse\n     * @param {vector} offset\n     */\n    Mouse.setOffset = function(mouse, offset) {\n        mouse.offset.x = offset.x;\n        mouse.offset.y = offset.y;\n        mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n        mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n    };\n\n    /**\n     * Sets the mouse position scale.\n     * @method setScale\n     * @param {mouse} mouse\n     * @param {vector} scale\n     */\n    Mouse.setScale = function(mouse, scale) {\n        mouse.scale.x = scale.x;\n        mouse.scale.y = scale.y;\n        mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n        mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n    };\n    \n    /**\n     * Gets the mouse position relative to an element given a screen pixel ratio.\n     * @method _getRelativeMousePosition\n     * @private\n     * @param {} event\n     * @param {} element\n     * @param {number} pixelRatio\n     * @return {}\n     */\n    Mouse._getRelativeMousePosition = function(event, element, pixelRatio) {\n        var elementBounds = element.getBoundingClientRect(),\n            rootNode = (document.documentElement || document.body.parentNode || document.body),\n            scrollX = (window.pageXOffset !== undefined) ? window.pageXOffset : rootNode.scrollLeft,\n            scrollY = (window.pageYOffset !== undefined) ? window.pageYOffset : rootNode.scrollTop,\n            touches = event.changedTouches,\n            x, y;\n        \n        if (touches) {\n            x = touches[0].pageX - elementBounds.left - scrollX;\n            y = touches[0].pageY - elementBounds.top - scrollY;\n        } else {\n            x = event.pageX - elementBounds.left - scrollX;\n            y = event.pageY - elementBounds.top - scrollY;\n        }\n\n        return { \n            x: x / (element.clientWidth / (element.width || element.clientWidth) * pixelRatio),\n            y: y / (element.clientHeight / (element.height || element.clientHeight) * pixelRatio)\n        };\n    };\n\n})();\n\n},{\"../core/Common\":14}],20:[function(_dereq_,module,exports){\n/**\n* The `Matter.Plugin` module contains functions for registering and installing plugins on modules.\n*\n* @class Plugin\n*/\n\nvar Plugin = {};\n\nmodule.exports = Plugin;\n\nvar Common = _dereq_('./Common');\n\n(function() {\n\n    Plugin._registry = {};\n\n    /**\n     * Registers a plugin object so it can be resolved later by name.\n     * @method register\n     * @param plugin {} The plugin to register.\n     * @return {object} The plugin.\n     */\n    Plugin.register = function(plugin) {\n        if (!Plugin.isPlugin(plugin)) {\n            Common.warn('Plugin.register:', Plugin.toString(plugin), 'does not implement all required fields.');\n        }\n\n        if (plugin.name in Plugin._registry) {\n            var registered = Plugin._registry[plugin.name],\n                pluginVersion = Plugin.versionParse(plugin.version).number,\n                registeredVersion = Plugin.versionParse(registered.version).number;\n\n            if (pluginVersion > registeredVersion) {\n                Common.warn('Plugin.register:', Plugin.toString(registered), 'was upgraded to', Plugin.toString(plugin));\n                Plugin._registry[plugin.name] = plugin;\n            } else if (pluginVersion < registeredVersion) {\n                Common.warn('Plugin.register:', Plugin.toString(registered), 'can not be downgraded to', Plugin.toString(plugin));\n            } else if (plugin !== registered) {\n                Common.warn('Plugin.register:', Plugin.toString(plugin), 'is already registered to different plugin object');\n            }\n        } else {\n            Plugin._registry[plugin.name] = plugin;\n        }\n\n        return plugin;\n    };\n\n    /**\n     * Resolves a dependency to a plugin object from the registry if it exists. \n     * The `dependency` may contain a version, but only the name matters when resolving.\n     * @method resolve\n     * @param dependency {string} The dependency.\n     * @return {object} The plugin if resolved, otherwise `undefined`.\n     */\n    Plugin.resolve = function(dependency) {\n        return Plugin._registry[Plugin.dependencyParse(dependency).name];\n    };\n\n    /**\n     * Returns a pretty printed plugin name and version.\n     * @method toString\n     * @param plugin {} The plugin.\n     * @return {string} Pretty printed plugin name and version.\n     */\n    Plugin.toString = function(plugin) {\n        return typeof plugin === 'string' ? plugin : (plugin.name || 'anonymous') + '@' + (plugin.version || plugin.range || '0.0.0');\n    };\n\n    /**\n     * Returns `true` if the object meets the minimum standard to be considered a plugin.\n     * This means it must define the following properties:\n     * - `name`\n     * - `version`\n     * - `install`\n     * @method isPlugin\n     * @param obj {} The obj to test.\n     * @return {boolean} `true` if the object can be considered a plugin otherwise `false`.\n     */\n    Plugin.isPlugin = function(obj) {\n        return obj && obj.name && obj.version && obj.install;\n    };\n\n    /**\n     * Returns `true` if a plugin with the given `name` been installed on `module`.\n     * @method isUsed\n     * @param module {} The module.\n     * @param name {string} The plugin name.\n     * @return {boolean} `true` if a plugin with the given `name` been installed on `module`, otherwise `false`.\n     */\n    Plugin.isUsed = function(module, name) {\n        return module.used.indexOf(name) > -1;\n    };\n\n    /**\n     * Returns `true` if `plugin.for` is applicable to `module` by comparing against `module.name` and `module.version`.\n     * If `plugin.for` is not specified then it is assumed to be applicable.\n     * The value of `plugin.for` is a string of the format `'module-name'` or `'module-name@version'`.\n     * @method isFor\n     * @param plugin {} The plugin.\n     * @param module {} The module.\n     * @return {boolean} `true` if `plugin.for` is applicable to `module`, otherwise `false`.\n     */\n    Plugin.isFor = function(plugin, module) {\n        var parsed = plugin.for && Plugin.dependencyParse(plugin.for);\n        return !plugin.for || (module.name === parsed.name && Plugin.versionSatisfies(module.version, parsed.range));\n    };\n\n    /**\n     * Installs the plugins by calling `plugin.install` on each plugin specified in `plugins` if passed, otherwise `module.uses`.\n     * For installing plugins on `Matter` see the convenience function `Matter.use`.\n     * Plugins may be specified either by their name or a reference to the plugin object.\n     * Plugins themselves may specify further dependencies, but each plugin is installed only once.\n     * Order is important, a topological sort is performed to find the best resulting order of installation.\n     * This sorting attempts to satisfy every dependency's requested ordering, but may not be exact in all cases.\n     * This function logs the resulting status of each dependency in the console, along with any warnings.\n     * - A green tick ✅ indicates a dependency was resolved and installed.\n     * - An orange diamond 🔶 indicates a dependency was resolved but a warning was thrown for it or one if its dependencies.\n     * - A red cross ❌ indicates a dependency could not be resolved.\n     * Avoid calling this function multiple times on the same module unless you intend to manually control installation order.\n     * @method use\n     * @param module {} The module install plugins on.\n     * @param [plugins=module.uses] {} The plugins to install on module (optional, defaults to `module.uses`).\n     */\n    Plugin.use = function(module, plugins) {\n        module.uses = (module.uses || []).concat(plugins || []);\n\n        if (module.uses.length === 0) {\n            Common.warn('Plugin.use:', Plugin.toString(module), 'does not specify any dependencies to install.');\n            return;\n        }\n\n        var dependencies = Plugin.dependencies(module),\n            sortedDependencies = Common.topologicalSort(dependencies),\n            status = [];\n\n        for (var i = 0; i < sortedDependencies.length; i += 1) {\n            if (sortedDependencies[i] === module.name) {\n                continue;\n            }\n\n            var plugin = Plugin.resolve(sortedDependencies[i]);\n\n            if (!plugin) {\n                status.push('❌ ' + sortedDependencies[i]);\n                continue;\n            }\n\n            if (Plugin.isUsed(module, plugin.name)) {\n                continue;\n            }\n\n            if (!Plugin.isFor(plugin, module)) {\n                Common.warn('Plugin.use:', Plugin.toString(plugin), 'is for', plugin.for, 'but installed on', Plugin.toString(module) + '.');\n                plugin._warned = true;\n            }\n\n            if (plugin.install) {\n                plugin.install(module);\n            } else {\n                Common.warn('Plugin.use:', Plugin.toString(plugin), 'does not specify an install function.');\n                plugin._warned = true;\n            }\n\n            if (plugin._warned) {\n                status.push('🔶 ' + Plugin.toString(plugin));\n                delete plugin._warned;\n            } else {\n                status.push('✅ ' + Plugin.toString(plugin));\n            }\n\n            module.used.push(plugin.name);\n        }\n\n        if (status.length > 0) {\n            Common.info(status.join('  '));\n        }\n    };\n\n    /**\n     * Recursively finds all of a module's dependencies and returns a flat dependency graph.\n     * @method dependencies\n     * @param module {} The module.\n     * @return {object} A dependency graph.\n     */\n    Plugin.dependencies = function(module, tracked) {\n        var parsedBase = Plugin.dependencyParse(module),\n            name = parsedBase.name;\n\n        tracked = tracked || {};\n\n        if (name in tracked) {\n            return;\n        }\n\n        module = Plugin.resolve(module) || module;\n\n        tracked[name] = Common.map(module.uses || [], function(dependency) {\n            if (Plugin.isPlugin(dependency)) {\n                Plugin.register(dependency);\n            }\n\n            var parsed = Plugin.dependencyParse(dependency),\n                resolved = Plugin.resolve(dependency);\n\n            if (resolved && !Plugin.versionSatisfies(resolved.version, parsed.range)) {\n                Common.warn(\n                    'Plugin.dependencies:', Plugin.toString(resolved), 'does not satisfy',\n                    Plugin.toString(parsed), 'used by', Plugin.toString(parsedBase) + '.'\n                );\n\n                resolved._warned = true;\n                module._warned = true;\n            } else if (!resolved) {\n                Common.warn(\n                    'Plugin.dependencies:', Plugin.toString(dependency), 'used by',\n                    Plugin.toString(parsedBase), 'could not be resolved.'\n                );\n\n                module._warned = true;\n            }\n\n            return parsed.name;\n        });\n\n        for (var i = 0; i < tracked[name].length; i += 1) {\n            Plugin.dependencies(tracked[name][i], tracked);\n        }\n\n        return tracked;\n    };\n\n    /**\n     * Parses a dependency string into its components.\n     * The `dependency` is a string of the format `'module-name'` or `'module-name@version'`.\n     * See documentation for `Plugin.versionParse` for a description of the format.\n     * This function can also handle dependencies that are already resolved (e.g. a module object).\n     * @method dependencyParse\n     * @param dependency {string} The dependency of the format `'module-name'` or `'module-name@version'`.\n     * @return {object} The dependency parsed into its components.\n     */\n    Plugin.dependencyParse = function(dependency) {\n        if (Common.isString(dependency)) {\n            var pattern = /^[\\w-]+(@(\\*|[\\^~]?\\d+\\.\\d+\\.\\d+(-[0-9A-Za-z-]+)?))?$/;\n\n            if (!pattern.test(dependency)) {\n                Common.warn('Plugin.dependencyParse:', dependency, 'is not a valid dependency string.');\n            }\n\n            return {\n                name: dependency.split('@')[0],\n                range: dependency.split('@')[1] || '*'\n            };\n        }\n\n        return {\n            name: dependency.name,\n            range: dependency.range || dependency.version\n        };\n    };\n\n    /**\n     * Parses a version string into its components.  \n     * Versions are strictly of the format `x.y.z` (as in [semver](http://semver.org/)).\n     * Versions may optionally have a prerelease tag in the format `x.y.z-alpha`.\n     * Ranges are a strict subset of [npm ranges](https://docs.npmjs.com/misc/semver#advanced-range-syntax).\n     * Only the following range types are supported:\n     * - Tilde ranges e.g. `~1.2.3`\n     * - Caret ranges e.g. `^1.2.3`\n     * - Exact version e.g. `1.2.3`\n     * - Any version `*`\n     * @method versionParse\n     * @param range {string} The version string.\n     * @return {object} The version range parsed into its components.\n     */\n    Plugin.versionParse = function(range) {\n        var pattern = /^\\*|[\\^~]?\\d+\\.\\d+\\.\\d+(-[0-9A-Za-z-]+)?$/;\n\n        if (!pattern.test(range)) {\n            Common.warn('Plugin.versionParse:', range, 'is not a valid version or range.');\n        }\n\n        var identifiers = range.split('-');\n        range = identifiers[0];\n\n        var isRange = isNaN(Number(range[0])),\n            version = isRange ? range.substr(1) : range,\n            parts = Common.map(version.split('.'), function(part) {\n                return Number(part);\n            });\n\n        return {\n            isRange: isRange,\n            version: version,\n            range: range,\n            operator: isRange ? range[0] : '',\n            parts: parts,\n            prerelease: identifiers[1],\n            number: parts[0] * 1e8 + parts[1] * 1e4 + parts[2]\n        };\n    };\n\n    /**\n     * Returns `true` if `version` satisfies the given `range`.\n     * See documentation for `Plugin.versionParse` for a description of the format.\n     * If a version or range is not specified, then any version (`*`) is assumed to satisfy.\n     * @method versionSatisfies\n     * @param version {string} The version string.\n     * @param range {string} The range string.\n     * @return {boolean} `true` if `version` satisfies `range`, otherwise `false`.\n     */\n    Plugin.versionSatisfies = function(version, range) {\n        range = range || '*';\n\n        var rangeParsed = Plugin.versionParse(range),\n            rangeParts = rangeParsed.parts,\n            versionParsed = Plugin.versionParse(version),\n            versionParts = versionParsed.parts;\n\n        if (rangeParsed.isRange) {\n            if (rangeParsed.operator === '*' || version === '*') {\n                return true;\n            }\n\n            if (rangeParsed.operator === '~') {\n                return versionParts[0] === rangeParts[0] && versionParts[1] === rangeParts[1] && versionParts[2] >= rangeParts[2];\n            }\n\n            if (rangeParsed.operator === '^') {\n                if (rangeParts[0] > 0) {\n                    return versionParts[0] === rangeParts[0] && versionParsed.number >= rangeParsed.number;\n                }\n\n                if (rangeParts[1] > 0) {\n                    return versionParts[1] === rangeParts[1] && versionParts[2] >= rangeParts[2];\n                }\n\n                return versionParts[2] === rangeParts[2];\n            }\n        }\n\n        return version === range || version === '*';\n    };\n\n})();\n\n},{\"./Common\":14}],21:[function(_dereq_,module,exports){\n/**\n* The `Matter.Runner` module is an optional utility which provides a game loop, \n* that handles continuously updating a `Matter.Engine` for you within a browser.\n* It is intended for development and debugging purposes, but may also be suitable for simple games.\n* If you are using your own game loop instead, then you do not need the `Matter.Runner` module.\n* Instead just call `Engine.update(engine, delta)` in your own loop.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Runner\n*/\n\nvar Runner = {};\n\nmodule.exports = Runner;\n\nvar Events = _dereq_('./Events');\nvar Engine = _dereq_('./Engine');\nvar Common = _dereq_('./Common');\n\n(function() {\n\n    var _requestAnimationFrame,\n        _cancelAnimationFrame;\n\n    if (typeof window !== 'undefined') {\n        _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\n                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame;\n   \n        _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame \n                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;\n    }\n\n    if (!_requestAnimationFrame) {\n        var _frameTimeout;\n\n        _requestAnimationFrame = function(callback){ \n            _frameTimeout = setTimeout(function() { \n                callback(Common.now()); \n            }, 1000 / 60);\n        };\n\n        _cancelAnimationFrame = function() {\n            clearTimeout(_frameTimeout);\n        };\n    }\n\n    /**\n     * Creates a new Runner. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * @method create\n     * @param {} options\n     */\n    Runner.create = function(options) {\n        var defaults = {\n            fps: 60,\n            correction: 1,\n            deltaSampleSize: 60,\n            counterTimestamp: 0,\n            frameCounter: 0,\n            deltaHistory: [],\n            timePrev: null,\n            timeScalePrev: 1,\n            frameRequestId: null,\n            isFixed: false,\n            enabled: true\n        };\n\n        var runner = Common.extend(defaults, options);\n\n        runner.delta = runner.delta || 1000 / runner.fps;\n        runner.deltaMin = runner.deltaMin || 1000 / runner.fps;\n        runner.deltaMax = runner.deltaMax || 1000 / (runner.fps * 0.5);\n        runner.fps = 1000 / runner.delta;\n\n        return runner;\n    };\n\n    /**\n     * Continuously ticks a `Matter.Engine` by calling `Runner.tick` on the `requestAnimationFrame` event.\n     * @method run\n     * @param {engine} engine\n     */\n    Runner.run = function(runner, engine) {\n        // create runner if engine is first argument\n        if (typeof runner.positionIterations !== 'undefined') {\n            engine = runner;\n            runner = Runner.create();\n        }\n\n        (function render(time){\n            runner.frameRequestId = _requestAnimationFrame(render);\n\n            if (time && runner.enabled) {\n                Runner.tick(runner, engine, time);\n            }\n        })();\n\n        return runner;\n    };\n\n    /**\n     * A game loop utility that updates the engine and renderer by one step (a 'tick').\n     * Features delta smoothing, time correction and fixed or dynamic timing.\n     * Triggers `beforeTick`, `tick` and `afterTick` events on the engine.\n     * Consider just `Engine.update(engine, delta)` if you're using your own loop.\n     * @method tick\n     * @param {runner} runner\n     * @param {engine} engine\n     * @param {number} time\n     */\n    Runner.tick = function(runner, engine, time) {\n        var timing = engine.timing,\n            correction = 1,\n            delta;\n\n        // create an event object\n        var event = {\n            timestamp: timing.timestamp\n        };\n\n        Events.trigger(runner, 'beforeTick', event);\n        Events.trigger(engine, 'beforeTick', event); // @deprecated\n\n        if (runner.isFixed) {\n            // fixed timestep\n            delta = runner.delta;\n        } else {\n            // dynamic timestep based on wall clock between calls\n            delta = (time - runner.timePrev) || runner.delta;\n            runner.timePrev = time;\n\n            // optimistically filter delta over a few frames, to improve stability\n            runner.deltaHistory.push(delta);\n            runner.deltaHistory = runner.deltaHistory.slice(-runner.deltaSampleSize);\n            delta = Math.min.apply(null, runner.deltaHistory);\n            \n            // limit delta\n            delta = delta < runner.deltaMin ? runner.deltaMin : delta;\n            delta = delta > runner.deltaMax ? runner.deltaMax : delta;\n\n            // correction for delta\n            correction = delta / runner.delta;\n\n            // update engine timing object\n            runner.delta = delta;\n        }\n\n        // time correction for time scaling\n        if (runner.timeScalePrev !== 0)\n            correction *= timing.timeScale / runner.timeScalePrev;\n\n        if (timing.timeScale === 0)\n            correction = 0;\n\n        runner.timeScalePrev = timing.timeScale;\n        runner.correction = correction;\n\n        // fps counter\n        runner.frameCounter += 1;\n        if (time - runner.counterTimestamp >= 1000) {\n            runner.fps = runner.frameCounter * ((time - runner.counterTimestamp) / 1000);\n            runner.counterTimestamp = time;\n            runner.frameCounter = 0;\n        }\n\n        Events.trigger(runner, 'tick', event);\n        Events.trigger(engine, 'tick', event); // @deprecated\n\n        // if world has been modified, clear the render scene graph\n        if (engine.world.isModified \n            && engine.render\n            && engine.render.controller\n            && engine.render.controller.clear) {\n            engine.render.controller.clear(engine.render); // @deprecated\n        }\n\n        // update\n        Events.trigger(runner, 'beforeUpdate', event);\n        Engine.update(engine, delta, correction);\n        Events.trigger(runner, 'afterUpdate', event);\n\n        // render\n        // @deprecated\n        if (engine.render && engine.render.controller) {\n            Events.trigger(runner, 'beforeRender', event);\n            Events.trigger(engine, 'beforeRender', event); // @deprecated\n\n            engine.render.controller.world(engine.render);\n\n            Events.trigger(runner, 'afterRender', event);\n            Events.trigger(engine, 'afterRender', event); // @deprecated\n        }\n\n        Events.trigger(runner, 'afterTick', event);\n        Events.trigger(engine, 'afterTick', event); // @deprecated\n    };\n\n    /**\n     * Ends execution of `Runner.run` on the given `runner`, by canceling the animation frame request event loop.\n     * If you wish to only temporarily pause the engine, see `engine.enabled` instead.\n     * @method stop\n     * @param {runner} runner\n     */\n    Runner.stop = function(runner) {\n        _cancelAnimationFrame(runner.frameRequestId);\n    };\n\n    /**\n     * Alias for `Runner.run`.\n     * @method start\n     * @param {runner} runner\n     * @param {engine} engine\n     */\n    Runner.start = function(runner, engine) {\n        Runner.run(runner, engine);\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired at the start of a tick, before any updates to the engine or timing\n    *\n    * @event beforeTick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine timing updated, but just before update\n    *\n    * @event tick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired at the end of a tick, after engine update and after rendering\n    *\n    * @event afterTick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired before update\n    *\n    * @event beforeUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after update\n    *\n    * @event afterUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired before rendering\n    *\n    * @event beforeRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    * @deprecated\n    */\n\n    /**\n    * Fired after rendering\n    *\n    * @event afterRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    * @deprecated\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * A flag that specifies whether the runner is running or not.\n     *\n     * @property enabled\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * A `Boolean` that specifies if the runner should use a fixed timestep (otherwise it is variable).\n     * If timing is fixed, then the apparent simulation speed will change depending on the frame rate (but behaviour will be deterministic).\n     * If the timing is variable, then the apparent simulation speed will be constant (approximately, but at the cost of determininism).\n     *\n     * @property isFixed\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A `Number` that specifies the time step between updates in milliseconds.\n     * If `engine.timing.isFixed` is set to `true`, then `delta` is fixed.\n     * If it is `false`, then `delta` can dynamically change to maintain the correct apparent simulation speed.\n     *\n     * @property delta\n     * @type number\n     * @default 1000 / 60\n     */\n\n})();\n\n},{\"./Common\":14,\"./Engine\":15,\"./Events\":16}],22:[function(_dereq_,module,exports){\n/**\n* The `Matter.Sleeping` module contains methods to manage the sleeping state of bodies.\n*\n* @class Sleeping\n*/\n\nvar Sleeping = {};\n\nmodule.exports = Sleeping;\n\nvar Events = _dereq_('./Events');\n\n(function() {\n\n    Sleeping._motionWakeThreshold = 0.18;\n    Sleeping._motionSleepThreshold = 0.08;\n    Sleeping._minBias = 0.9;\n\n    /**\n     * Puts bodies to sleep or wakes them up depending on their motion.\n     * @method update\n     * @param {body[]} bodies\n     * @param {number} timeScale\n     */\n    Sleeping.update = function(bodies, timeScale) {\n        var timeFactor = timeScale * timeScale * timeScale;\n\n        // update bodies sleeping status\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                motion = body.speed * body.speed + body.angularSpeed * body.angularSpeed;\n\n            // wake up bodies if they have a force applied\n            if (body.force.x !== 0 || body.force.y !== 0) {\n                Sleeping.set(body, false);\n                continue;\n            }\n\n            var minMotion = Math.min(body.motion, motion),\n                maxMotion = Math.max(body.motion, motion);\n        \n            // biased average motion estimation between frames\n            body.motion = Sleeping._minBias * minMotion + (1 - Sleeping._minBias) * maxMotion;\n            \n            if (body.sleepThreshold > 0 && body.motion < Sleeping._motionSleepThreshold * timeFactor) {\n                body.sleepCounter += 1;\n                \n                if (body.sleepCounter >= body.sleepThreshold)\n                    Sleeping.set(body, true);\n            } else if (body.sleepCounter > 0) {\n                body.sleepCounter -= 1;\n            }\n        }\n    };\n\n    /**\n     * Given a set of colliding pairs, wakes the sleeping bodies involved.\n     * @method afterCollisions\n     * @param {pair[]} pairs\n     * @param {number} timeScale\n     */\n    Sleeping.afterCollisions = function(pairs, timeScale) {\n        var timeFactor = timeScale * timeScale * timeScale;\n\n        // wake up bodies involved in collisions\n        for (var i = 0; i < pairs.length; i++) {\n            var pair = pairs[i];\n            \n            // don't wake inactive pairs\n            if (!pair.isActive)\n                continue;\n\n            var collision = pair.collision,\n                bodyA = collision.bodyA.parent, \n                bodyB = collision.bodyB.parent;\n        \n            // don't wake if at least one body is static\n            if ((bodyA.isSleeping && bodyB.isSleeping) || bodyA.isStatic || bodyB.isStatic)\n                continue;\n        \n            if (bodyA.isSleeping || bodyB.isSleeping) {\n                var sleepingBody = (bodyA.isSleeping && !bodyA.isStatic) ? bodyA : bodyB,\n                    movingBody = sleepingBody === bodyA ? bodyB : bodyA;\n\n                if (!sleepingBody.isStatic && movingBody.motion > Sleeping._motionWakeThreshold * timeFactor) {\n                    Sleeping.set(sleepingBody, false);\n                }\n            }\n        }\n    };\n  \n    /**\n     * Set a body as sleeping or awake.\n     * @method set\n     * @param {body} body\n     * @param {boolean} isSleeping\n     */\n    Sleeping.set = function(body, isSleeping) {\n        var wasSleeping = body.isSleeping;\n\n        if (isSleeping) {\n            body.isSleeping = true;\n            body.sleepCounter = body.sleepThreshold;\n\n            body.positionImpulse.x = 0;\n            body.positionImpulse.y = 0;\n\n            body.positionPrev.x = body.position.x;\n            body.positionPrev.y = body.position.y;\n\n            body.anglePrev = body.angle;\n            body.speed = 0;\n            body.angularSpeed = 0;\n            body.motion = 0;\n\n            if (!wasSleeping) {\n                Events.trigger(body, 'sleepStart');\n            }\n        } else {\n            body.isSleeping = false;\n            body.sleepCounter = 0;\n\n            if (wasSleeping) {\n                Events.trigger(body, 'sleepEnd');\n            }\n        }\n    };\n\n})();\n\n},{\"./Events\":16}],23:[function(_dereq_,module,exports){\n/**\n* The `Matter.Bodies` module contains factory methods for creating rigid body models \n* with commonly used body configurations (such as rectangles, circles and other polygons).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Bodies\n*/\n\n// TODO: true circle bodies\n\nvar Bodies = {};\n\nmodule.exports = Bodies;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Common = _dereq_('../core/Common');\nvar Body = _dereq_('../body/Body');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Vector = _dereq_('../geometry/Vector');\nvar decomp;\n\n(function() {\n\n    /**\n     * Creates a new rigid body model with a rectangle hull. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method rectangle\n     * @param {number} x\n     * @param {number} y\n     * @param {number} width\n     * @param {number} height\n     * @param {object} [options]\n     * @return {body} A new rectangle body\n     */\n    Bodies.rectangle = function(x, y, width, height, options) {\n        options = options || {};\n\n        var rectangle = { \n            label: 'Rectangle Body',\n            position: { x: x, y: y },\n            vertices: Vertices.fromPath('L 0 0 L ' + width + ' 0 L ' + width + ' ' + height + ' L 0 ' + height)\n        };\n\n        if (options.chamfer) {\n            var chamfer = options.chamfer;\n            rectangle.vertices = Vertices.chamfer(rectangle.vertices, chamfer.radius, \n                                    chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n            delete options.chamfer;\n        }\n\n        return Body.create(Common.extend({}, rectangle, options));\n    };\n    \n    /**\n     * Creates a new rigid body model with a trapezoid hull. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method trapezoid\n     * @param {number} x\n     * @param {number} y\n     * @param {number} width\n     * @param {number} height\n     * @param {number} slope\n     * @param {object} [options]\n     * @return {body} A new trapezoid body\n     */\n    Bodies.trapezoid = function(x, y, width, height, slope, options) {\n        options = options || {};\n\n        slope *= 0.5;\n        var roof = (1 - (slope * 2)) * width;\n        \n        var x1 = width * slope,\n            x2 = x1 + roof,\n            x3 = x2 + x1,\n            verticesPath;\n\n        if (slope < 0.5) {\n            verticesPath = 'L 0 0 L ' + x1 + ' ' + (-height) + ' L ' + x2 + ' ' + (-height) + ' L ' + x3 + ' 0';\n        } else {\n            verticesPath = 'L 0 0 L ' + x2 + ' ' + (-height) + ' L ' + x3 + ' 0';\n        }\n\n        var trapezoid = { \n            label: 'Trapezoid Body',\n            position: { x: x, y: y },\n            vertices: Vertices.fromPath(verticesPath)\n        };\n\n        if (options.chamfer) {\n            var chamfer = options.chamfer;\n            trapezoid.vertices = Vertices.chamfer(trapezoid.vertices, chamfer.radius, \n                                    chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n            delete options.chamfer;\n        }\n\n        return Body.create(Common.extend({}, trapezoid, options));\n    };\n\n    /**\n     * Creates a new rigid body model with a circle hull. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method circle\n     * @param {number} x\n     * @param {number} y\n     * @param {number} radius\n     * @param {object} [options]\n     * @param {number} [maxSides]\n     * @return {body} A new circle body\n     */\n    Bodies.circle = function(x, y, radius, options, maxSides) {\n        options = options || {};\n\n        var circle = {\n            label: 'Circle Body',\n            circleRadius: radius\n        };\n        \n        // approximate circles with polygons until true circles implemented in SAT\n        maxSides = maxSides || 25;\n        var sides = Math.ceil(Math.max(10, Math.min(maxSides, radius)));\n\n        // optimisation: always use even number of sides (half the number of unique axes)\n        if (sides % 2 === 1)\n            sides += 1;\n\n        return Bodies.polygon(x, y, sides, radius, Common.extend({}, circle, options));\n    };\n\n    /**\n     * Creates a new rigid body model with a regular polygon hull with the given number of sides. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method polygon\n     * @param {number} x\n     * @param {number} y\n     * @param {number} sides\n     * @param {number} radius\n     * @param {object} [options]\n     * @return {body} A new regular polygon body\n     */\n    Bodies.polygon = function(x, y, sides, radius, options) {\n        options = options || {};\n\n        if (sides < 3)\n            return Bodies.circle(x, y, radius, options);\n\n        var theta = 2 * Math.PI / sides,\n            path = '',\n            offset = theta * 0.5;\n\n        for (var i = 0; i < sides; i += 1) {\n            var angle = offset + (i * theta),\n                xx = Math.cos(angle) * radius,\n                yy = Math.sin(angle) * radius;\n\n            path += 'L ' + xx.toFixed(3) + ' ' + yy.toFixed(3) + ' ';\n        }\n\n        var polygon = { \n            label: 'Polygon Body',\n            position: { x: x, y: y },\n            vertices: Vertices.fromPath(path)\n        };\n\n        if (options.chamfer) {\n            var chamfer = options.chamfer;\n            polygon.vertices = Vertices.chamfer(polygon.vertices, chamfer.radius, \n                                    chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n            delete options.chamfer;\n        }\n\n        return Body.create(Common.extend({}, polygon, options));\n    };\n\n    /**\n     * Creates a body using the supplied vertices (or an array containing multiple sets of vertices).\n     * If the vertices are convex, they will pass through as supplied.\n     * Otherwise if the vertices are concave, they will be decomposed if [poly-decomp.js](https://github.com/schteppe/poly-decomp.js) is available.\n     * Note that this process is not guaranteed to support complex sets of vertices (e.g. those with holes may fail).\n     * By default the decomposition will discard collinear edges (to improve performance).\n     * It can also optionally discard any parts that have an area less than `minimumArea`.\n     * If the vertices can not be decomposed, the result will fall back to using the convex hull.\n     * The options parameter is an object that specifies any `Matter.Body` properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method fromVertices\n     * @param {number} x\n     * @param {number} y\n     * @param [[vector]] vertexSets\n     * @param {object} [options]\n     * @param {bool} [flagInternal=false]\n     * @param {number} [removeCollinear=0.01]\n     * @param {number} [minimumArea=10]\n     * @return {body}\n     */\n    Bodies.fromVertices = function(x, y, vertexSets, options, flagInternal, removeCollinear, minimumArea) {\n        if (!decomp) {\n            decomp = Common._requireGlobal('decomp', 'poly-decomp');\n        }\n\n        var body,\n            parts,\n            isConvex,\n            vertices,\n            i,\n            j,\n            k,\n            v,\n            z;\n\n        options = options || {};\n        parts = [];\n\n        flagInternal = typeof flagInternal !== 'undefined' ? flagInternal : false;\n        removeCollinear = typeof removeCollinear !== 'undefined' ? removeCollinear : 0.01;\n        minimumArea = typeof minimumArea !== 'undefined' ? minimumArea : 10;\n\n        if (!decomp) {\n            Common.warn('Bodies.fromVertices: poly-decomp.js required. Could not decompose vertices. Fallback to convex hull.');\n        }\n\n        // ensure vertexSets is an array of arrays\n        if (!Common.isArray(vertexSets[0])) {\n            vertexSets = [vertexSets];\n        }\n\n        for (v = 0; v < vertexSets.length; v += 1) {\n            vertices = vertexSets[v];\n            isConvex = Vertices.isConvex(vertices);\n\n            if (isConvex || !decomp) {\n                if (isConvex) {\n                    vertices = Vertices.clockwiseSort(vertices);\n                } else {\n                    // fallback to convex hull when decomposition is not possible\n                    vertices = Vertices.hull(vertices);\n                }\n\n                parts.push({\n                    position: { x: x, y: y },\n                    vertices: vertices\n                });\n            } else {\n                // initialise a decomposition\n                var concave = vertices.map(function(vertex) {\n                    return [vertex.x, vertex.y];\n                });\n\n                // vertices are concave and simple, we can decompose into parts\n                decomp.makeCCW(concave);\n                if (removeCollinear !== false)\n                    decomp.removeCollinearPoints(concave, removeCollinear);\n\n                // use the quick decomposition algorithm (Bayazit)\n                var decomposed = decomp.quickDecomp(concave);\n\n                // for each decomposed chunk\n                for (i = 0; i < decomposed.length; i++) {\n                    var chunk = decomposed[i];\n\n                    // convert vertices into the correct structure\n                    var chunkVertices = chunk.map(function(vertices) {\n                        return {\n                            x: vertices[0],\n                            y: vertices[1]\n                        };\n                    });\n\n                    // skip small chunks\n                    if (minimumArea > 0 && Vertices.area(chunkVertices) < minimumArea)\n                        continue;\n\n                    // create a compound part\n                    parts.push({\n                        position: Vertices.centre(chunkVertices),\n                        vertices: chunkVertices\n                    });\n                }\n            }\n        }\n\n        // create body parts\n        for (i = 0; i < parts.length; i++) {\n            parts[i] = Body.create(Common.extend(parts[i], options));\n        }\n\n        // flag internal edges (coincident part edges)\n        if (flagInternal) {\n            var coincident_max_dist = 5;\n\n            for (i = 0; i < parts.length; i++) {\n                var partA = parts[i];\n\n                for (j = i + 1; j < parts.length; j++) {\n                    var partB = parts[j];\n\n                    if (Bounds.overlaps(partA.bounds, partB.bounds)) {\n                        var pav = partA.vertices,\n                            pbv = partB.vertices;\n\n                        // iterate vertices of both parts\n                        for (k = 0; k < partA.vertices.length; k++) {\n                            for (z = 0; z < partB.vertices.length; z++) {\n                                // find distances between the vertices\n                                var da = Vector.magnitudeSquared(Vector.sub(pav[(k + 1) % pav.length], pbv[z])),\n                                    db = Vector.magnitudeSquared(Vector.sub(pav[k], pbv[(z + 1) % pbv.length]));\n\n                                // if both vertices are very close, consider the edge concident (internal)\n                                if (da < coincident_max_dist && db < coincident_max_dist) {\n                                    pav[k].isInternal = true;\n                                    pbv[z].isInternal = true;\n                                }\n                            }\n                        }\n\n                    }\n                }\n            }\n        }\n\n        if (parts.length > 1) {\n            // create the parent body to be returned, that contains generated compound parts\n            body = Body.create(Common.extend({ parts: parts.slice(0) }, options));\n            Body.setPosition(body, { x: x, y: y });\n\n            return body;\n        } else {\n            return parts[0];\n        }\n    };\n\n})();\n\n},{\"../body/Body\":1,\"../core/Common\":14,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29}],24:[function(_dereq_,module,exports){\n/**\n* The `Matter.Composites` module contains factory methods for creating composite bodies\n* with commonly used configurations (such as stacks and chains).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Composites\n*/\n\nvar Composites = {};\n\nmodule.exports = Composites;\n\nvar Composite = _dereq_('../body/Composite');\nvar Constraint = _dereq_('../constraint/Constraint');\nvar Common = _dereq_('../core/Common');\nvar Body = _dereq_('../body/Body');\nvar Bodies = _dereq_('./Bodies');\n\n(function() {\n\n    /**\n     * Create a new composite containing bodies created in the callback in a grid arrangement.\n     * This function uses the body's bounds to prevent overlaps.\n     * @method stack\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {function} callback\n     * @return {composite} A new composite containing objects created in the callback\n     */\n    Composites.stack = function(xx, yy, columns, rows, columnGap, rowGap, callback) {\n        var stack = Composite.create({ label: 'Stack' }),\n            x = xx,\n            y = yy,\n            lastBody,\n            i = 0;\n\n        for (var row = 0; row < rows; row++) {\n            var maxHeight = 0;\n            \n            for (var column = 0; column < columns; column++) {\n                var body = callback(x, y, column, row, lastBody, i);\n                    \n                if (body) {\n                    var bodyHeight = body.bounds.max.y - body.bounds.min.y,\n                        bodyWidth = body.bounds.max.x - body.bounds.min.x; \n\n                    if (bodyHeight > maxHeight)\n                        maxHeight = bodyHeight;\n                    \n                    Body.translate(body, { x: bodyWidth * 0.5, y: bodyHeight * 0.5 });\n\n                    x = body.bounds.max.x + columnGap;\n\n                    Composite.addBody(stack, body);\n                    \n                    lastBody = body;\n                    i += 1;\n                } else {\n                    x += columnGap;\n                }\n            }\n            \n            y += maxHeight + rowGap;\n            x = xx;\n        }\n\n        return stack;\n    };\n    \n    /**\n     * Chains all bodies in the given composite together using constraints.\n     * @method chain\n     * @param {composite} composite\n     * @param {number} xOffsetA\n     * @param {number} yOffsetA\n     * @param {number} xOffsetB\n     * @param {number} yOffsetB\n     * @param {object} options\n     * @return {composite} A new composite containing objects chained together with constraints\n     */\n    Composites.chain = function(composite, xOffsetA, yOffsetA, xOffsetB, yOffsetB, options) {\n        var bodies = composite.bodies;\n        \n        for (var i = 1; i < bodies.length; i++) {\n            var bodyA = bodies[i - 1],\n                bodyB = bodies[i],\n                bodyAHeight = bodyA.bounds.max.y - bodyA.bounds.min.y,\n                bodyAWidth = bodyA.bounds.max.x - bodyA.bounds.min.x, \n                bodyBHeight = bodyB.bounds.max.y - bodyB.bounds.min.y,\n                bodyBWidth = bodyB.bounds.max.x - bodyB.bounds.min.x;\n        \n            var defaults = {\n                bodyA: bodyA,\n                pointA: { x: bodyAWidth * xOffsetA, y: bodyAHeight * yOffsetA },\n                bodyB: bodyB,\n                pointB: { x: bodyBWidth * xOffsetB, y: bodyBHeight * yOffsetB }\n            };\n            \n            var constraint = Common.extend(defaults, options);\n        \n            Composite.addConstraint(composite, Constraint.create(constraint));\n        }\n\n        composite.label += ' Chain';\n        \n        return composite;\n    };\n\n    /**\n     * Connects bodies in the composite with constraints in a grid pattern, with optional cross braces.\n     * @method mesh\n     * @param {composite} composite\n     * @param {number} columns\n     * @param {number} rows\n     * @param {boolean} crossBrace\n     * @param {object} options\n     * @return {composite} The composite containing objects meshed together with constraints\n     */\n    Composites.mesh = function(composite, columns, rows, crossBrace, options) {\n        var bodies = composite.bodies,\n            row,\n            col,\n            bodyA,\n            bodyB,\n            bodyC;\n        \n        for (row = 0; row < rows; row++) {\n            for (col = 1; col < columns; col++) {\n                bodyA = bodies[(col - 1) + (row * columns)];\n                bodyB = bodies[col + (row * columns)];\n                Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyA, bodyB: bodyB }, options)));\n            }\n\n            if (row > 0) {\n                for (col = 0; col < columns; col++) {\n                    bodyA = bodies[col + ((row - 1) * columns)];\n                    bodyB = bodies[col + (row * columns)];\n                    Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyA, bodyB: bodyB }, options)));\n\n                    if (crossBrace && col > 0) {\n                        bodyC = bodies[(col - 1) + ((row - 1) * columns)];\n                        Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyC, bodyB: bodyB }, options)));\n                    }\n\n                    if (crossBrace && col < columns - 1) {\n                        bodyC = bodies[(col + 1) + ((row - 1) * columns)];\n                        Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyC, bodyB: bodyB }, options)));\n                    }\n                }\n            }\n        }\n\n        composite.label += ' Mesh';\n        \n        return composite;\n    };\n    \n    /**\n     * Create a new composite containing bodies created in the callback in a pyramid arrangement.\n     * This function uses the body's bounds to prevent overlaps.\n     * @method pyramid\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {function} callback\n     * @return {composite} A new composite containing objects created in the callback\n     */\n    Composites.pyramid = function(xx, yy, columns, rows, columnGap, rowGap, callback) {\n        return Composites.stack(xx, yy, columns, rows, columnGap, rowGap, function(x, y, column, row, lastBody, i) {\n            var actualRows = Math.min(rows, Math.ceil(columns / 2)),\n                lastBodyWidth = lastBody ? lastBody.bounds.max.x - lastBody.bounds.min.x : 0;\n            \n            if (row > actualRows)\n                return;\n            \n            // reverse row order\n            row = actualRows - row;\n            \n            var start = row,\n                end = columns - 1 - row;\n\n            if (column < start || column > end)\n                return;\n            \n            // retroactively fix the first body's position, since width was unknown\n            if (i === 1) {\n                Body.translate(lastBody, { x: (column + (columns % 2 === 1 ? 1 : -1)) * lastBodyWidth, y: 0 });\n            }\n\n            var xOffset = lastBody ? column * lastBodyWidth : 0;\n            \n            return callback(xx + xOffset + column * columnGap, y, column, row, lastBody, i);\n        });\n    };\n\n    /**\n     * Creates a composite with a Newton's Cradle setup of bodies and constraints.\n     * @method newtonsCradle\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} number\n     * @param {number} size\n     * @param {number} length\n     * @return {composite} A new composite newtonsCradle body\n     */\n    Composites.newtonsCradle = function(xx, yy, number, size, length) {\n        var newtonsCradle = Composite.create({ label: 'Newtons Cradle' });\n\n        for (var i = 0; i < number; i++) {\n            var separation = 1.9,\n                circle = Bodies.circle(xx + i * (size * separation), yy + length, size, \n                            { inertia: Infinity, restitution: 1, friction: 0, frictionAir: 0.0001, slop: 1 }),\n                constraint = Constraint.create({ pointA: { x: xx + i * (size * separation), y: yy }, bodyB: circle });\n\n            Composite.addBody(newtonsCradle, circle);\n            Composite.addConstraint(newtonsCradle, constraint);\n        }\n\n        return newtonsCradle;\n    };\n    \n    /**\n     * Creates a composite with simple car setup of bodies and constraints.\n     * @method car\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} width\n     * @param {number} height\n     * @param {number} wheelSize\n     * @return {composite} A new composite car body\n     */\n    Composites.car = function(xx, yy, width, height, wheelSize) {\n        var group = Body.nextGroup(true),\n            wheelBase = 20,\n            wheelAOffset = -width * 0.5 + wheelBase,\n            wheelBOffset = width * 0.5 - wheelBase,\n            wheelYOffset = 0;\n    \n        var car = Composite.create({ label: 'Car' }),\n            body = Bodies.rectangle(xx, yy, width, height, { \n                collisionFilter: {\n                    group: group\n                },\n                chamfer: {\n                    radius: height * 0.5\n                },\n                density: 0.0002\n            });\n    \n        var wheelA = Bodies.circle(xx + wheelAOffset, yy + wheelYOffset, wheelSize, { \n            collisionFilter: {\n                group: group\n            },\n            friction: 0.8\n        });\n                    \n        var wheelB = Bodies.circle(xx + wheelBOffset, yy + wheelYOffset, wheelSize, { \n            collisionFilter: {\n                group: group\n            },\n            friction: 0.8\n        });\n                    \n        var axelA = Constraint.create({\n            bodyB: body,\n            pointB: { x: wheelAOffset, y: wheelYOffset },\n            bodyA: wheelA,\n            stiffness: 1,\n            length: 0\n        });\n                        \n        var axelB = Constraint.create({\n            bodyB: body,\n            pointB: { x: wheelBOffset, y: wheelYOffset },\n            bodyA: wheelB,\n            stiffness: 1,\n            length: 0\n        });\n        \n        Composite.addBody(car, body);\n        Composite.addBody(car, wheelA);\n        Composite.addBody(car, wheelB);\n        Composite.addConstraint(car, axelA);\n        Composite.addConstraint(car, axelB);\n\n        return car;\n    };\n\n    /**\n     * Creates a simple soft body like object.\n     * @method softBody\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {boolean} crossBrace\n     * @param {number} particleRadius\n     * @param {} particleOptions\n     * @param {} constraintOptions\n     * @return {composite} A new composite softBody\n     */\n    Composites.softBody = function(xx, yy, columns, rows, columnGap, rowGap, crossBrace, particleRadius, particleOptions, constraintOptions) {\n        particleOptions = Common.extend({ inertia: Infinity }, particleOptions);\n        constraintOptions = Common.extend({ stiffness: 0.2, render: { type: 'line', anchors: false } }, constraintOptions);\n\n        var softBody = Composites.stack(xx, yy, columns, rows, columnGap, rowGap, function(x, y) {\n            return Bodies.circle(x, y, particleRadius, particleOptions);\n        });\n\n        Composites.mesh(softBody, columns, rows, crossBrace, constraintOptions);\n\n        softBody.label = 'Soft Body';\n\n        return softBody;\n    };\n\n})();\n\n},{\"../body/Body\":1,\"../body/Composite\":2,\"../constraint/Constraint\":12,\"../core/Common\":14,\"./Bodies\":23}],25:[function(_dereq_,module,exports){\n/**\n* The `Matter.Axes` module contains methods for creating and manipulating sets of axes.\n*\n* @class Axes\n*/\n\nvar Axes = {};\n\nmodule.exports = Axes;\n\nvar Vector = _dereq_('../geometry/Vector');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a new set of axes from the given vertices.\n     * @method fromVertices\n     * @param {vertices} vertices\n     * @return {axes} A new axes from the given vertices\n     */\n    Axes.fromVertices = function(vertices) {\n        var axes = {};\n\n        // find the unique axes, using edge normal gradients\n        for (var i = 0; i < vertices.length; i++) {\n            var j = (i + 1) % vertices.length, \n                normal = Vector.normalise({ \n                    x: vertices[j].y - vertices[i].y, \n                    y: vertices[i].x - vertices[j].x\n                }),\n                gradient = (normal.y === 0) ? Infinity : (normal.x / normal.y);\n            \n            // limit precision\n            gradient = gradient.toFixed(3).toString();\n            axes[gradient] = normal;\n        }\n\n        return Common.values(axes);\n    };\n\n    /**\n     * Rotates a set of axes by the given angle.\n     * @method rotate\n     * @param {axes} axes\n     * @param {number} angle\n     */\n    Axes.rotate = function(axes, angle) {\n        if (angle === 0)\n            return;\n        \n        var cos = Math.cos(angle),\n            sin = Math.sin(angle);\n\n        for (var i = 0; i < axes.length; i++) {\n            var axis = axes[i],\n                xx;\n            xx = axis.x * cos - axis.y * sin;\n            axis.y = axis.x * sin + axis.y * cos;\n            axis.x = xx;\n        }\n    };\n\n})();\n\n},{\"../core/Common\":14,\"../geometry/Vector\":28}],26:[function(_dereq_,module,exports){\n/**\n* The `Matter.Bounds` module contains methods for creating and manipulating axis-aligned bounding boxes (AABB).\n*\n* @class Bounds\n*/\n\nvar Bounds = {};\n\nmodule.exports = Bounds;\n\n(function() {\n\n    /**\n     * Creates a new axis-aligned bounding box (AABB) for the given vertices.\n     * @method create\n     * @param {vertices} vertices\n     * @return {bounds} A new bounds object\n     */\n    Bounds.create = function(vertices) {\n        var bounds = { \n            min: { x: 0, y: 0 }, \n            max: { x: 0, y: 0 }\n        };\n\n        if (vertices)\n            Bounds.update(bounds, vertices);\n        \n        return bounds;\n    };\n\n    /**\n     * Updates bounds using the given vertices and extends the bounds given a velocity.\n     * @method update\n     * @param {bounds} bounds\n     * @param {vertices} vertices\n     * @param {vector} velocity\n     */\n    Bounds.update = function(bounds, vertices, velocity) {\n        bounds.min.x = Infinity;\n        bounds.max.x = -Infinity;\n        bounds.min.y = Infinity;\n        bounds.max.y = -Infinity;\n\n        for (var i = 0; i < vertices.length; i++) {\n            var vertex = vertices[i];\n            if (vertex.x > bounds.max.x) bounds.max.x = vertex.x;\n            if (vertex.x < bounds.min.x) bounds.min.x = vertex.x;\n            if (vertex.y > bounds.max.y) bounds.max.y = vertex.y;\n            if (vertex.y < bounds.min.y) bounds.min.y = vertex.y;\n        }\n        \n        if (velocity) {\n            if (velocity.x > 0) {\n                bounds.max.x += velocity.x;\n            } else {\n                bounds.min.x += velocity.x;\n            }\n            \n            if (velocity.y > 0) {\n                bounds.max.y += velocity.y;\n            } else {\n                bounds.min.y += velocity.y;\n            }\n        }\n    };\n\n    /**\n     * Returns true if the bounds contains the given point.\n     * @method contains\n     * @param {bounds} bounds\n     * @param {vector} point\n     * @return {boolean} True if the bounds contain the point, otherwise false\n     */\n    Bounds.contains = function(bounds, point) {\n        return point.x >= bounds.min.x && point.x <= bounds.max.x \n               && point.y >= bounds.min.y && point.y <= bounds.max.y;\n    };\n\n    /**\n     * Returns true if the two bounds intersect.\n     * @method overlaps\n     * @param {bounds} boundsA\n     * @param {bounds} boundsB\n     * @return {boolean} True if the bounds overlap, otherwise false\n     */\n    Bounds.overlaps = function(boundsA, boundsB) {\n        return (boundsA.min.x <= boundsB.max.x && boundsA.max.x >= boundsB.min.x\n                && boundsA.max.y >= boundsB.min.y && boundsA.min.y <= boundsB.max.y);\n    };\n\n    /**\n     * Translates the bounds by the given vector.\n     * @method translate\n     * @param {bounds} bounds\n     * @param {vector} vector\n     */\n    Bounds.translate = function(bounds, vector) {\n        bounds.min.x += vector.x;\n        bounds.max.x += vector.x;\n        bounds.min.y += vector.y;\n        bounds.max.y += vector.y;\n    };\n\n    /**\n     * Shifts the bounds to the given position.\n     * @method shift\n     * @param {bounds} bounds\n     * @param {vector} position\n     */\n    Bounds.shift = function(bounds, position) {\n        var deltaX = bounds.max.x - bounds.min.x,\n            deltaY = bounds.max.y - bounds.min.y;\n            \n        bounds.min.x = position.x;\n        bounds.max.x = position.x + deltaX;\n        bounds.min.y = position.y;\n        bounds.max.y = position.y + deltaY;\n    };\n    \n})();\n\n},{}],27:[function(_dereq_,module,exports){\n/**\n* The `Matter.Svg` module contains methods for converting SVG images into an array of vector points.\n*\n* To use this module you also need the SVGPathSeg polyfill: https://github.com/progers/pathseg\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Svg\n*/\n\nvar Svg = {};\n\nmodule.exports = Svg;\n\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Converts an SVG path into an array of vector points.\n     * If the input path forms a concave shape, you must decompose the result into convex parts before use.\n     * See `Bodies.fromVertices` which provides support for this.\n     * Note that this function is not guaranteed to support complex paths (such as those with holes).\n     * You must load the `pathseg.js` polyfill on newer browsers.\n     * @method pathToVertices\n     * @param {SVGPathElement} path\n     * @param {Number} [sampleLength=15]\n     * @return {Vector[]} points\n     */\n    Svg.pathToVertices = function(path, sampleLength) {\n        if (typeof window !== 'undefined' && !('SVGPathSeg' in window)) {\n            Common.warn('Svg.pathToVertices: SVGPathSeg not defined, a polyfill is required.');\n        }\n\n        // https://github.com/wout/svg.topoly.js/blob/master/svg.topoly.js\n        var i, il, total, point, segment, segments, \n            segmentsQueue, lastSegment, \n            lastPoint, segmentIndex, points = [],\n            lx, ly, length = 0, x = 0, y = 0;\n\n        sampleLength = sampleLength || 15;\n\n        var addPoint = function(px, py, pathSegType) {\n            // all odd-numbered path types are relative except PATHSEG_CLOSEPATH (1)\n            var isRelative = pathSegType % 2 === 1 && pathSegType > 1;\n\n            // when the last point doesn't equal the current point add the current point\n            if (!lastPoint || px != lastPoint.x || py != lastPoint.y) {\n                if (lastPoint && isRelative) {\n                    lx = lastPoint.x;\n                    ly = lastPoint.y;\n                } else {\n                    lx = 0;\n                    ly = 0;\n                }\n\n                var point = {\n                    x: lx + px,\n                    y: ly + py\n                };\n\n                // set last point\n                if (isRelative || !lastPoint) {\n                    lastPoint = point;\n                }\n\n                points.push(point);\n\n                x = lx + px;\n                y = ly + py;\n            }\n        };\n\n        var addSegmentPoint = function(segment) {\n            var segType = segment.pathSegTypeAsLetter.toUpperCase();\n\n            // skip path ends\n            if (segType === 'Z') \n                return;\n\n            // map segment to x and y\n            switch (segType) {\n\n            case 'M':\n            case 'L':\n            case 'T':\n            case 'C':\n            case 'S':\n            case 'Q':\n                x = segment.x;\n                y = segment.y;\n                break;\n            case 'H':\n                x = segment.x;\n                break;\n            case 'V':\n                y = segment.y;\n                break;\n            }\n\n            addPoint(x, y, segment.pathSegType);\n        };\n\n        // ensure path is absolute\n        Svg._svgPathToAbsolute(path);\n\n        // get total length\n        total = path.getTotalLength();\n\n        // queue segments\n        segments = [];\n        for (i = 0; i < path.pathSegList.numberOfItems; i += 1)\n            segments.push(path.pathSegList.getItem(i));\n\n        segmentsQueue = segments.concat();\n\n        // sample through path\n        while (length < total) {\n            // get segment at position\n            segmentIndex = path.getPathSegAtLength(length);\n            segment = segments[segmentIndex];\n\n            // new segment\n            if (segment != lastSegment) {\n                while (segmentsQueue.length && segmentsQueue[0] != segment)\n                    addSegmentPoint(segmentsQueue.shift());\n\n                lastSegment = segment;\n            }\n\n            // add points in between when curving\n            // TODO: adaptive sampling\n            switch (segment.pathSegTypeAsLetter.toUpperCase()) {\n\n            case 'C':\n            case 'T':\n            case 'S':\n            case 'Q':\n            case 'A':\n                point = path.getPointAtLength(length);\n                addPoint(point.x, point.y, 0);\n                break;\n\n            }\n\n            // increment by sample value\n            length += sampleLength;\n        }\n\n        // add remaining segments not passed by sampling\n        for (i = 0, il = segmentsQueue.length; i < il; ++i)\n            addSegmentPoint(segmentsQueue[i]);\n\n        return points;\n    };\n\n    Svg._svgPathToAbsolute = function(path) {\n        // http://phrogz.net/convert-svg-path-to-all-absolute-commands\n        // Copyright (c) Gavin Kistner\n        // http://phrogz.net/js/_ReuseLicense.txt\n        // Modifications: tidy formatting and naming\n        var x0, y0, x1, y1, x2, y2, segs = path.pathSegList,\n            x = 0, y = 0, len = segs.numberOfItems;\n\n        for (var i = 0; i < len; ++i) {\n            var seg = segs.getItem(i),\n                segType = seg.pathSegTypeAsLetter;\n\n            if (/[MLHVCSQTA]/.test(segType)) {\n                if ('x' in seg) x = seg.x;\n                if ('y' in seg) y = seg.y;\n            } else {\n                if ('x1' in seg) x1 = x + seg.x1;\n                if ('x2' in seg) x2 = x + seg.x2;\n                if ('y1' in seg) y1 = y + seg.y1;\n                if ('y2' in seg) y2 = y + seg.y2;\n                if ('x' in seg) x += seg.x;\n                if ('y' in seg) y += seg.y;\n\n                switch (segType) {\n\n                case 'm':\n                    segs.replaceItem(path.createSVGPathSegMovetoAbs(x, y), i);\n                    break;\n                case 'l':\n                    segs.replaceItem(path.createSVGPathSegLinetoAbs(x, y), i);\n                    break;\n                case 'h':\n                    segs.replaceItem(path.createSVGPathSegLinetoHorizontalAbs(x), i);\n                    break;\n                case 'v':\n                    segs.replaceItem(path.createSVGPathSegLinetoVerticalAbs(y), i);\n                    break;\n                case 'c':\n                    segs.replaceItem(path.createSVGPathSegCurvetoCubicAbs(x, y, x1, y1, x2, y2), i);\n                    break;\n                case 's':\n                    segs.replaceItem(path.createSVGPathSegCurvetoCubicSmoothAbs(x, y, x2, y2), i);\n                    break;\n                case 'q':\n                    segs.replaceItem(path.createSVGPathSegCurvetoQuadraticAbs(x, y, x1, y1), i);\n                    break;\n                case 't':\n                    segs.replaceItem(path.createSVGPathSegCurvetoQuadraticSmoothAbs(x, y), i);\n                    break;\n                case 'a':\n                    segs.replaceItem(path.createSVGPathSegArcAbs(x, y, seg.r1, seg.r2, seg.angle, seg.largeArcFlag, seg.sweepFlag), i);\n                    break;\n                case 'z':\n                case 'Z':\n                    x = x0;\n                    y = y0;\n                    break;\n\n                }\n            }\n\n            if (segType == 'M' || segType == 'm') {\n                x0 = x;\n                y0 = y;\n            }\n        }\n    };\n\n})();\n},{\"../core/Common\":14,\"../geometry/Bounds\":26}],28:[function(_dereq_,module,exports){\n/**\n* The `Matter.Vector` module contains methods for creating and manipulating vectors.\n* Vectors are the basis of all the geometry related operations in the engine.\n* A `Matter.Vector` object is of the form `{ x: 0, y: 0 }`.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Vector\n*/\n\n// TODO: consider params for reusing vector objects\n\nvar Vector = {};\n\nmodule.exports = Vector;\n\n(function() {\n\n    /**\n     * Creates a new vector.\n     * @method create\n     * @param {number} x\n     * @param {number} y\n     * @return {vector} A new vector\n     */\n    Vector.create = function(x, y) {\n        return { x: x || 0, y: y || 0 };\n    };\n\n    /**\n     * Returns a new vector with `x` and `y` copied from the given `vector`.\n     * @method clone\n     * @param {vector} vector\n     * @return {vector} A new cloned vector\n     */\n    Vector.clone = function(vector) {\n        return { x: vector.x, y: vector.y };\n    };\n\n    /**\n     * Returns the magnitude (length) of a vector.\n     * @method magnitude\n     * @param {vector} vector\n     * @return {number} The magnitude of the vector\n     */\n    Vector.magnitude = function(vector) {\n        return Math.sqrt((vector.x * vector.x) + (vector.y * vector.y));\n    };\n\n    /**\n     * Returns the magnitude (length) of a vector (therefore saving a `sqrt` operation).\n     * @method magnitudeSquared\n     * @param {vector} vector\n     * @return {number} The squared magnitude of the vector\n     */\n    Vector.magnitudeSquared = function(vector) {\n        return (vector.x * vector.x) + (vector.y * vector.y);\n    };\n\n    /**\n     * Rotates the vector about (0, 0) by specified angle.\n     * @method rotate\n     * @param {vector} vector\n     * @param {number} angle\n     * @param {vector} [output]\n     * @return {vector} The vector rotated about (0, 0)\n     */\n    Vector.rotate = function(vector, angle, output) {\n        var cos = Math.cos(angle), sin = Math.sin(angle);\n        if (!output) output = {};\n        var x = vector.x * cos - vector.y * sin;\n        output.y = vector.x * sin + vector.y * cos;\n        output.x = x;\n        return output;\n    };\n\n    /**\n     * Rotates the vector about a specified point by specified angle.\n     * @method rotateAbout\n     * @param {vector} vector\n     * @param {number} angle\n     * @param {vector} point\n     * @param {vector} [output]\n     * @return {vector} A new vector rotated about the point\n     */\n    Vector.rotateAbout = function(vector, angle, point, output) {\n        var cos = Math.cos(angle), sin = Math.sin(angle);\n        if (!output) output = {};\n        var x = point.x + ((vector.x - point.x) * cos - (vector.y - point.y) * sin);\n        output.y = point.y + ((vector.x - point.x) * sin + (vector.y - point.y) * cos);\n        output.x = x;\n        return output;\n    };\n\n    /**\n     * Normalises a vector (such that its magnitude is `1`).\n     * @method normalise\n     * @param {vector} vector\n     * @return {vector} A new vector normalised\n     */\n    Vector.normalise = function(vector) {\n        var magnitude = Vector.magnitude(vector);\n        if (magnitude === 0)\n            return { x: 0, y: 0 };\n        return { x: vector.x / magnitude, y: vector.y / magnitude };\n    };\n\n    /**\n     * Returns the dot-product of two vectors.\n     * @method dot\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The dot product of the two vectors\n     */\n    Vector.dot = function(vectorA, vectorB) {\n        return (vectorA.x * vectorB.x) + (vectorA.y * vectorB.y);\n    };\n\n    /**\n     * Returns the cross-product of two vectors.\n     * @method cross\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The cross product of the two vectors\n     */\n    Vector.cross = function(vectorA, vectorB) {\n        return (vectorA.x * vectorB.y) - (vectorA.y * vectorB.x);\n    };\n\n    /**\n     * Returns the cross-product of three vectors.\n     * @method cross3\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} vectorC\n     * @return {number} The cross product of the three vectors\n     */\n    Vector.cross3 = function(vectorA, vectorB, vectorC) {\n        return (vectorB.x - vectorA.x) * (vectorC.y - vectorA.y) - (vectorB.y - vectorA.y) * (vectorC.x - vectorA.x);\n    };\n\n    /**\n     * Adds the two vectors.\n     * @method add\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} [output]\n     * @return {vector} A new vector of vectorA and vectorB added\n     */\n    Vector.add = function(vectorA, vectorB, output) {\n        if (!output) output = {};\n        output.x = vectorA.x + vectorB.x;\n        output.y = vectorA.y + vectorB.y;\n        return output;\n    };\n\n    /**\n     * Subtracts the two vectors.\n     * @method sub\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} [output]\n     * @return {vector} A new vector of vectorA and vectorB subtracted\n     */\n    Vector.sub = function(vectorA, vectorB, output) {\n        if (!output) output = {};\n        output.x = vectorA.x - vectorB.x;\n        output.y = vectorA.y - vectorB.y;\n        return output;\n    };\n\n    /**\n     * Multiplies a vector and a scalar.\n     * @method mult\n     * @param {vector} vector\n     * @param {number} scalar\n     * @return {vector} A new vector multiplied by scalar\n     */\n    Vector.mult = function(vector, scalar) {\n        return { x: vector.x * scalar, y: vector.y * scalar };\n    };\n\n    /**\n     * Divides a vector and a scalar.\n     * @method div\n     * @param {vector} vector\n     * @param {number} scalar\n     * @return {vector} A new vector divided by scalar\n     */\n    Vector.div = function(vector, scalar) {\n        return { x: vector.x / scalar, y: vector.y / scalar };\n    };\n\n    /**\n     * Returns the perpendicular vector. Set `negate` to true for the perpendicular in the opposite direction.\n     * @method perp\n     * @param {vector} vector\n     * @param {bool} [negate=false]\n     * @return {vector} The perpendicular vector\n     */\n    Vector.perp = function(vector, negate) {\n        negate = negate === true ? -1 : 1;\n        return { x: negate * -vector.y, y: negate * vector.x };\n    };\n\n    /**\n     * Negates both components of a vector such that it points in the opposite direction.\n     * @method neg\n     * @param {vector} vector\n     * @return {vector} The negated vector\n     */\n    Vector.neg = function(vector) {\n        return { x: -vector.x, y: -vector.y };\n    };\n\n    /**\n     * Returns the angle between the vector `vectorB - vectorA` and the x-axis in radians.\n     * @method angle\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The angle in radians\n     */\n    Vector.angle = function(vectorA, vectorB) {\n        return Math.atan2(vectorB.y - vectorA.y, vectorB.x - vectorA.x);\n    };\n\n    /**\n     * Temporary vector pool (not thread-safe).\n     * @property _temp\n     * @type {vector[]}\n     * @private\n     */\n    Vector._temp = [\n        Vector.create(), Vector.create(), \n        Vector.create(), Vector.create(), \n        Vector.create(), Vector.create()\n    ];\n\n})();\n},{}],29:[function(_dereq_,module,exports){\n/**\n* The `Matter.Vertices` module contains methods for creating and manipulating sets of vertices.\n* A set of vertices is an array of `Matter.Vector` with additional indexing properties inserted by `Vertices.create`.\n* A `Matter.Body` maintains a set of vertices to represent the shape of the object (its convex hull).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Vertices\n*/\n\nvar Vertices = {};\n\nmodule.exports = Vertices;\n\nvar Vector = _dereq_('../geometry/Vector');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a new set of `Matter.Body` compatible vertices.\n     * The `points` argument accepts an array of `Matter.Vector` points orientated around the origin `(0, 0)`, for example:\n     *\n     *     [{ x: 0, y: 0 }, { x: 25, y: 50 }, { x: 50, y: 0 }]\n     *\n     * The `Vertices.create` method returns a new array of vertices, which are similar to Matter.Vector objects,\n     * but with some additional references required for efficient collision detection routines.\n     *\n     * Vertices must be specified in clockwise order.\n     *\n     * Note that the `body` argument is not optional, a `Matter.Body` reference must be provided.\n     *\n     * @method create\n     * @param {vector[]} points\n     * @param {body} body\n     */\n    Vertices.create = function(points, body) {\n        var vertices = [];\n\n        for (var i = 0; i < points.length; i++) {\n            var point = points[i],\n                vertex = {\n                    x: point.x,\n                    y: point.y,\n                    index: i,\n                    body: body,\n                    isInternal: false\n                };\n\n            vertices.push(vertex);\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Parses a string containing ordered x y pairs separated by spaces (and optionally commas), \n     * into a `Matter.Vertices` object for the given `Matter.Body`.\n     * For parsing SVG paths, see `Svg.pathToVertices`.\n     * @method fromPath\n     * @param {string} path\n     * @param {body} body\n     * @return {vertices} vertices\n     */\n    Vertices.fromPath = function(path, body) {\n        var pathPattern = /L?\\s*([\\-\\d\\.e]+)[\\s,]*([\\-\\d\\.e]+)*/ig,\n            points = [];\n\n        path.replace(pathPattern, function(match, x, y) {\n            points.push({ x: parseFloat(x), y: parseFloat(y) });\n        });\n\n        return Vertices.create(points, body);\n    };\n\n    /**\n     * Returns the centre (centroid) of the set of vertices.\n     * @method centre\n     * @param {vertices} vertices\n     * @return {vector} The centre point\n     */\n    Vertices.centre = function(vertices) {\n        var area = Vertices.area(vertices, true),\n            centre = { x: 0, y: 0 },\n            cross,\n            temp,\n            j;\n\n        for (var i = 0; i < vertices.length; i++) {\n            j = (i + 1) % vertices.length;\n            cross = Vector.cross(vertices[i], vertices[j]);\n            temp = Vector.mult(Vector.add(vertices[i], vertices[j]), cross);\n            centre = Vector.add(centre, temp);\n        }\n\n        return Vector.div(centre, 6 * area);\n    };\n\n    /**\n     * Returns the average (mean) of the set of vertices.\n     * @method mean\n     * @param {vertices} vertices\n     * @return {vector} The average point\n     */\n    Vertices.mean = function(vertices) {\n        var average = { x: 0, y: 0 };\n\n        for (var i = 0; i < vertices.length; i++) {\n            average.x += vertices[i].x;\n            average.y += vertices[i].y;\n        }\n\n        return Vector.div(average, vertices.length);\n    };\n\n    /**\n     * Returns the area of the set of vertices.\n     * @method area\n     * @param {vertices} vertices\n     * @param {bool} signed\n     * @return {number} The area\n     */\n    Vertices.area = function(vertices, signed) {\n        var area = 0,\n            j = vertices.length - 1;\n\n        for (var i = 0; i < vertices.length; i++) {\n            area += (vertices[j].x - vertices[i].x) * (vertices[j].y + vertices[i].y);\n            j = i;\n        }\n\n        if (signed)\n            return area / 2;\n\n        return Math.abs(area) / 2;\n    };\n\n    /**\n     * Returns the moment of inertia (second moment of area) of the set of vertices given the total mass.\n     * @method inertia\n     * @param {vertices} vertices\n     * @param {number} mass\n     * @return {number} The polygon's moment of inertia\n     */\n    Vertices.inertia = function(vertices, mass) {\n        var numerator = 0,\n            denominator = 0,\n            v = vertices,\n            cross,\n            j;\n\n        // find the polygon's moment of inertia, using second moment of area\n        // from equations at http://www.physicsforums.com/showthread.php?t=25293\n        for (var n = 0; n < v.length; n++) {\n            j = (n + 1) % v.length;\n            cross = Math.abs(Vector.cross(v[j], v[n]));\n            numerator += cross * (Vector.dot(v[j], v[j]) + Vector.dot(v[j], v[n]) + Vector.dot(v[n], v[n]));\n            denominator += cross;\n        }\n\n        return (mass / 6) * (numerator / denominator);\n    };\n\n    /**\n     * Translates the set of vertices in-place.\n     * @method translate\n     * @param {vertices} vertices\n     * @param {vector} vector\n     * @param {number} scalar\n     */\n    Vertices.translate = function(vertices, vector, scalar) {\n        var i;\n        if (scalar) {\n            for (i = 0; i < vertices.length; i++) {\n                vertices[i].x += vector.x * scalar;\n                vertices[i].y += vector.y * scalar;\n            }\n        } else {\n            for (i = 0; i < vertices.length; i++) {\n                vertices[i].x += vector.x;\n                vertices[i].y += vector.y;\n            }\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Rotates the set of vertices in-place.\n     * @method rotate\n     * @param {vertices} vertices\n     * @param {number} angle\n     * @param {vector} point\n     */\n    Vertices.rotate = function(vertices, angle, point) {\n        if (angle === 0)\n            return;\n\n        var cos = Math.cos(angle),\n            sin = Math.sin(angle);\n\n        for (var i = 0; i < vertices.length; i++) {\n            var vertice = vertices[i],\n                dx = vertice.x - point.x,\n                dy = vertice.y - point.y;\n                \n            vertice.x = point.x + (dx * cos - dy * sin);\n            vertice.y = point.y + (dx * sin + dy * cos);\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Returns `true` if the `point` is inside the set of `vertices`.\n     * @method contains\n     * @param {vertices} vertices\n     * @param {vector} point\n     * @return {boolean} True if the vertices contains point, otherwise false\n     */\n    Vertices.contains = function(vertices, point) {\n        for (var i = 0; i < vertices.length; i++) {\n            var vertice = vertices[i],\n                nextVertice = vertices[(i + 1) % vertices.length];\n            if ((point.x - vertice.x) * (nextVertice.y - vertice.y) + (point.y - vertice.y) * (vertice.x - nextVertice.x) > 0) {\n                return false;\n            }\n        }\n\n        return true;\n    };\n\n    /**\n     * Scales the vertices from a point (default is centre) in-place.\n     * @method scale\n     * @param {vertices} vertices\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} point\n     */\n    Vertices.scale = function(vertices, scaleX, scaleY, point) {\n        if (scaleX === 1 && scaleY === 1)\n            return vertices;\n\n        point = point || Vertices.centre(vertices);\n\n        var vertex,\n            delta;\n\n        for (var i = 0; i < vertices.length; i++) {\n            vertex = vertices[i];\n            delta = Vector.sub(vertex, point);\n            vertices[i].x = point.x + delta.x * scaleX;\n            vertices[i].y = point.y + delta.y * scaleY;\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Chamfers a set of vertices by giving them rounded corners, returns a new set of vertices.\n     * The radius parameter is a single number or an array to specify the radius for each vertex.\n     * @method chamfer\n     * @param {vertices} vertices\n     * @param {number[]} radius\n     * @param {number} quality\n     * @param {number} qualityMin\n     * @param {number} qualityMax\n     */\n    Vertices.chamfer = function(vertices, radius, quality, qualityMin, qualityMax) {\n        if (typeof radius === 'number') {\n            radius = [radius];\n        } else {\n            radius = radius || [8];\n        }\n\n        // quality defaults to -1, which is auto\n        quality = (typeof quality !== 'undefined') ? quality : -1;\n        qualityMin = qualityMin || 2;\n        qualityMax = qualityMax || 14;\n\n        var newVertices = [];\n\n        for (var i = 0; i < vertices.length; i++) {\n            var prevVertex = vertices[i - 1 >= 0 ? i - 1 : vertices.length - 1],\n                vertex = vertices[i],\n                nextVertex = vertices[(i + 1) % vertices.length],\n                currentRadius = radius[i < radius.length ? i : radius.length - 1];\n\n            if (currentRadius === 0) {\n                newVertices.push(vertex);\n                continue;\n            }\n\n            var prevNormal = Vector.normalise({ \n                x: vertex.y - prevVertex.y, \n                y: prevVertex.x - vertex.x\n            });\n\n            var nextNormal = Vector.normalise({ \n                x: nextVertex.y - vertex.y, \n                y: vertex.x - nextVertex.x\n            });\n\n            var diagonalRadius = Math.sqrt(2 * Math.pow(currentRadius, 2)),\n                radiusVector = Vector.mult(Common.clone(prevNormal), currentRadius),\n                midNormal = Vector.normalise(Vector.mult(Vector.add(prevNormal, nextNormal), 0.5)),\n                scaledVertex = Vector.sub(vertex, Vector.mult(midNormal, diagonalRadius));\n\n            var precision = quality;\n\n            if (quality === -1) {\n                // automatically decide precision\n                precision = Math.pow(currentRadius, 0.32) * 1.75;\n            }\n\n            precision = Common.clamp(precision, qualityMin, qualityMax);\n\n            // use an even value for precision, more likely to reduce axes by using symmetry\n            if (precision % 2 === 1)\n                precision += 1;\n\n            var alpha = Math.acos(Vector.dot(prevNormal, nextNormal)),\n                theta = alpha / precision;\n\n            for (var j = 0; j < precision; j++) {\n                newVertices.push(Vector.add(Vector.rotate(radiusVector, theta * j), scaledVertex));\n            }\n        }\n\n        return newVertices;\n    };\n\n    /**\n     * Sorts the input vertices into clockwise order in place.\n     * @method clockwiseSort\n     * @param {vertices} vertices\n     * @return {vertices} vertices\n     */\n    Vertices.clockwiseSort = function(vertices) {\n        var centre = Vertices.mean(vertices);\n\n        vertices.sort(function(vertexA, vertexB) {\n            return Vector.angle(centre, vertexA) - Vector.angle(centre, vertexB);\n        });\n\n        return vertices;\n    };\n\n    /**\n     * Returns true if the vertices form a convex shape (vertices must be in clockwise order).\n     * @method isConvex\n     * @param {vertices} vertices\n     * @return {bool} `true` if the `vertices` are convex, `false` if not (or `null` if not computable).\n     */\n    Vertices.isConvex = function(vertices) {\n        // http://paulbourke.net/geometry/polygonmesh/\n        // Copyright (c) Paul Bourke (use permitted)\n\n        var flag = 0,\n            n = vertices.length,\n            i,\n            j,\n            k,\n            z;\n\n        if (n < 3)\n            return null;\n\n        for (i = 0; i < n; i++) {\n            j = (i + 1) % n;\n            k = (i + 2) % n;\n            z = (vertices[j].x - vertices[i].x) * (vertices[k].y - vertices[j].y);\n            z -= (vertices[j].y - vertices[i].y) * (vertices[k].x - vertices[j].x);\n\n            if (z < 0) {\n                flag |= 1;\n            } else if (z > 0) {\n                flag |= 2;\n            }\n\n            if (flag === 3) {\n                return false;\n            }\n        }\n\n        if (flag !== 0){\n            return true;\n        } else {\n            return null;\n        }\n    };\n\n    /**\n     * Returns the convex hull of the input vertices as a new array of points.\n     * @method hull\n     * @param {vertices} vertices\n     * @return [vertex] vertices\n     */\n    Vertices.hull = function(vertices) {\n        // http://geomalgorithms.com/a10-_hull-1.html\n\n        var upper = [],\n            lower = [], \n            vertex,\n            i;\n\n        // sort vertices on x-axis (y-axis for ties)\n        vertices = vertices.slice(0);\n        vertices.sort(function(vertexA, vertexB) {\n            var dx = vertexA.x - vertexB.x;\n            return dx !== 0 ? dx : vertexA.y - vertexB.y;\n        });\n\n        // build lower hull\n        for (i = 0; i < vertices.length; i += 1) {\n            vertex = vertices[i];\n\n            while (lower.length >= 2 \n                   && Vector.cross3(lower[lower.length - 2], lower[lower.length - 1], vertex) <= 0) {\n                lower.pop();\n            }\n\n            lower.push(vertex);\n        }\n\n        // build upper hull\n        for (i = vertices.length - 1; i >= 0; i -= 1) {\n            vertex = vertices[i];\n\n            while (upper.length >= 2 \n                   && Vector.cross3(upper[upper.length - 2], upper[upper.length - 1], vertex) <= 0) {\n                upper.pop();\n            }\n\n            upper.push(vertex);\n        }\n\n        // concatenation of the lower and upper hulls gives the convex hull\n        // omit last points because they are repeated at the beginning of the other list\n        upper.pop();\n        lower.pop();\n\n        return upper.concat(lower);\n    };\n\n})();\n\n},{\"../core/Common\":14,\"../geometry/Vector\":28}],30:[function(_dereq_,module,exports){\nvar Matter = module.exports = _dereq_('../core/Matter');\n\nMatter.Body = _dereq_('../body/Body');\nMatter.Composite = _dereq_('../body/Composite');\nMatter.World = _dereq_('../body/World');\n\nMatter.Contact = _dereq_('../collision/Contact');\nMatter.Detector = _dereq_('../collision/Detector');\nMatter.Grid = _dereq_('../collision/Grid');\nMatter.Pairs = _dereq_('../collision/Pairs');\nMatter.Pair = _dereq_('../collision/Pair');\nMatter.Query = _dereq_('../collision/Query');\nMatter.Resolver = _dereq_('../collision/Resolver');\nMatter.SAT = _dereq_('../collision/SAT');\n\nMatter.Constraint = _dereq_('../constraint/Constraint');\nMatter.MouseConstraint = _dereq_('../constraint/MouseConstraint');\n\nMatter.Common = _dereq_('../core/Common');\nMatter.Engine = _dereq_('../core/Engine');\nMatter.Events = _dereq_('../core/Events');\nMatter.Mouse = _dereq_('../core/Mouse');\nMatter.Runner = _dereq_('../core/Runner');\nMatter.Sleeping = _dereq_('../core/Sleeping');\nMatter.Plugin = _dereq_('../core/Plugin');\n\n\nMatter.Bodies = _dereq_('../factory/Bodies');\nMatter.Composites = _dereq_('../factory/Composites');\n\nMatter.Axes = _dereq_('../geometry/Axes');\nMatter.Bounds = _dereq_('../geometry/Bounds');\nMatter.Svg = _dereq_('../geometry/Svg');\nMatter.Vector = _dereq_('../geometry/Vector');\nMatter.Vertices = _dereq_('../geometry/Vertices');\n\nMatter.Render = _dereq_('../render/Render');\nMatter.RenderPixi = _dereq_('../render/RenderPixi');\n\n// aliases\n\nMatter.World.add = Matter.Composite.add;\nMatter.World.remove = Matter.Composite.remove;\nMatter.World.addComposite = Matter.Composite.addComposite;\nMatter.World.addBody = Matter.Composite.addBody;\nMatter.World.addConstraint = Matter.Composite.addConstraint;\nMatter.World.clear = Matter.Composite.clear;\nMatter.Engine.run = Matter.Runner.run;\n\n},{\"../body/Body\":1,\"../body/Composite\":2,\"../body/World\":3,\"../collision/Contact\":4,\"../collision/Detector\":5,\"../collision/Grid\":6,\"../collision/Pair\":7,\"../collision/Pairs\":8,\"../collision/Query\":9,\"../collision/Resolver\":10,\"../collision/SAT\":11,\"../constraint/Constraint\":12,\"../constraint/MouseConstraint\":13,\"../core/Common\":14,\"../core/Engine\":15,\"../core/Events\":16,\"../core/Matter\":17,\"../core/Metrics\":18,\"../core/Mouse\":19,\"../core/Plugin\":20,\"../core/Runner\":21,\"../core/Sleeping\":22,\"../factory/Bodies\":23,\"../factory/Composites\":24,\"../geometry/Axes\":25,\"../geometry/Bounds\":26,\"../geometry/Svg\":27,\"../geometry/Vector\":28,\"../geometry/Vertices\":29,\"../render/Render\":31,\"../render/RenderPixi\":32}],31:[function(_dereq_,module,exports){\n/**\n* The `Matter.Render` module is a simple HTML5 canvas based renderer for visualising instances of `Matter.Engine`.\n* It is intended for development and debugging purposes, but may also be suitable for simple games.\n* It includes a number of drawing options including wireframe, vector with support for sprites and viewports.\n*\n* @class Render\n*/\n\nvar Render = {};\n\nmodule.exports = Render;\n\nvar Common = _dereq_('../core/Common');\nvar Composite = _dereq_('../body/Composite');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Events = _dereq_('../core/Events');\nvar Grid = _dereq_('../collision/Grid');\nvar Vector = _dereq_('../geometry/Vector');\nvar Mouse = _dereq_('../core/Mouse');\n\n(function() {\n\n    var _requestAnimationFrame,\n        _cancelAnimationFrame;\n\n    if (typeof window !== 'undefined') {\n        _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\n                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame\n                                      || function(callback){ window.setTimeout(function() { callback(Common.now()); }, 1000 / 60); };\n\n        _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame\n                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;\n    }\n\n    /**\n     * Creates a new renderer. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {object} [options]\n     * @return {render} A new renderer\n     */\n    Render.create = function(options) {\n        var defaults = {\n            controller: Render,\n            engine: null,\n            element: null,\n            canvas: null,\n            mouse: null,\n            frameRequestId: null,\n            options: {\n                width: 800,\n                height: 600,\n                pixelRatio: 1,\n                background: '#18181d',\n                wireframeBackground: '#0f0f13',\n                hasBounds: !!options.bounds,\n                enabled: true,\n                wireframes: true,\n                showSleeping: true,\n                showDebug: false,\n                showBroadphase: false,\n                showBounds: false,\n                showVelocity: false,\n                showCollisions: false,\n                showSeparations: false,\n                showAxes: false,\n                showPositions: false,\n                showAngleIndicator: false,\n                showIds: false,\n                showShadows: false,\n                showVertexNumbers: false,\n                showConvexHulls: false,\n                showInternalEdges: false,\n                showMousePosition: false\n            }\n        };\n\n        var render = Common.extend(defaults, options);\n\n        if (render.canvas) {\n            render.canvas.width = render.options.width || render.canvas.width;\n            render.canvas.height = render.options.height || render.canvas.height;\n        }\n\n        render.mouse = options.mouse;\n        render.engine = options.engine;\n        render.canvas = render.canvas || _createCanvas(render.options.width, render.options.height);\n        render.context = render.canvas.getContext('2d');\n        render.textures = {};\n\n        render.bounds = render.bounds || {\n            min: {\n                x: 0,\n                y: 0\n            },\n            max: {\n                x: render.canvas.width,\n                y: render.canvas.height\n            }\n        };\n\n        if (render.options.pixelRatio !== 1) {\n            Render.setPixelRatio(render, render.options.pixelRatio);\n        }\n\n        if (Common.isElement(render.element)) {\n            render.element.appendChild(render.canvas);\n        } else if (!render.canvas.parentNode) {\n            Common.log('Render.create: options.element was undefined, render.canvas was created but not appended', 'warn');\n        }\n\n        return render;\n    };\n\n    /**\n     * Continuously updates the render canvas on the `requestAnimationFrame` event.\n     * @method run\n     * @param {render} render\n     */\n    Render.run = function(render) {\n        (function loop(time){\n            render.frameRequestId = _requestAnimationFrame(loop);\n            Render.world(render);\n        })();\n    };\n\n    /**\n     * Ends execution of `Render.run` on the given `render`, by canceling the animation frame request event loop.\n     * @method stop\n     * @param {render} render\n     */\n    Render.stop = function(render) {\n        _cancelAnimationFrame(render.frameRequestId);\n    };\n\n    /**\n     * Sets the pixel ratio of the renderer and updates the canvas.\n     * To automatically detect the correct ratio, pass the string `'auto'` for `pixelRatio`.\n     * @method setPixelRatio\n     * @param {render} render\n     * @param {number} pixelRatio\n     */\n    Render.setPixelRatio = function(render, pixelRatio) {\n        var options = render.options,\n            canvas = render.canvas;\n\n        if (pixelRatio === 'auto') {\n            pixelRatio = _getPixelRatio(canvas);\n        }\n\n        options.pixelRatio = pixelRatio;\n        canvas.setAttribute('data-pixel-ratio', pixelRatio);\n        canvas.width = options.width * pixelRatio;\n        canvas.height = options.height * pixelRatio;\n        canvas.style.width = options.width + 'px';\n        canvas.style.height = options.height + 'px';\n        render.context.scale(pixelRatio, pixelRatio);\n    };\n\n    /**\n     * Positions and sizes the viewport around the given object bounds.\n     * Objects must have at least one of the following properties:\n     * - `object.bounds`\n     * - `object.position`\n     * - `object.min` and `object.max`\n     * - `object.x` and `object.y`\n     * @method lookAt\n     * @param {render} render\n     * @param {object[]} objects\n     * @param {vector} [padding]\n     * @param {bool} [center=true]\n     */\n    Render.lookAt = function(render, objects, padding, center) {\n        center = typeof center !== 'undefined' ? center : true;\n        objects = Common.isArray(objects) ? objects : [objects];\n        padding = padding || {\n            x: 0,\n            y: 0\n        };\n\n        // find bounds of all objects\n        var bounds = {\n            min: { x: Infinity, y: Infinity },\n            max: { x: -Infinity, y: -Infinity }\n        };\n\n        for (var i = 0; i < objects.length; i += 1) {\n            var object = objects[i],\n                min = object.bounds ? object.bounds.min : (object.min || object.position || object),\n                max = object.bounds ? object.bounds.max : (object.max || object.position || object);\n\n            if (min && max) {\n                if (min.x < bounds.min.x)\n                    bounds.min.x = min.x;\n\n                if (max.x > bounds.max.x)\n                    bounds.max.x = max.x;\n\n                if (min.y < bounds.min.y)\n                    bounds.min.y = min.y;\n\n                if (max.y > bounds.max.y)\n                    bounds.max.y = max.y;\n            }\n        }\n\n        // find ratios\n        var width = (bounds.max.x - bounds.min.x) + 2 * padding.x,\n            height = (bounds.max.y - bounds.min.y) + 2 * padding.y,\n            viewHeight = render.canvas.height,\n            viewWidth = render.canvas.width,\n            outerRatio = viewWidth / viewHeight,\n            innerRatio = width / height,\n            scaleX = 1,\n            scaleY = 1;\n\n        // find scale factor\n        if (innerRatio > outerRatio) {\n            scaleY = innerRatio / outerRatio;\n        } else {\n            scaleX = outerRatio / innerRatio;\n        }\n\n        // enable bounds\n        render.options.hasBounds = true;\n\n        // position and size\n        render.bounds.min.x = bounds.min.x;\n        render.bounds.max.x = bounds.min.x + width * scaleX;\n        render.bounds.min.y = bounds.min.y;\n        render.bounds.max.y = bounds.min.y + height * scaleY;\n\n        // center\n        if (center) {\n            render.bounds.min.x += width * 0.5 - (width * scaleX) * 0.5;\n            render.bounds.max.x += width * 0.5 - (width * scaleX) * 0.5;\n            render.bounds.min.y += height * 0.5 - (height * scaleY) * 0.5;\n            render.bounds.max.y += height * 0.5 - (height * scaleY) * 0.5;\n        }\n\n        // padding\n        render.bounds.min.x -= padding.x;\n        render.bounds.max.x -= padding.x;\n        render.bounds.min.y -= padding.y;\n        render.bounds.max.y -= padding.y;\n\n        // update mouse\n        if (render.mouse) {\n            Mouse.setScale(render.mouse, {\n                x: (render.bounds.max.x - render.bounds.min.x) / render.canvas.width,\n                y: (render.bounds.max.y - render.bounds.min.y) / render.canvas.height\n            });\n\n            Mouse.setOffset(render.mouse, render.bounds.min);\n        }\n    };\n\n    /**\n     * Applies viewport transforms based on `render.bounds` to a render context.\n     * @method startViewTransform\n     * @param {render} render\n     */\n    Render.startViewTransform = function(render) {\n        var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n            boundsHeight = render.bounds.max.y - render.bounds.min.y,\n            boundsScaleX = boundsWidth / render.options.width,\n            boundsScaleY = boundsHeight / render.options.height;\n\n        render.context.scale(1 / boundsScaleX, 1 / boundsScaleY);\n        render.context.translate(-render.bounds.min.x, -render.bounds.min.y);\n    };\n\n    /**\n     * Resets all transforms on the render context.\n     * @method endViewTransform\n     * @param {render} render\n     */\n    Render.endViewTransform = function(render) {\n        render.context.setTransform(render.options.pixelRatio, 0, 0, render.options.pixelRatio, 0, 0);\n    };\n\n    /**\n     * Renders the given `engine`'s `Matter.World` object.\n     * This is the entry point for all rendering and should be called every time the scene changes.\n     * @method world\n     * @param {render} render\n     */\n    Render.world = function(render) {\n        var engine = render.engine,\n            world = engine.world,\n            canvas = render.canvas,\n            context = render.context,\n            options = render.options,\n            allBodies = Composite.allBodies(world),\n            allConstraints = Composite.allConstraints(world),\n            background = options.wireframes ? options.wireframeBackground : options.background,\n            bodies = [],\n            constraints = [],\n            i;\n\n        var event = {\n            timestamp: engine.timing.timestamp\n        };\n\n        Events.trigger(render, 'beforeRender', event);\n\n        // apply background if it has changed\n        if (render.currentBackground !== background)\n            _applyBackground(render, background);\n\n        // clear the canvas with a transparent fill, to allow the canvas background to show\n        context.globalCompositeOperation = 'source-in';\n        context.fillStyle = \"transparent\";\n        context.fillRect(0, 0, canvas.width, canvas.height);\n        context.globalCompositeOperation = 'source-over';\n\n        // handle bounds\n        if (options.hasBounds) {\n            // filter out bodies that are not in view\n            for (i = 0; i < allBodies.length; i++) {\n                var body = allBodies[i];\n                if (Bounds.overlaps(body.bounds, render.bounds))\n                    bodies.push(body);\n            }\n\n            // filter out constraints that are not in view\n            for (i = 0; i < allConstraints.length; i++) {\n                var constraint = allConstraints[i],\n                    bodyA = constraint.bodyA,\n                    bodyB = constraint.bodyB,\n                    pointAWorld = constraint.pointA,\n                    pointBWorld = constraint.pointB;\n\n                if (bodyA) pointAWorld = Vector.add(bodyA.position, constraint.pointA);\n                if (bodyB) pointBWorld = Vector.add(bodyB.position, constraint.pointB);\n\n                if (!pointAWorld || !pointBWorld)\n                    continue;\n\n                if (Bounds.contains(render.bounds, pointAWorld) || Bounds.contains(render.bounds, pointBWorld))\n                    constraints.push(constraint);\n            }\n\n            // transform the view\n            Render.startViewTransform(render);\n\n            // update mouse\n            if (render.mouse) {\n                Mouse.setScale(render.mouse, {\n                    x: (render.bounds.max.x - render.bounds.min.x) / render.canvas.width,\n                    y: (render.bounds.max.y - render.bounds.min.y) / render.canvas.height\n                });\n\n                Mouse.setOffset(render.mouse, render.bounds.min);\n            }\n        } else {\n            constraints = allConstraints;\n            bodies = allBodies;\n        }\n\n        if (!options.wireframes || (engine.enableSleeping && options.showSleeping)) {\n            // fully featured rendering of bodies\n            Render.bodies(render, bodies, context);\n        } else {\n            if (options.showConvexHulls)\n                Render.bodyConvexHulls(render, bodies, context);\n\n            // optimised method for wireframes only\n            Render.bodyWireframes(render, bodies, context);\n        }\n\n        if (options.showBounds)\n            Render.bodyBounds(render, bodies, context);\n\n        if (options.showAxes || options.showAngleIndicator)\n            Render.bodyAxes(render, bodies, context);\n\n        if (options.showPositions)\n            Render.bodyPositions(render, bodies, context);\n\n        if (options.showVelocity)\n            Render.bodyVelocity(render, bodies, context);\n\n        if (options.showIds)\n            Render.bodyIds(render, bodies, context);\n\n        if (options.showSeparations)\n            Render.separations(render, engine.pairs.list, context);\n\n        if (options.showCollisions)\n            Render.collisions(render, engine.pairs.list, context);\n\n        if (options.showVertexNumbers)\n            Render.vertexNumbers(render, bodies, context);\n\n        if (options.showMousePosition)\n            Render.mousePosition(render, render.mouse, context);\n\n        Render.constraints(constraints, context);\n\n        if (options.showBroadphase && engine.broadphase.controller === Grid)\n            Render.grid(render, engine.broadphase, context);\n\n        if (options.showDebug)\n            Render.debug(render, context);\n\n        if (options.hasBounds) {\n            // revert view transforms\n            Render.endViewTransform(render);\n        }\n\n        Events.trigger(render, 'afterRender', event);\n    };\n\n    /**\n     * Description\n     * @private\n     * @method debug\n     * @param {render} render\n     * @param {RenderingContext} context\n     */\n    Render.debug = function(render, context) {\n        var c = context,\n            engine = render.engine,\n            world = engine.world,\n            metrics = engine.metrics,\n            options = render.options,\n            bodies = Composite.allBodies(world),\n            space = \"    \";\n\n        if (engine.timing.timestamp - (render.debugTimestamp || 0) >= 500) {\n            var text = \"\";\n\n            if (metrics.timing) {\n                text += \"fps: \" + Math.round(metrics.timing.fps) + space;\n            }\n\n\n            render.debugString = text;\n            render.debugTimestamp = engine.timing.timestamp;\n        }\n\n        if (render.debugString) {\n            c.font = \"12px Arial\";\n\n            if (options.wireframes) {\n                c.fillStyle = 'rgba(255,255,255,0.5)';\n            } else {\n                c.fillStyle = 'rgba(0,0,0,0.5)';\n            }\n\n            var split = render.debugString.split('\\n');\n\n            for (var i = 0; i < split.length; i++) {\n                c.fillText(split[i], 50, 50 + i * 18);\n            }\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method constraints\n     * @param {constraint[]} constraints\n     * @param {RenderingContext} context\n     */\n    Render.constraints = function(constraints, context) {\n        var c = context;\n\n        for (var i = 0; i < constraints.length; i++) {\n            var constraint = constraints[i];\n\n            if (!constraint.render.visible || !constraint.pointA || !constraint.pointB)\n                continue;\n\n            var bodyA = constraint.bodyA,\n                bodyB = constraint.bodyB,\n                start,\n                end;\n\n            if (bodyA) {\n                start = Vector.add(bodyA.position, constraint.pointA);\n            } else {\n                start = constraint.pointA;\n            }\n\n            if (constraint.render.type === 'pin') {\n                c.beginPath();\n                c.arc(start.x, start.y, 3, 0, 2 * Math.PI);\n                c.closePath();\n            } else {\n                if (bodyB) {\n                    end = Vector.add(bodyB.position, constraint.pointB);\n                } else {\n                    end = constraint.pointB;\n                }\n\n                c.beginPath();\n                c.moveTo(start.x, start.y);\n\n                if (constraint.render.type === 'spring') {\n                    var delta = Vector.sub(end, start),\n                        normal = Vector.perp(Vector.normalise(delta)),\n                        coils = Math.ceil(Common.clamp(constraint.length / 5, 12, 20)),\n                        offset;\n\n                    for (var j = 1; j < coils; j += 1) {\n                        offset = j % 2 === 0 ? 1 : -1;\n\n                        c.lineTo(\n                            start.x + delta.x * (j / coils) + normal.x * offset * 4,\n                            start.y + delta.y * (j / coils) + normal.y * offset * 4\n                        );\n                    }\n                }\n\n                c.lineTo(end.x, end.y);\n            }\n\n            if (constraint.render.lineWidth) {\n                c.lineWidth = constraint.render.lineWidth;\n                c.strokeStyle = constraint.render.strokeStyle;\n                c.stroke();\n            }\n\n            if (constraint.render.anchors) {\n                c.fillStyle = constraint.render.strokeStyle;\n                c.beginPath();\n                c.arc(start.x, start.y, 3, 0, 2 * Math.PI);\n                c.arc(end.x, end.y, 3, 0, 2 * Math.PI);\n                c.closePath();\n                c.fill();\n            }\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method bodyShadows\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyShadows = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine;\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            if (body.circleRadius) {\n                c.beginPath();\n                c.arc(body.position.x, body.position.y, body.circleRadius, 0, 2 * Math.PI);\n                c.closePath();\n            } else {\n                c.beginPath();\n                c.moveTo(body.vertices[0].x, body.vertices[0].y);\n                for (var j = 1; j < body.vertices.length; j++) {\n                    c.lineTo(body.vertices[j].x, body.vertices[j].y);\n                }\n                c.closePath();\n            }\n\n            var distanceX = body.position.x - render.options.width * 0.5,\n                distanceY = body.position.y - render.options.height * 0.2,\n                distance = Math.abs(distanceX) + Math.abs(distanceY);\n\n            c.shadowColor = 'rgba(0,0,0,0.15)';\n            c.shadowOffsetX = 0.05 * distanceX;\n            c.shadowOffsetY = 0.05 * distanceY;\n            c.shadowBlur = 1 + 12 * Math.min(1, distance / 1000);\n\n            c.fill();\n\n            c.shadowColor = null;\n            c.shadowOffsetX = null;\n            c.shadowOffsetY = null;\n            c.shadowBlur = null;\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method bodies\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodies = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options,\n            showInternalEdges = options.showInternalEdges || !options.wireframes,\n            body,\n            part,\n            i,\n            k;\n\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            // handle compound parts\n            for (k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n                part = body.parts[k];\n\n                if (!part.render.visible)\n                    continue;\n\n                if (options.showSleeping && body.isSleeping) {\n                    c.globalAlpha = 0.5 * part.render.opacity;\n                } else if (part.render.opacity !== 1) {\n                    c.globalAlpha = part.render.opacity;\n                }\n\n                if (part.render.sprite && part.render.sprite.texture && !options.wireframes) {\n                    // part sprite\n                    var sprite = part.render.sprite,\n                        texture = _getTexture(render, sprite.texture);\n\n                    c.translate(part.position.x, part.position.y);\n                    c.rotate(part.angle);\n\n                    c.drawImage(\n                        texture,\n                        texture.width * -sprite.xOffset * sprite.xScale,\n                        texture.height * -sprite.yOffset * sprite.yScale,\n                        texture.width * sprite.xScale,\n                        texture.height * sprite.yScale\n                    );\n\n                    // revert translation, hopefully faster than save / restore\n                    c.rotate(-part.angle);\n                    c.translate(-part.position.x, -part.position.y);\n                } else {\n                    // part polygon\n                    if (part.circleRadius) {\n                        c.beginPath();\n                        c.arc(part.position.x, part.position.y, part.circleRadius, 0, 2 * Math.PI);\n                    } else {\n                        c.beginPath();\n                        c.moveTo(part.vertices[0].x, part.vertices[0].y);\n\n                        for (var j = 1; j < part.vertices.length; j++) {\n                            if (!part.vertices[j - 1].isInternal || showInternalEdges) {\n                                c.lineTo(part.vertices[j].x, part.vertices[j].y);\n                            } else {\n                                c.moveTo(part.vertices[j].x, part.vertices[j].y);\n                            }\n\n                            if (part.vertices[j].isInternal && !showInternalEdges) {\n                                c.moveTo(part.vertices[(j + 1) % part.vertices.length].x, part.vertices[(j + 1) % part.vertices.length].y);\n                            }\n                        }\n\n                        c.lineTo(part.vertices[0].x, part.vertices[0].y);\n                        c.closePath();\n                    }\n\n                    if (!options.wireframes) {\n                        c.fillStyle = part.render.fillStyle;\n\n                        if (part.render.lineWidth) {\n                            c.lineWidth = part.render.lineWidth;\n                            c.strokeStyle = part.render.strokeStyle;\n                            c.stroke();\n                        }\n\n                        c.fill();\n                    } else {\n                        c.lineWidth = 1;\n                        c.strokeStyle = '#bbb';\n                        c.stroke();\n                    }\n                }\n\n                c.globalAlpha = 1;\n            }\n        }\n    };\n\n    /**\n     * Optimised method for drawing body wireframes in one pass\n     * @private\n     * @method bodyWireframes\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyWireframes = function(render, bodies, context) {\n        var c = context,\n            showInternalEdges = render.options.showInternalEdges,\n            body,\n            part,\n            i,\n            j,\n            k;\n\n        c.beginPath();\n\n        // render all bodies\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            // handle compound parts\n            for (k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n                part = body.parts[k];\n\n                c.moveTo(part.vertices[0].x, part.vertices[0].y);\n\n                for (j = 1; j < part.vertices.length; j++) {\n                    if (!part.vertices[j - 1].isInternal || showInternalEdges) {\n                        c.lineTo(part.vertices[j].x, part.vertices[j].y);\n                    } else {\n                        c.moveTo(part.vertices[j].x, part.vertices[j].y);\n                    }\n\n                    if (part.vertices[j].isInternal && !showInternalEdges) {\n                        c.moveTo(part.vertices[(j + 1) % part.vertices.length].x, part.vertices[(j + 1) % part.vertices.length].y);\n                    }\n                }\n\n                c.lineTo(part.vertices[0].x, part.vertices[0].y);\n            }\n        }\n\n        c.lineWidth = 1;\n        c.strokeStyle = '#bbb';\n        c.stroke();\n    };\n\n    /**\n     * Optimised method for drawing body convex hull wireframes in one pass\n     * @private\n     * @method bodyConvexHulls\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyConvexHulls = function(render, bodies, context) {\n        var c = context,\n            body,\n            part,\n            i,\n            j,\n            k;\n\n        c.beginPath();\n\n        // render convex hulls\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible || body.parts.length === 1)\n                continue;\n\n            c.moveTo(body.vertices[0].x, body.vertices[0].y);\n\n            for (j = 1; j < body.vertices.length; j++) {\n                c.lineTo(body.vertices[j].x, body.vertices[j].y);\n            }\n\n            c.lineTo(body.vertices[0].x, body.vertices[0].y);\n        }\n\n        c.lineWidth = 1;\n        c.strokeStyle = 'rgba(255,255,255,0.2)';\n        c.stroke();\n    };\n\n    /**\n     * Renders body vertex numbers.\n     * @private\n     * @method vertexNumbers\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.vertexNumbers = function(render, bodies, context) {\n        var c = context,\n            i,\n            j,\n            k;\n\n        for (i = 0; i < bodies.length; i++) {\n            var parts = bodies[i].parts;\n            for (k = parts.length > 1 ? 1 : 0; k < parts.length; k++) {\n                var part = parts[k];\n                for (j = 0; j < part.vertices.length; j++) {\n                    c.fillStyle = 'rgba(255,255,255,0.2)';\n                    c.fillText(i + '_' + j, part.position.x + (part.vertices[j].x - part.position.x) * 0.8, part.position.y + (part.vertices[j].y - part.position.y) * 0.8);\n                }\n            }\n        }\n    };\n\n    /**\n     * Renders mouse position.\n     * @private\n     * @method mousePosition\n     * @param {render} render\n     * @param {mouse} mouse\n     * @param {RenderingContext} context\n     */\n    Render.mousePosition = function(render, mouse, context) {\n        var c = context;\n        c.fillStyle = 'rgba(255,255,255,0.8)';\n        c.fillText(mouse.position.x + '  ' + mouse.position.y, mouse.position.x + 5, mouse.position.y - 5);\n    };\n\n    /**\n     * Draws body bounds\n     * @private\n     * @method bodyBounds\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyBounds = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options;\n\n        c.beginPath();\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.render.visible) {\n                var parts = bodies[i].parts;\n                for (var j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    var part = parts[j];\n                    c.rect(part.bounds.min.x, part.bounds.min.y, part.bounds.max.x - part.bounds.min.x, part.bounds.max.y - part.bounds.min.y);\n                }\n            }\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,255,255,0.08)';\n        } else {\n            c.strokeStyle = 'rgba(0,0,0,0.1)';\n        }\n\n        c.lineWidth = 1;\n        c.stroke();\n    };\n\n    /**\n     * Draws body angle indicators and axes\n     * @private\n     * @method bodyAxes\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyAxes = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options,\n            part,\n            i,\n            j,\n            k;\n\n        c.beginPath();\n\n        for (i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                parts = body.parts;\n\n            if (!body.render.visible)\n                continue;\n\n            if (options.showAxes) {\n                // render all axes\n                for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    part = parts[j];\n                    for (k = 0; k < part.axes.length; k++) {\n                        var axis = part.axes[k];\n                        c.moveTo(part.position.x, part.position.y);\n                        c.lineTo(part.position.x + axis.x * 20, part.position.y + axis.y * 20);\n                    }\n                }\n            } else {\n                for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    part = parts[j];\n                    for (k = 0; k < part.axes.length; k++) {\n                        // render a single axis indicator\n                        c.moveTo(part.position.x, part.position.y);\n                        c.lineTo((part.vertices[0].x + part.vertices[part.vertices.length-1].x) / 2,\n                                 (part.vertices[0].y + part.vertices[part.vertices.length-1].y) / 2);\n                    }\n                }\n            }\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'indianred';\n            c.lineWidth = 1;\n        } else {\n            c.strokeStyle = 'rgba(255, 255, 255, 0.4)';\n            c.globalCompositeOperation = 'overlay';\n            c.lineWidth = 2;\n        }\n\n        c.stroke();\n        c.globalCompositeOperation = 'source-over';\n    };\n\n    /**\n     * Draws body positions\n     * @private\n     * @method bodyPositions\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyPositions = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options,\n            body,\n            part,\n            i,\n            k;\n\n        c.beginPath();\n\n        // render current positions\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            // handle compound parts\n            for (k = 0; k < body.parts.length; k++) {\n                part = body.parts[k];\n                c.arc(part.position.x, part.position.y, 3, 0, 2 * Math.PI, false);\n                c.closePath();\n            }\n        }\n\n        if (options.wireframes) {\n            c.fillStyle = 'indianred';\n        } else {\n            c.fillStyle = 'rgba(0,0,0,0.5)';\n        }\n        c.fill();\n\n        c.beginPath();\n\n        // render previous positions\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n            if (body.render.visible) {\n                c.arc(body.positionPrev.x, body.positionPrev.y, 2, 0, 2 * Math.PI, false);\n                c.closePath();\n            }\n        }\n\n        c.fillStyle = 'rgba(255,165,0,0.8)';\n        c.fill();\n    };\n\n    /**\n     * Draws body velocity\n     * @private\n     * @method bodyVelocity\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyVelocity = function(render, bodies, context) {\n        var c = context;\n\n        c.beginPath();\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            c.moveTo(body.position.x, body.position.y);\n            c.lineTo(body.position.x + (body.position.x - body.positionPrev.x) * 2, body.position.y + (body.position.y - body.positionPrev.y) * 2);\n        }\n\n        c.lineWidth = 3;\n        c.strokeStyle = 'cornflowerblue';\n        c.stroke();\n    };\n\n    /**\n     * Draws body ids\n     * @private\n     * @method bodyIds\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyIds = function(render, bodies, context) {\n        var c = context,\n            i,\n            j;\n\n        for (i = 0; i < bodies.length; i++) {\n            if (!bodies[i].render.visible)\n                continue;\n\n            var parts = bodies[i].parts;\n            for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                var part = parts[j];\n                c.font = \"12px Arial\";\n                c.fillStyle = 'rgba(255,255,255,0.5)';\n                c.fillText(part.id, part.position.x + 10, part.position.y - 10);\n            }\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method collisions\n     * @param {render} render\n     * @param {pair[]} pairs\n     * @param {RenderingContext} context\n     */\n    Render.collisions = function(render, pairs, context) {\n        var c = context,\n            options = render.options,\n            pair,\n            collision,\n            corrected,\n            bodyA,\n            bodyB,\n            i,\n            j;\n\n        c.beginPath();\n\n        // render collision positions\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            collision = pair.collision;\n            for (j = 0; j < pair.activeContacts.length; j++) {\n                var contact = pair.activeContacts[j],\n                    vertex = contact.vertex;\n                c.rect(vertex.x - 1.5, vertex.y - 1.5, 3.5, 3.5);\n            }\n        }\n\n        if (options.wireframes) {\n            c.fillStyle = 'rgba(255,255,255,0.7)';\n        } else {\n            c.fillStyle = 'orange';\n        }\n        c.fill();\n\n        c.beginPath();\n\n        // render collision normals\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            collision = pair.collision;\n\n            if (pair.activeContacts.length > 0) {\n                var normalPosX = pair.activeContacts[0].vertex.x,\n                    normalPosY = pair.activeContacts[0].vertex.y;\n\n                if (pair.activeContacts.length === 2) {\n                    normalPosX = (pair.activeContacts[0].vertex.x + pair.activeContacts[1].vertex.x) / 2;\n                    normalPosY = (pair.activeContacts[0].vertex.y + pair.activeContacts[1].vertex.y) / 2;\n                }\n\n                if (collision.bodyB === collision.supports[0].body || collision.bodyA.isStatic === true) {\n                    c.moveTo(normalPosX - collision.normal.x * 8, normalPosY - collision.normal.y * 8);\n                } else {\n                    c.moveTo(normalPosX + collision.normal.x * 8, normalPosY + collision.normal.y * 8);\n                }\n\n                c.lineTo(normalPosX, normalPosY);\n            }\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,165,0,0.7)';\n        } else {\n            c.strokeStyle = 'orange';\n        }\n\n        c.lineWidth = 1;\n        c.stroke();\n    };\n\n    /**\n     * Description\n     * @private\n     * @method separations\n     * @param {render} render\n     * @param {pair[]} pairs\n     * @param {RenderingContext} context\n     */\n    Render.separations = function(render, pairs, context) {\n        var c = context,\n            options = render.options,\n            pair,\n            collision,\n            corrected,\n            bodyA,\n            bodyB,\n            i,\n            j;\n\n        c.beginPath();\n\n        // render separations\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            collision = pair.collision;\n            bodyA = collision.bodyA;\n            bodyB = collision.bodyB;\n\n            var k = 1;\n\n            if (!bodyB.isStatic && !bodyA.isStatic) k = 0.5;\n            if (bodyB.isStatic) k = 0;\n\n            c.moveTo(bodyB.position.x, bodyB.position.y);\n            c.lineTo(bodyB.position.x - collision.penetration.x * k, bodyB.position.y - collision.penetration.y * k);\n\n            k = 1;\n\n            if (!bodyB.isStatic && !bodyA.isStatic) k = 0.5;\n            if (bodyA.isStatic) k = 0;\n\n            c.moveTo(bodyA.position.x, bodyA.position.y);\n            c.lineTo(bodyA.position.x + collision.penetration.x * k, bodyA.position.y + collision.penetration.y * k);\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,165,0,0.5)';\n        } else {\n            c.strokeStyle = 'orange';\n        }\n        c.stroke();\n    };\n\n    /**\n     * Description\n     * @private\n     * @method grid\n     * @param {render} render\n     * @param {grid} grid\n     * @param {RenderingContext} context\n     */\n    Render.grid = function(render, grid, context) {\n        var c = context,\n            options = render.options;\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,180,0,0.1)';\n        } else {\n            c.strokeStyle = 'rgba(255,180,0,0.5)';\n        }\n\n        c.beginPath();\n\n        var bucketKeys = Common.keys(grid.buckets);\n\n        for (var i = 0; i < bucketKeys.length; i++) {\n            var bucketId = bucketKeys[i];\n\n            if (grid.buckets[bucketId].length < 2)\n                continue;\n\n            var region = bucketId.split(/C|R/);\n            c.rect(0.5 + parseInt(region[1], 10) * grid.bucketWidth,\n                    0.5 + parseInt(region[2], 10) * grid.bucketHeight,\n                    grid.bucketWidth,\n                    grid.bucketHeight);\n        }\n\n        c.lineWidth = 1;\n        c.stroke();\n    };\n\n    /**\n     * Description\n     * @private\n     * @method inspector\n     * @param {inspector} inspector\n     * @param {RenderingContext} context\n     */\n    Render.inspector = function(inspector, context) {\n        var engine = inspector.engine,\n            selected = inspector.selected,\n            render = inspector.render,\n            options = render.options,\n            bounds;\n\n        if (options.hasBounds) {\n            var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n                boundsHeight = render.bounds.max.y - render.bounds.min.y,\n                boundsScaleX = boundsWidth / render.options.width,\n                boundsScaleY = boundsHeight / render.options.height;\n\n            context.scale(1 / boundsScaleX, 1 / boundsScaleY);\n            context.translate(-render.bounds.min.x, -render.bounds.min.y);\n        }\n\n        for (var i = 0; i < selected.length; i++) {\n            var item = selected[i].data;\n\n            context.translate(0.5, 0.5);\n            context.lineWidth = 1;\n            context.strokeStyle = 'rgba(255,165,0,0.9)';\n            context.setLineDash([1,2]);\n\n            switch (item.type) {\n\n            case 'body':\n\n                // render body selections\n                bounds = item.bounds;\n                context.beginPath();\n                context.rect(Math.floor(bounds.min.x - 3), Math.floor(bounds.min.y - 3),\n                             Math.floor(bounds.max.x - bounds.min.x + 6), Math.floor(bounds.max.y - bounds.min.y + 6));\n                context.closePath();\n                context.stroke();\n\n                break;\n\n            case 'constraint':\n\n                // render constraint selections\n                var point = item.pointA;\n                if (item.bodyA)\n                    point = item.pointB;\n                context.beginPath();\n                context.arc(point.x, point.y, 10, 0, 2 * Math.PI);\n                context.closePath();\n                context.stroke();\n\n                break;\n\n            }\n\n            context.setLineDash([]);\n            context.translate(-0.5, -0.5);\n        }\n\n        // render selection region\n        if (inspector.selectStart !== null) {\n            context.translate(0.5, 0.5);\n            context.lineWidth = 1;\n            context.strokeStyle = 'rgba(255,165,0,0.6)';\n            context.fillStyle = 'rgba(255,165,0,0.1)';\n            bounds = inspector.selectBounds;\n            context.beginPath();\n            context.rect(Math.floor(bounds.min.x), Math.floor(bounds.min.y),\n                         Math.floor(bounds.max.x - bounds.min.x), Math.floor(bounds.max.y - bounds.min.y));\n            context.closePath();\n            context.stroke();\n            context.fill();\n            context.translate(-0.5, -0.5);\n        }\n\n        if (options.hasBounds)\n            context.setTransform(1, 0, 0, 1, 0, 0);\n    };\n\n    /**\n     * Description\n     * @method _createCanvas\n     * @private\n     * @param {} width\n     * @param {} height\n     * @return canvas\n     */\n    var _createCanvas = function(width, height) {\n        var canvas = document.createElement('canvas');\n        canvas.width = width;\n        canvas.height = height;\n        canvas.oncontextmenu = function() { return false; };\n        canvas.onselectstart = function() { return false; };\n        return canvas;\n    };\n\n    /**\n     * Gets the pixel ratio of the canvas.\n     * @method _getPixelRatio\n     * @private\n     * @param {HTMLElement} canvas\n     * @return {Number} pixel ratio\n     */\n    var _getPixelRatio = function(canvas) {\n        var context = canvas.getContext('2d'),\n            devicePixelRatio = window.devicePixelRatio || 1,\n            backingStorePixelRatio = context.webkitBackingStorePixelRatio || context.mozBackingStorePixelRatio\n                                      || context.msBackingStorePixelRatio || context.oBackingStorePixelRatio\n                                      || context.backingStorePixelRatio || 1;\n\n        return devicePixelRatio / backingStorePixelRatio;\n    };\n\n    /**\n     * Gets the requested texture (an Image) via its path\n     * @method _getTexture\n     * @private\n     * @param {render} render\n     * @param {string} imagePath\n     * @return {Image} texture\n     */\n    var _getTexture = function(render, imagePath) {\n        var image = render.textures[imagePath];\n\n        if (image)\n            return image;\n\n        image = render.textures[imagePath] = new Image();\n        image.src = imagePath;\n\n        return image;\n    };\n\n    /**\n     * Applies the background to the canvas using CSS.\n     * @method applyBackground\n     * @private\n     * @param {render} render\n     * @param {string} background\n     */\n    var _applyBackground = function(render, background) {\n        var cssBackground = background;\n\n        if (/(jpg|gif|png)$/.test(background))\n            cssBackground = 'url(' + background + ')';\n\n        render.canvas.style.background = cssBackground;\n        render.canvas.style.backgroundSize = \"contain\";\n        render.currentBackground = background;\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired before rendering\n    *\n    * @event beforeRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after rendering\n    *\n    * @event afterRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * A back-reference to the `Matter.Render` module.\n     *\n     * @property controller\n     * @type render\n     */\n\n    /**\n     * A reference to the `Matter.Engine` instance to be used.\n     *\n     * @property engine\n     * @type engine\n     */\n\n    /**\n     * A reference to the element where the canvas is to be inserted (if `render.canvas` has not been specified)\n     *\n     * @property element\n     * @type HTMLElement\n     * @default null\n     */\n\n    /**\n     * The canvas element to render to. If not specified, one will be created if `render.element` has been specified.\n     *\n     * @property canvas\n     * @type HTMLCanvasElement\n     * @default null\n     */\n\n    /**\n     * The configuration options of the renderer.\n     *\n     * @property options\n     * @type {}\n     */\n\n    /**\n     * The target width in pixels of the `render.canvas` to be created.\n     *\n     * @property options.width\n     * @type number\n     * @default 800\n     */\n\n    /**\n     * The target height in pixels of the `render.canvas` to be created.\n     *\n     * @property options.height\n     * @type number\n     * @default 600\n     */\n\n    /**\n     * A flag that specifies if `render.bounds` should be used when rendering.\n     *\n     * @property options.hasBounds\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A `Bounds` object that specifies the drawing view region.\n     * Rendering will be automatically transformed and scaled to fit within the canvas size (`render.options.width` and `render.options.height`).\n     * This allows for creating views that can pan or zoom around the scene.\n     * You must also set `render.options.hasBounds` to `true` to enable bounded rendering.\n     *\n     * @property bounds\n     * @type bounds\n     */\n\n    /**\n     * The 2d rendering context from the `render.canvas` element.\n     *\n     * @property context\n     * @type CanvasRenderingContext2D\n     */\n\n    /**\n     * The sprite texture cache.\n     *\n     * @property textures\n     * @type {}\n     */\n\n})();\n\n},{\"../body/Composite\":2,\"../collision/Grid\":6,\"../core/Common\":14,\"../core/Events\":16,\"../core/Mouse\":19,\"../geometry/Bounds\":26,\"../geometry/Vector\":28}],32:[function(_dereq_,module,exports){\n/**\n* The `Matter.RenderPixi` module is an example renderer using pixi.js.\n* See also `Matter.Render` for a canvas based renderer.\n*\n* @class RenderPixi\n* @deprecated the Matter.RenderPixi module will soon be removed from the Matter.js core.\n* It will likely be moved to its own repository (but maintenance will be limited).\n*/\n\nvar RenderPixi = {};\n\nmodule.exports = RenderPixi;\n\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Composite = _dereq_('../body/Composite');\nvar Common = _dereq_('../core/Common');\nvar Events = _dereq_('../core/Events');\nvar Vector = _dereq_('../geometry/Vector');\n\n(function() {\n\n    var _requestAnimationFrame,\n        _cancelAnimationFrame;\n\n    if (typeof window !== 'undefined') {\n        _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\n                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame \n                                      || function(callback){ window.setTimeout(function() { callback(Common.now()); }, 1000 / 60); };\n   \n        _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame \n                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;\n    }\n    \n    /**\n     * Creates a new Pixi.js WebGL renderer\n     * @method create\n     * @param {object} options\n     * @return {RenderPixi} A new renderer\n     * @deprecated\n     */\n    RenderPixi.create = function(options) {\n        Common.warn('RenderPixi.create: Matter.RenderPixi is deprecated (see docs)');\n\n        var defaults = {\n            controller: RenderPixi,\n            engine: null,\n            element: null,\n            frameRequestId: null,\n            canvas: null,\n            renderer: null,\n            container: null,\n            spriteContainer: null,\n            pixiOptions: null,\n            options: {\n                width: 800,\n                height: 600,\n                background: '#fafafa',\n                wireframeBackground: '#222',\n                hasBounds: false,\n                enabled: true,\n                wireframes: true,\n                showSleeping: true,\n                showDebug: false,\n                showBroadphase: false,\n                showBounds: false,\n                showVelocity: false,\n                showCollisions: false,\n                showAxes: false,\n                showPositions: false,\n                showAngleIndicator: false,\n                showIds: false,\n                showShadows: false\n            }\n        };\n\n        var render = Common.extend(defaults, options),\n            transparent = !render.options.wireframes && render.options.background === 'transparent';\n\n        // init pixi\n        render.pixiOptions = render.pixiOptions || {\n            view: render.canvas,\n            transparent: transparent,\n            antialias: true,\n            backgroundColor: options.background\n        };\n\n        render.mouse = options.mouse;\n        render.engine = options.engine;\n        render.renderer = render.renderer || new PIXI.WebGLRenderer(render.options.width, render.options.height, render.pixiOptions);\n        render.container = render.container || new PIXI.Container();\n        render.spriteContainer = render.spriteContainer || new PIXI.Container();\n        render.canvas = render.canvas || render.renderer.view;\n        render.bounds = render.bounds || { \n            min: {\n                x: 0,\n                y: 0\n            }, \n            max: { \n                x: render.options.width,\n                y: render.options.height\n            }\n        };\n\n        // event listeners\n        Events.on(render.engine, 'beforeUpdate', function() {\n            RenderPixi.clear(render);\n        });\n\n        // caches\n        render.textures = {};\n        render.sprites = {};\n        render.primitives = {};\n\n        // use a sprite batch for performance\n        render.container.addChild(render.spriteContainer);\n\n        // insert canvas\n        if (Common.isElement(render.element)) {\n            render.element.appendChild(render.canvas);\n        } else {\n            Common.warn('No \"render.element\" passed, \"render.canvas\" was not inserted into document.');\n        }\n\n        // prevent menus on canvas\n        render.canvas.oncontextmenu = function() { return false; };\n        render.canvas.onselectstart = function() { return false; };\n\n        return render;\n    };\n\n    /**\n     * Continuously updates the render canvas on the `requestAnimationFrame` event.\n     * @method run\n     * @param {render} render\n     * @deprecated\n     */\n    RenderPixi.run = function(render) {\n        (function loop(time){\n            render.frameRequestId = _requestAnimationFrame(loop);\n            RenderPixi.world(render);\n        })();\n    };\n\n    /**\n     * Ends execution of `Render.run` on the given `render`, by canceling the animation frame request event loop.\n     * @method stop\n     * @param {render} render\n     * @deprecated\n     */\n    RenderPixi.stop = function(render) {\n        _cancelAnimationFrame(render.frameRequestId);\n    };\n\n    /**\n     * Clears the scene graph\n     * @method clear\n     * @param {RenderPixi} render\n     * @deprecated\n     */\n    RenderPixi.clear = function(render) {\n        var container = render.container,\n            spriteContainer = render.spriteContainer;\n\n        // clear stage container\n        while (container.children[0]) { \n            container.removeChild(container.children[0]); \n        }\n\n        // clear sprite batch\n        while (spriteContainer.children[0]) { \n            spriteContainer.removeChild(spriteContainer.children[0]); \n        }\n\n        var bgSprite = render.sprites['bg-0'];\n\n        // clear caches\n        render.textures = {};\n        render.sprites = {};\n        render.primitives = {};\n\n        // set background sprite\n        render.sprites['bg-0'] = bgSprite;\n        if (bgSprite)\n            container.addChildAt(bgSprite, 0);\n\n        // add sprite batch back into container\n        render.container.addChild(render.spriteContainer);\n\n        // reset background state\n        render.currentBackground = null;\n\n        // reset bounds transforms\n        container.scale.set(1, 1);\n        container.position.set(0, 0);\n    };\n\n    /**\n     * Sets the background of the canvas \n     * @method setBackground\n     * @param {RenderPixi} render\n     * @param {string} background\n     * @deprecated\n     */\n    RenderPixi.setBackground = function(render, background) {\n        if (render.currentBackground !== background) {\n            var isColor = background.indexOf && background.indexOf('#') !== -1,\n                bgSprite = render.sprites['bg-0'];\n\n            if (isColor) {\n                // if solid background color\n                var color = Common.colorToNumber(background);\n                render.renderer.backgroundColor = color;\n\n                // remove background sprite if existing\n                if (bgSprite)\n                    render.container.removeChild(bgSprite); \n            } else {\n                // initialise background sprite if needed\n                if (!bgSprite) {\n                    var texture = _getTexture(render, background);\n\n                    bgSprite = render.sprites['bg-0'] = new PIXI.Sprite(texture);\n                    bgSprite.position.x = 0;\n                    bgSprite.position.y = 0;\n                    render.container.addChildAt(bgSprite, 0);\n                }\n            }\n\n            render.currentBackground = background;\n        }\n    };\n\n    /**\n     * Description\n     * @method world\n     * @param {engine} engine\n     * @deprecated\n     */\n    RenderPixi.world = function(render) {\n        var engine = render.engine,\n            world = engine.world,\n            renderer = render.renderer,\n            container = render.container,\n            options = render.options,\n            bodies = Composite.allBodies(world),\n            allConstraints = Composite.allConstraints(world),\n            constraints = [],\n            i;\n\n        if (options.wireframes) {\n            RenderPixi.setBackground(render, options.wireframeBackground);\n        } else {\n            RenderPixi.setBackground(render, options.background);\n        }\n\n        // handle bounds\n        var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n            boundsHeight = render.bounds.max.y - render.bounds.min.y,\n            boundsScaleX = boundsWidth / render.options.width,\n            boundsScaleY = boundsHeight / render.options.height;\n\n        if (options.hasBounds) {\n            // Hide bodies that are not in view\n            for (i = 0; i < bodies.length; i++) {\n                var body = bodies[i];\n                body.render.sprite.visible = Bounds.overlaps(body.bounds, render.bounds);\n            }\n\n            // filter out constraints that are not in view\n            for (i = 0; i < allConstraints.length; i++) {\n                var constraint = allConstraints[i],\n                    bodyA = constraint.bodyA,\n                    bodyB = constraint.bodyB,\n                    pointAWorld = constraint.pointA,\n                    pointBWorld = constraint.pointB;\n\n                if (bodyA) pointAWorld = Vector.add(bodyA.position, constraint.pointA);\n                if (bodyB) pointBWorld = Vector.add(bodyB.position, constraint.pointB);\n\n                if (!pointAWorld || !pointBWorld)\n                    continue;\n\n                if (Bounds.contains(render.bounds, pointAWorld) || Bounds.contains(render.bounds, pointBWorld))\n                    constraints.push(constraint);\n            }\n\n            // transform the view\n            container.scale.set(1 / boundsScaleX, 1 / boundsScaleY);\n            container.position.set(-render.bounds.min.x * (1 / boundsScaleX), -render.bounds.min.y * (1 / boundsScaleY));\n        } else {\n            constraints = allConstraints;\n        }\n\n        for (i = 0; i < bodies.length; i++)\n            RenderPixi.body(render, bodies[i]);\n\n        for (i = 0; i < constraints.length; i++)\n            RenderPixi.constraint(render, constraints[i]);\n\n        renderer.render(container);\n    };\n\n\n    /**\n     * Description\n     * @method constraint\n     * @param {engine} engine\n     * @param {constraint} constraint\n     * @deprecated\n     */\n    RenderPixi.constraint = function(render, constraint) {\n        var engine = render.engine,\n            bodyA = constraint.bodyA,\n            bodyB = constraint.bodyB,\n            pointA = constraint.pointA,\n            pointB = constraint.pointB,\n            container = render.container,\n            constraintRender = constraint.render,\n            primitiveId = 'c-' + constraint.id,\n            primitive = render.primitives[primitiveId];\n\n        // initialise constraint primitive if not existing\n        if (!primitive)\n            primitive = render.primitives[primitiveId] = new PIXI.Graphics();\n\n        // don't render if constraint does not have two end points\n        if (!constraintRender.visible || !constraint.pointA || !constraint.pointB) {\n            primitive.clear();\n            return;\n        }\n\n        // add to scene graph if not already there\n        if (Common.indexOf(container.children, primitive) === -1)\n            container.addChild(primitive);\n\n        // render the constraint on every update, since they can change dynamically\n        primitive.clear();\n        primitive.beginFill(0, 0);\n        primitive.lineStyle(constraintRender.lineWidth, Common.colorToNumber(constraintRender.strokeStyle), 1);\n        \n        if (bodyA) {\n            primitive.moveTo(bodyA.position.x + pointA.x, bodyA.position.y + pointA.y);\n        } else {\n            primitive.moveTo(pointA.x, pointA.y);\n        }\n\n        if (bodyB) {\n            primitive.lineTo(bodyB.position.x + pointB.x, bodyB.position.y + pointB.y);\n        } else {\n            primitive.lineTo(pointB.x, pointB.y);\n        }\n\n        primitive.endFill();\n    };\n    \n    /**\n     * Description\n     * @method body\n     * @param {engine} engine\n     * @param {body} body\n     * @deprecated\n     */\n    RenderPixi.body = function(render, body) {\n        var engine = render.engine,\n            bodyRender = body.render;\n\n        if (!bodyRender.visible)\n            return;\n\n        if (bodyRender.sprite && bodyRender.sprite.texture) {\n            var spriteId = 'b-' + body.id,\n                sprite = render.sprites[spriteId],\n                spriteContainer = render.spriteContainer;\n\n            // initialise body sprite if not existing\n            if (!sprite)\n                sprite = render.sprites[spriteId] = _createBodySprite(render, body);\n\n            // add to scene graph if not already there\n            if (Common.indexOf(spriteContainer.children, sprite) === -1)\n                spriteContainer.addChild(sprite);\n\n            // update body sprite\n            sprite.position.x = body.position.x;\n            sprite.position.y = body.position.y;\n            sprite.rotation = body.angle;\n            sprite.scale.x = bodyRender.sprite.xScale || 1;\n            sprite.scale.y = bodyRender.sprite.yScale || 1;\n        } else {\n            var primitiveId = 'b-' + body.id,\n                primitive = render.primitives[primitiveId],\n                container = render.container;\n\n            // initialise body primitive if not existing\n            if (!primitive) {\n                primitive = render.primitives[primitiveId] = _createBodyPrimitive(render, body);\n                primitive.initialAngle = body.angle;\n            }\n\n            // add to scene graph if not already there\n            if (Common.indexOf(container.children, primitive) === -1)\n                container.addChild(primitive);\n\n            // update body primitive\n            primitive.position.x = body.position.x;\n            primitive.position.y = body.position.y;\n            primitive.rotation = body.angle - primitive.initialAngle;\n        }\n    };\n\n    /**\n     * Creates a body sprite\n     * @method _createBodySprite\n     * @private\n     * @param {RenderPixi} render\n     * @param {body} body\n     * @return {PIXI.Sprite} sprite\n     * @deprecated\n     */\n    var _createBodySprite = function(render, body) {\n        var bodyRender = body.render,\n            texturePath = bodyRender.sprite.texture,\n            texture = _getTexture(render, texturePath),\n            sprite = new PIXI.Sprite(texture);\n\n        sprite.anchor.x = body.render.sprite.xOffset;\n        sprite.anchor.y = body.render.sprite.yOffset;\n\n        return sprite;\n    };\n\n    /**\n     * Creates a body primitive\n     * @method _createBodyPrimitive\n     * @private\n     * @param {RenderPixi} render\n     * @param {body} body\n     * @return {PIXI.Graphics} graphics\n     * @deprecated\n     */\n    var _createBodyPrimitive = function(render, body) {\n        var bodyRender = body.render,\n            options = render.options,\n            primitive = new PIXI.Graphics(),\n            fillStyle = Common.colorToNumber(bodyRender.fillStyle),\n            strokeStyle = Common.colorToNumber(bodyRender.strokeStyle),\n            strokeStyleIndicator = Common.colorToNumber(bodyRender.strokeStyle),\n            strokeStyleWireframe = Common.colorToNumber('#bbb'),\n            strokeStyleWireframeIndicator = Common.colorToNumber('#CD5C5C'),\n            part;\n\n        primitive.clear();\n\n        // handle compound parts\n        for (var k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n            part = body.parts[k];\n\n            if (!options.wireframes) {\n                primitive.beginFill(fillStyle, 1);\n                primitive.lineStyle(bodyRender.lineWidth, strokeStyle, 1);\n            } else {\n                primitive.beginFill(0, 0);\n                primitive.lineStyle(1, strokeStyleWireframe, 1);\n            }\n\n            primitive.moveTo(part.vertices[0].x - body.position.x, part.vertices[0].y - body.position.y);\n\n            for (var j = 1; j < part.vertices.length; j++) {\n                primitive.lineTo(part.vertices[j].x - body.position.x, part.vertices[j].y - body.position.y);\n            }\n\n            primitive.lineTo(part.vertices[0].x - body.position.x, part.vertices[0].y - body.position.y);\n\n            primitive.endFill();\n\n            // angle indicator\n            if (options.showAngleIndicator || options.showAxes) {\n                primitive.beginFill(0, 0);\n\n                if (options.wireframes) {\n                    primitive.lineStyle(1, strokeStyleWireframeIndicator, 1);\n                } else {\n                    primitive.lineStyle(1, strokeStyleIndicator);\n                }\n\n                primitive.moveTo(part.position.x - body.position.x, part.position.y - body.position.y);\n                primitive.lineTo(((part.vertices[0].x + part.vertices[part.vertices.length-1].x) / 2 - body.position.x), \n                                 ((part.vertices[0].y + part.vertices[part.vertices.length-1].y) / 2 - body.position.y));\n\n                primitive.endFill();\n            }\n        }\n\n        return primitive;\n    };\n\n    /**\n     * Gets the requested texture (a PIXI.Texture) via its path\n     * @method _getTexture\n     * @private\n     * @param {RenderPixi} render\n     * @param {string} imagePath\n     * @return {PIXI.Texture} texture\n     * @deprecated\n     */\n    var _getTexture = function(render, imagePath) {\n        var texture = render.textures[imagePath];\n\n        if (!texture)\n            texture = render.textures[imagePath] = PIXI.Texture.fromImage(imagePath);\n\n        return texture;\n    };\n\n})();\n\n},{\"../body/Composite\":2,\"../core/Common\":14,\"../core/Events\":16,\"../geometry/Bounds\":26,\"../geometry/Vector\":28}]},{},[30])(30)\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/matter-js/build/matter.js\n// module id = 28\n// module chunks = 0","module.exports = {\n    decomp: polygonDecomp,\n    quickDecomp: polygonQuickDecomp,\n    isSimple: polygonIsSimple,\n    removeCollinearPoints: polygonRemoveCollinearPoints,\n    makeCCW: polygonMakeCCW\n};\n\n/**\n * Compute the intersection between two lines.\n * @static\n * @method lineInt\n * @param  {Array}  l1          Line vector 1\n * @param  {Array}  l2          Line vector 2\n * @param  {Number} precision   Precision to use when checking if the lines are parallel\n * @return {Array}              The intersection point.\n */\nfunction lineInt(l1,l2,precision){\n    precision = precision || 0;\n    var i = [0,0]; // point\n    var a1, b1, c1, a2, b2, c2, det; // scalars\n    a1 = l1[1][1] - l1[0][1];\n    b1 = l1[0][0] - l1[1][0];\n    c1 = a1 * l1[0][0] + b1 * l1[0][1];\n    a2 = l2[1][1] - l2[0][1];\n    b2 = l2[0][0] - l2[1][0];\n    c2 = a2 * l2[0][0] + b2 * l2[0][1];\n    det = a1 * b2 - a2*b1;\n    if (!scalar_eq(det, 0, precision)) { // lines are not parallel\n        i[0] = (b2 * c1 - b1 * c2) / det;\n        i[1] = (a1 * c2 - a2 * c1) / det;\n    }\n    return i;\n}\n\n/**\n * Checks if two line segments intersects.\n * @method segmentsIntersect\n * @param {Array} p1 The start vertex of the first line segment.\n * @param {Array} p2 The end vertex of the first line segment.\n * @param {Array} q1 The start vertex of the second line segment.\n * @param {Array} q2 The end vertex of the second line segment.\n * @return {Boolean} True if the two line segments intersect\n */\nfunction lineSegmentsIntersect(p1, p2, q1, q2){\n\tvar dx = p2[0] - p1[0];\n\tvar dy = p2[1] - p1[1];\n\tvar da = q2[0] - q1[0];\n\tvar db = q2[1] - q1[1];\n\n\t// segments are parallel\n\tif((da*dy - db*dx) === 0){\n\t\treturn false;\n\t}\n\n\tvar s = (dx * (q1[1] - p1[1]) + dy * (p1[0] - q1[0])) / (da * dy - db * dx);\n\tvar t = (da * (p1[1] - q1[1]) + db * (q1[0] - p1[0])) / (db * dx - da * dy);\n\n\treturn (s>=0 && s<=1 && t>=0 && t<=1);\n}\n\n/**\n * Get the area of a triangle spanned by the three given points. Note that the area will be negative if the points are not given in counter-clockwise order.\n * @static\n * @method area\n * @param  {Array} a\n * @param  {Array} b\n * @param  {Array} c\n * @return {Number}\n */\nfunction triangleArea(a,b,c){\n    return (((b[0] - a[0])*(c[1] - a[1]))-((c[0] - a[0])*(b[1] - a[1])));\n}\n\nfunction isLeft(a,b,c){\n    return triangleArea(a,b,c) > 0;\n}\n\nfunction isLeftOn(a,b,c) {\n    return triangleArea(a, b, c) >= 0;\n}\n\nfunction isRight(a,b,c) {\n    return triangleArea(a, b, c) < 0;\n}\n\nfunction isRightOn(a,b,c) {\n    return triangleArea(a, b, c) <= 0;\n}\n\nvar tmpPoint1 = [],\n    tmpPoint2 = [];\n\n/**\n * Check if three points are collinear\n * @method collinear\n * @param  {Array} a\n * @param  {Array} b\n * @param  {Array} c\n * @param  {Number} [thresholdAngle=0] Threshold angle to use when comparing the vectors. The function will return true if the angle between the resulting vectors is less than this value. Use zero for max precision.\n * @return {Boolean}\n */\nfunction collinear(a,b,c,thresholdAngle) {\n    if(!thresholdAngle){\n        return triangleArea(a, b, c) === 0;\n    } else {\n        var ab = tmpPoint1,\n            bc = tmpPoint2;\n\n        ab[0] = b[0]-a[0];\n        ab[1] = b[1]-a[1];\n        bc[0] = c[0]-b[0];\n        bc[1] = c[1]-b[1];\n\n        var dot = ab[0]*bc[0] + ab[1]*bc[1],\n            magA = Math.sqrt(ab[0]*ab[0] + ab[1]*ab[1]),\n            magB = Math.sqrt(bc[0]*bc[0] + bc[1]*bc[1]),\n            angle = Math.acos(dot/(magA*magB));\n        return angle < thresholdAngle;\n    }\n}\n\nfunction sqdist(a,b){\n    var dx = b[0] - a[0];\n    var dy = b[1] - a[1];\n    return dx * dx + dy * dy;\n}\n\n/**\n * Get a vertex at position i. It does not matter if i is out of bounds, this function will just cycle.\n * @method at\n * @param  {Number} i\n * @return {Array}\n */\nfunction polygonAt(polygon, i){\n    var s = polygon.length;\n    return polygon[i < 0 ? i % s + s : i % s];\n}\n\n/**\n * Clear the polygon data\n * @method clear\n * @return {Array}\n */\nfunction polygonClear(polygon){\n    polygon.length = 0;\n}\n\n/**\n * Append points \"from\" to \"to\"-1 from an other polygon \"poly\" onto this one.\n * @method append\n * @param {Polygon} poly The polygon to get points from.\n * @param {Number}  from The vertex index in \"poly\".\n * @param {Number}  to The end vertex index in \"poly\". Note that this vertex is NOT included when appending.\n * @return {Array}\n */\nfunction polygonAppend(polygon, poly, from, to){\n    for(var i=from; i<to; i++){\n        polygon.push(poly[i]);\n    }\n}\n\n/**\n * Make sure that the polygon vertices are ordered counter-clockwise.\n * @method makeCCW\n */\nfunction polygonMakeCCW(polygon){\n    var br = 0,\n        v = polygon;\n\n    // find bottom right point\n    for (var i = 1; i < polygon.length; ++i) {\n        if (v[i][1] < v[br][1] || (v[i][1] === v[br][1] && v[i][0] > v[br][0])) {\n            br = i;\n        }\n    }\n\n    // reverse poly if clockwise\n    if (!isLeft(polygonAt(polygon, br - 1), polygonAt(polygon, br), polygonAt(polygon, br + 1))) {\n        polygonReverse(polygon);\n    }\n}\n\n/**\n * Reverse the vertices in the polygon\n * @method reverse\n */\nfunction polygonReverse(polygon){\n    var tmp = [];\n    var N = polygon.length;\n    for(var i=0; i!==N; i++){\n        tmp.push(polygon.pop());\n    }\n    for(var i=0; i!==N; i++){\n\t\tpolygon[i] = tmp[i];\n    }\n}\n\n/**\n * Check if a point in the polygon is a reflex point\n * @method isReflex\n * @param  {Number}  i\n * @return {Boolean}\n */\nfunction polygonIsReflex(polygon, i){\n    return isRight(polygonAt(polygon, i - 1), polygonAt(polygon, i), polygonAt(polygon, i + 1));\n}\n\nvar tmpLine1=[],\n    tmpLine2=[];\n\n/**\n * Check if two vertices in the polygon can see each other\n * @method canSee\n * @param  {Number} a Vertex index 1\n * @param  {Number} b Vertex index 2\n * @return {Boolean}\n */\nfunction polygonCanSee(polygon, a,b) {\n    var p, dist, l1=tmpLine1, l2=tmpLine2;\n\n    if (isLeftOn(polygonAt(polygon, a + 1), polygonAt(polygon, a), polygonAt(polygon, b)) && isRightOn(polygonAt(polygon, a - 1), polygonAt(polygon, a), polygonAt(polygon, b))) {\n        return false;\n    }\n    dist = sqdist(polygonAt(polygon, a), polygonAt(polygon, b));\n    for (var i = 0; i !== polygon.length; ++i) { // for each edge\n        if ((i + 1) % polygon.length === a || i === a){ // ignore incident edges\n            continue;\n        }\n        if (isLeftOn(polygonAt(polygon, a), polygonAt(polygon, b), polygonAt(polygon, i + 1)) && isRightOn(polygonAt(polygon, a), polygonAt(polygon, b), polygonAt(polygon, i))) { // if diag intersects an edge\n            l1[0] = polygonAt(polygon, a);\n            l1[1] = polygonAt(polygon, b);\n            l2[0] = polygonAt(polygon, i);\n            l2[1] = polygonAt(polygon, i + 1);\n            p = lineInt(l1,l2);\n            if (sqdist(polygonAt(polygon, a), p) < dist) { // if edge is blocking visibility to b\n                return false;\n            }\n        }\n    }\n\n    return true;\n}\n\n/**\n * Copy the polygon from vertex i to vertex j.\n * @method copy\n * @param  {Number} i\n * @param  {Number} j\n * @param  {Polygon} [targetPoly]   Optional target polygon to save in.\n * @return {Polygon}                The resulting copy.\n */\nfunction polygonCopy(polygon, i,j,targetPoly){\n    var p = targetPoly || [];\n    polygonClear(p);\n    if (i < j) {\n        // Insert all vertices from i to j\n        for(var k=i; k<=j; k++){\n            p.push(polygon[k]);\n        }\n\n    } else {\n\n        // Insert vertices 0 to j\n        for(var k=0; k<=j; k++){\n            p.push(polygon[k]);\n        }\n\n        // Insert vertices i to end\n        for(var k=i; k<polygon.length; k++){\n            p.push(polygon[k]);\n        }\n    }\n\n    return p;\n}\n\n/**\n * Decomposes the polygon into convex pieces. Returns a list of edges [[p1,p2],[p2,p3],...] that cuts the polygon.\n * Note that this algorithm has complexity O(N^4) and will be very slow for polygons with many vertices.\n * @method getCutEdges\n * @return {Array}\n */\nfunction polygonGetCutEdges(polygon) {\n    var min=[], tmp1=[], tmp2=[], tmpPoly = [];\n    var nDiags = Number.MAX_VALUE;\n\n    for (var i = 0; i < polygon.length; ++i) {\n        if (polygonIsReflex(polygon, i)) {\n            for (var j = 0; j < polygon.length; ++j) {\n                if (polygonCanSee(polygon, i, j)) {\n                    tmp1 = polygonGetCutEdges(polygonCopy(polygon, i, j, tmpPoly));\n                    tmp2 = polygonGetCutEdges(polygonCopy(polygon, j, i, tmpPoly));\n\n                    for(var k=0; k<tmp2.length; k++){\n                        tmp1.push(tmp2[k]);\n                    }\n\n                    if (tmp1.length < nDiags) {\n                        min = tmp1;\n                        nDiags = tmp1.length;\n                        min.push([polygonAt(polygon, i), polygonAt(polygon, j)]);\n                    }\n                }\n            }\n        }\n    }\n\n    return min;\n}\n\n/**\n * Decomposes the polygon into one or more convex sub-Polygons.\n * @method decomp\n * @return {Array} An array or Polygon objects.\n */\nfunction polygonDecomp(polygon){\n    var edges = polygonGetCutEdges(polygon);\n    if(edges.length > 0){\n        return polygonSlice(polygon, edges);\n    } else {\n        return [polygon];\n    }\n}\n\n/**\n * Slices the polygon given one or more cut edges. If given one, this function will return two polygons (false on failure). If many, an array of polygons.\n * @method slice\n * @param {Array} cutEdges A list of edges, as returned by .getCutEdges()\n * @return {Array}\n */\nfunction polygonSlice(polygon, cutEdges){\n    if(cutEdges.length === 0){\n\t\treturn [polygon];\n    }\n    if(cutEdges instanceof Array && cutEdges.length && cutEdges[0] instanceof Array && cutEdges[0].length===2 && cutEdges[0][0] instanceof Array){\n\n        var polys = [polygon];\n\n        for(var i=0; i<cutEdges.length; i++){\n            var cutEdge = cutEdges[i];\n            // Cut all polys\n            for(var j=0; j<polys.length; j++){\n                var poly = polys[j];\n                var result = polygonSlice(poly, cutEdge);\n                if(result){\n                    // Found poly! Cut and quit\n                    polys.splice(j,1);\n                    polys.push(result[0],result[1]);\n                    break;\n                }\n            }\n        }\n\n        return polys;\n    } else {\n\n        // Was given one edge\n        var cutEdge = cutEdges;\n        var i = polygon.indexOf(cutEdge[0]);\n        var j = polygon.indexOf(cutEdge[1]);\n\n        if(i !== -1 && j !== -1){\n            return [polygonCopy(polygon, i,j),\n                    polygonCopy(polygon, j,i)];\n        } else {\n            return false;\n        }\n    }\n}\n\n/**\n * Checks that the line segments of this polygon do not intersect each other.\n * @method isSimple\n * @param  {Array} path An array of vertices e.g. [[0,0],[0,1],...]\n * @return {Boolean}\n * @todo Should it check all segments with all others?\n */\nfunction polygonIsSimple(polygon){\n    var path = polygon, i;\n    // Check\n    for(i=0; i<path.length-1; i++){\n        for(var j=0; j<i-1; j++){\n            if(lineSegmentsIntersect(path[i], path[i+1], path[j], path[j+1] )){\n                return false;\n            }\n        }\n    }\n\n    // Check the segment between the last and the first point to all others\n    for(i=1; i<path.length-2; i++){\n        if(lineSegmentsIntersect(path[0], path[path.length-1], path[i], path[i+1] )){\n            return false;\n        }\n    }\n\n    return true;\n}\n\nfunction getIntersectionPoint(p1, p2, q1, q2, delta){\n\tdelta = delta || 0;\n\tvar a1 = p2[1] - p1[1];\n\tvar b1 = p1[0] - p2[0];\n\tvar c1 = (a1 * p1[0]) + (b1 * p1[1]);\n\tvar a2 = q2[1] - q1[1];\n\tvar b2 = q1[0] - q2[0];\n\tvar c2 = (a2 * q1[0]) + (b2 * q1[1]);\n\tvar det = (a1 * b2) - (a2 * b1);\n\n\tif(!scalar_eq(det,0,delta)){\n\t\treturn [((b2 * c1) - (b1 * c2)) / det, ((a1 * c2) - (a2 * c1)) / det];\n\t} else {\n\t\treturn [0,0];\n    }\n}\n\n/**\n * Quickly decompose the Polygon into convex sub-polygons.\n * @method quickDecomp\n * @param  {Array} result\n * @param  {Array} [reflexVertices]\n * @param  {Array} [steinerPoints]\n * @param  {Number} [delta]\n * @param  {Number} [maxlevel]\n * @param  {Number} [level]\n * @return {Array}\n */\nfunction polygonQuickDecomp(polygon, result,reflexVertices,steinerPoints,delta,maxlevel,level){\n    maxlevel = maxlevel || 100;\n    level = level || 0;\n    delta = delta || 25;\n    result = typeof(result)!==\"undefined\" ? result : [];\n    reflexVertices = reflexVertices || [];\n    steinerPoints = steinerPoints || [];\n\n    var upperInt=[0,0], lowerInt=[0,0], p=[0,0]; // Points\n    var upperDist=0, lowerDist=0, d=0, closestDist=0; // scalars\n    var upperIndex=0, lowerIndex=0, closestIndex=0; // Integers\n    var lowerPoly=[], upperPoly=[]; // polygons\n    var poly = polygon,\n        v = polygon;\n\n    if(v.length < 3){\n\t\treturn result;\n    }\n\n    level++;\n    if(level > maxlevel){\n        console.warn(\"quickDecomp: max level (\"+maxlevel+\") reached.\");\n        return result;\n    }\n\n    for (var i = 0; i < polygon.length; ++i) {\n        if (polygonIsReflex(poly, i)) {\n            reflexVertices.push(poly[i]);\n            upperDist = lowerDist = Number.MAX_VALUE;\n\n\n            for (var j = 0; j < polygon.length; ++j) {\n                if (isLeft(polygonAt(poly, i - 1), polygonAt(poly, i), polygonAt(poly, j)) && isRightOn(polygonAt(poly, i - 1), polygonAt(poly, i), polygonAt(poly, j - 1))) { // if line intersects with an edge\n                    p = getIntersectionPoint(polygonAt(poly, i - 1), polygonAt(poly, i), polygonAt(poly, j), polygonAt(poly, j - 1)); // find the point of intersection\n                    if (isRight(polygonAt(poly, i + 1), polygonAt(poly, i), p)) { // make sure it's inside the poly\n                        d = sqdist(poly[i], p);\n                        if (d < lowerDist) { // keep only the closest intersection\n                            lowerDist = d;\n                            lowerInt = p;\n                            lowerIndex = j;\n                        }\n                    }\n                }\n                if (isLeft(polygonAt(poly, i + 1), polygonAt(poly, i), polygonAt(poly, j + 1)) && isRightOn(polygonAt(poly, i + 1), polygonAt(poly, i), polygonAt(poly, j))) {\n                    p = getIntersectionPoint(polygonAt(poly, i + 1), polygonAt(poly, i), polygonAt(poly, j), polygonAt(poly, j + 1));\n                    if (isLeft(polygonAt(poly, i - 1), polygonAt(poly, i), p)) {\n                        d = sqdist(poly[i], p);\n                        if (d < upperDist) {\n                            upperDist = d;\n                            upperInt = p;\n                            upperIndex = j;\n                        }\n                    }\n                }\n            }\n\n            // if there are no vertices to connect to, choose a point in the middle\n            if (lowerIndex === (upperIndex + 1) % polygon.length) {\n                //console.log(\"Case 1: Vertex(\"+i+\"), lowerIndex(\"+lowerIndex+\"), upperIndex(\"+upperIndex+\"), poly.size(\"+polygon.length+\")\");\n                p[0] = (lowerInt[0] + upperInt[0]) / 2;\n                p[1] = (lowerInt[1] + upperInt[1]) / 2;\n                steinerPoints.push(p);\n\n                if (i < upperIndex) {\n                    //lowerPoly.insert(lowerPoly.end(), poly.begin() + i, poly.begin() + upperIndex + 1);\n                    polygonAppend(lowerPoly, poly, i, upperIndex+1);\n                    lowerPoly.push(p);\n                    upperPoly.push(p);\n                    if (lowerIndex !== 0){\n                        //upperPoly.insert(upperPoly.end(), poly.begin() + lowerIndex, poly.end());\n                        polygonAppend(upperPoly, poly,lowerIndex,poly.length);\n                    }\n                    //upperPoly.insert(upperPoly.end(), poly.begin(), poly.begin() + i + 1);\n                    polygonAppend(upperPoly, poly,0,i+1);\n                } else {\n                    if (i !== 0){\n                        //lowerPoly.insert(lowerPoly.end(), poly.begin() + i, poly.end());\n                        polygonAppend(lowerPoly, poly,i,poly.length);\n                    }\n                    //lowerPoly.insert(lowerPoly.end(), poly.begin(), poly.begin() + upperIndex + 1);\n                    polygonAppend(lowerPoly, poly,0,upperIndex+1);\n                    lowerPoly.push(p);\n                    upperPoly.push(p);\n                    //upperPoly.insert(upperPoly.end(), poly.begin() + lowerIndex, poly.begin() + i + 1);\n                    polygonAppend(upperPoly, poly,lowerIndex,i+1);\n                }\n            } else {\n                // connect to the closest point within the triangle\n                //console.log(\"Case 2: Vertex(\"+i+\"), closestIndex(\"+closestIndex+\"), poly.size(\"+polygon.length+\")\\n\");\n\n                if (lowerIndex > upperIndex) {\n                    upperIndex += polygon.length;\n                }\n                closestDist = Number.MAX_VALUE;\n\n                if(upperIndex < lowerIndex){\n                    return result;\n                }\n\n                for (var j = lowerIndex; j <= upperIndex; ++j) {\n                    if (isLeftOn(polygonAt(poly, i - 1), polygonAt(poly, i), polygonAt(poly, j)) && isRightOn(polygonAt(poly, i + 1), polygonAt(poly, i), polygonAt(poly, j))) {\n                        d = sqdist(polygonAt(poly, i), polygonAt(poly, j));\n                        if (d < closestDist) {\n                            closestDist = d;\n                            closestIndex = j % polygon.length;\n                        }\n                    }\n                }\n\n                if (i < closestIndex) {\n                    polygonAppend(lowerPoly, poly,i,closestIndex+1);\n                    if (closestIndex !== 0){\n                        polygonAppend(upperPoly, poly,closestIndex,v.length);\n                    }\n                    polygonAppend(upperPoly, poly,0,i+1);\n                } else {\n                    if (i !== 0){\n                        polygonAppend(lowerPoly, poly,i,v.length);\n                    }\n                    polygonAppend(lowerPoly, poly,0,closestIndex+1);\n                    polygonAppend(upperPoly, poly,closestIndex,i+1);\n                }\n            }\n\n            // solve smallest poly first\n            if (lowerPoly.length < upperPoly.length) {\n                polygonQuickDecomp(lowerPoly,result,reflexVertices,steinerPoints,delta,maxlevel,level);\n                polygonQuickDecomp(upperPoly,result,reflexVertices,steinerPoints,delta,maxlevel,level);\n            } else {\n                polygonQuickDecomp(upperPoly,result,reflexVertices,steinerPoints,delta,maxlevel,level);\n                polygonQuickDecomp(lowerPoly,result,reflexVertices,steinerPoints,delta,maxlevel,level);\n            }\n\n            return result;\n        }\n    }\n    result.push(polygon);\n\n    return result;\n}\n\n/**\n * Remove collinear points in the polygon.\n * @method removeCollinearPoints\n * @param  {Number} [precision] The threshold angle to use when determining whether two edges are collinear. Use zero for finest precision.\n * @return {Number}           The number of points removed\n */\nfunction polygonRemoveCollinearPoints(polygon, precision){\n    var num = 0;\n    for(var i=polygon.length-1; polygon.length>3 && i>=0; --i){\n        if(collinear(polygonAt(polygon, i-1),polygonAt(polygon, i),polygonAt(polygon, i+1),precision)){\n            // Remove the middle point\n            polygon.splice(i%polygon.length,1);\n            num++;\n        }\n    }\n    return num;\n}\n\n/**\n * Check if two scalars are equal\n * @static\n * @method eq\n * @param  {Number} a\n * @param  {Number} b\n * @param  {Number} [precision]\n * @return {Boolean}\n */\nfunction scalar_eq(a,b,precision){\n    precision = precision || 0;\n    return Math.abs(a-b) < precision;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/poly-decomp/src/index.js\n// module id = 29\n// module chunks = 0","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/registerServiceWorker.js"],"sourceRoot":""}